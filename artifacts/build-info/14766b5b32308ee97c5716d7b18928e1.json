{
	"id": "14766b5b32308ee97c5716d7b18928e1",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"PictureToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\n\r\nimport \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\";\r\nimport \"openzeppelin-contracts/contracts/access/Ownable.sol\";\r\n\r\nimport \"./Picture.sol\";\r\n\r\ncontract PictureToken is ERC721, Ownable {\r\n\r\n    Picture props;\r\n    uint256 public price;\r\n    bool onSale;\r\n\r\n    constructor(address initialOwner, Picture _props)\r\n    ERC721(\"PictureToken\", \"PT\")\r\n    Ownable(initialOwner)\r\n    {\r\n        props = _props;\r\n        price = 0;\r\n        onSale = false;\r\n    }\r\n\r\n    function _baseURI() internal pure override returns (string memory) {\r\n        return \"ipfs://pieceTokenBaseURI\";\r\n    }\r\n\r\n    function getSinglePictureToken() public view returns(tokenData memory) {\r\n        return tokenData(Ownable.owner(), props, price, onSale);\r\n    }\r\n\r\n    function getPrice() public view returns(uint256) {\r\n        return price;\r\n    }\r\n\r\n    function setPrice(uint256 _price) public onlyOwner {\r\n        price = _price;\r\n    }\r\n\r\n    function putOnSale() public onlyOwner {\r\n        onSale = true;\r\n    }\r\n\r\n    function notPutOnSale() public onlyOwner {\r\n        onSale = false;\r\n    }\r\n\r\n    function purchase() public {\r\n        payable(msg.sender).transfer(price);\r\n        transferOwnership(msg.sender);\r\n        price = 0;\r\n        onSale = false;\r\n    }\r\n\r\n}\r\n\r\nstruct tokenData {\r\n    address ownerAddress;\r\n    Picture props;\r\n    uint256 price;\r\n    bool onSale;\r\n}"
			},
			"Picture.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\ncontract Picture {\r\n\r\n    uint256 order;\r\n    string image;\r\n\r\n    constructor (\r\n        uint256 _order,\r\n        string memory _image\r\n    ) {\r\n        order = _order;\r\n        image= _image;\r\n    }\r\n}"
			},
			"openzeppelin-contracts/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {Context} from \"../utils/Context.sol\";\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * The initial owner is set to the address provided by the deployer. This can\r\n * later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    /**\r\n     * @dev The caller account is not authorized to perform an operation.\r\n     */\r\n    error OwnableUnauthorizedAccount(address account);\r\n\r\n    /**\r\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\r\n     */\r\n    error OwnableInvalidOwner(address owner);\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\r\n     */\r\n    constructor(address initialOwner) {\r\n        if (initialOwner == address(0)) {\r\n            revert OwnableInvalidOwner(address(0));\r\n        }\r\n        _transferOwnership(initialOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        _checkOwner();\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if the sender is not the owner.\r\n     */\r\n    function _checkOwner() internal view virtual {\r\n        if (owner() != _msgSender()) {\r\n            revert OwnableUnauthorizedAccount(_msgSender());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby disabling any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        if (newOwner == address(0)) {\r\n            revert OwnableInvalidOwner(address(0));\r\n        }\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Internal function without access restriction.\r\n     */\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}\r\n"
			},
			"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {IERC721} from \"./IERC721.sol\";\r\nimport {IERC721Receiver} from \"./IERC721Receiver.sol\";\r\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\r\nimport {Context} from \"../../utils/Context.sol\";\r\nimport {Strings} from \"../../utils/Strings.sol\";\r\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\r\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\r\n\r\n/**\r\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\r\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\r\n * {ERC721Enumerable}.\r\n */\r\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\r\n    using Strings for uint256;\r\n\r\n    // Token name\r\n    string private _name;\r\n\r\n    // Token symbol\r\n    string private _symbol;\r\n\r\n    mapping(uint256 tokenId => address) private _owners;\r\n\r\n    mapping(address owner => uint256) private _balances;\r\n\r\n    mapping(uint256 tokenId => address) private _tokenApprovals;\r\n\r\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\r\n\r\n    /**\r\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\r\n     */\r\n    constructor(string memory name_, string memory symbol_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\r\n        return\r\n            interfaceId == type(IERC721).interfaceId ||\r\n            interfaceId == type(IERC721Metadata).interfaceId ||\r\n            super.supportsInterface(interfaceId);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-balanceOf}.\r\n     */\r\n    function balanceOf(address owner) public view virtual returns (uint256) {\r\n        if (owner == address(0)) {\r\n            revert ERC721InvalidOwner(address(0));\r\n        }\r\n        return _balances[owner];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-ownerOf}.\r\n     */\r\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\r\n        return _requireOwned(tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Metadata-name}.\r\n     */\r\n    function name() public view virtual returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Metadata-symbol}.\r\n     */\r\n    function symbol() public view virtual returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Metadata-tokenURI}.\r\n     */\r\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\r\n        _requireOwned(tokenId);\r\n\r\n        string memory baseURI = _baseURI();\r\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\r\n    }\r\n\r\n    /**\r\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\r\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\r\n     * by default, can be overridden in child contracts.\r\n     */\r\n    function _baseURI() internal view virtual returns (string memory) {\r\n        return \"\";\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-approve}.\r\n     */\r\n    function approve(address to, uint256 tokenId) public virtual {\r\n        _approve(to, tokenId, _msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-getApproved}.\r\n     */\r\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\r\n        _requireOwned(tokenId);\r\n\r\n        return _getApproved(tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-setApprovalForAll}.\r\n     */\r\n    function setApprovalForAll(address operator, bool approved) public virtual {\r\n        _setApprovalForAll(_msgSender(), operator, approved);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-isApprovedForAll}.\r\n     */\r\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\r\n        return _operatorApprovals[owner][operator];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-transferFrom}.\r\n     */\r\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\r\n        if (to == address(0)) {\r\n            revert ERC721InvalidReceiver(address(0));\r\n        }\r\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\r\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\r\n        address previousOwner = _update(to, tokenId, _msgSender());\r\n        if (previousOwner != from) {\r\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-safeTransferFrom}.\r\n     */\r\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\r\n        safeTransferFrom(from, to, tokenId, \"\");\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-safeTransferFrom}.\r\n     */\r\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\r\n        transferFrom(from, to, tokenId);\r\n        _checkOnERC721Received(from, to, tokenId, data);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\r\n     *\r\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\r\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\r\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\r\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\r\n     */\r\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\r\n        return _owners[tokenId];\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\r\n     */\r\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\r\n        return _tokenApprovals[tokenId];\r\n    }\r\n\r\n    /**\r\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\r\n     * particular (ignoring whether it is owned by `owner`).\r\n     *\r\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\r\n     * assumption.\r\n     */\r\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\r\n        return\r\n            spender != address(0) &&\r\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\r\n    }\r\n\r\n    /**\r\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\r\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\r\n     * the `spender` for the specific `tokenId`.\r\n     *\r\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\r\n     * assumption.\r\n     */\r\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\r\n        if (!_isAuthorized(owner, spender, tokenId)) {\r\n            if (owner == address(0)) {\r\n                revert ERC721NonexistentToken(tokenId);\r\n            } else {\r\n                revert ERC721InsufficientApproval(spender, tokenId);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\r\n     *\r\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\r\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\r\n     *\r\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\r\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\r\n     * remain consistent with one another.\r\n     */\r\n    function _increaseBalance(address account, uint128 value) internal virtual {\r\n        unchecked {\r\n            _balances[account] += value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\r\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\r\n     *\r\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\r\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\r\n     *\r\n     * Emits a {Transfer} event.\r\n     *\r\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\r\n     */\r\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\r\n        address from = _ownerOf(tokenId);\r\n\r\n        // Perform (optional) operator check\r\n        if (auth != address(0)) {\r\n            _checkAuthorized(from, auth, tokenId);\r\n        }\r\n\r\n        // Execute the update\r\n        if (from != address(0)) {\r\n            // Clear approval. No need to re-authorize or emit the Approval event\r\n            _approve(address(0), tokenId, address(0), false);\r\n\r\n            unchecked {\r\n                _balances[from] -= 1;\r\n            }\r\n        }\r\n\r\n        if (to != address(0)) {\r\n            unchecked {\r\n                _balances[to] += 1;\r\n            }\r\n        }\r\n\r\n        _owners[tokenId] = to;\r\n\r\n        emit Transfer(from, to, tokenId);\r\n\r\n        return from;\r\n    }\r\n\r\n    /**\r\n     * @dev Mints `tokenId` and transfers it to `to`.\r\n     *\r\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must not exist.\r\n     * - `to` cannot be the zero address.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _mint(address to, uint256 tokenId) internal {\r\n        if (to == address(0)) {\r\n            revert ERC721InvalidReceiver(address(0));\r\n        }\r\n        address previousOwner = _update(to, tokenId, address(0));\r\n        if (previousOwner != address(0)) {\r\n            revert ERC721InvalidSender(address(0));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must not exist.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _safeMint(address to, uint256 tokenId) internal {\r\n        _safeMint(to, tokenId, \"\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\r\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\r\n     */\r\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\r\n        _mint(to, tokenId);\r\n        _checkOnERC721Received(address(0), to, tokenId, data);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `tokenId`.\r\n     * The approval is cleared when the token is burned.\r\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _burn(uint256 tokenId) internal {\r\n        address previousOwner = _update(address(0), tokenId, address(0));\r\n        if (previousOwner == address(0)) {\r\n            revert ERC721NonexistentToken(tokenId);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers `tokenId` from `from` to `to`.\r\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must be owned by `from`.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _transfer(address from, address to, uint256 tokenId) internal {\r\n        if (to == address(0)) {\r\n            revert ERC721InvalidReceiver(address(0));\r\n        }\r\n        address previousOwner = _update(to, tokenId, address(0));\r\n        if (previousOwner == address(0)) {\r\n            revert ERC721NonexistentToken(tokenId);\r\n        } else if (previousOwner != from) {\r\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\r\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\r\n     *\r\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\r\n     *\r\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\r\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\r\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - `to` cannot be the zero address.\r\n     * - `from` cannot be the zero address.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\r\n        _safeTransfer(from, to, tokenId, \"\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\r\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\r\n     */\r\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\r\n        _transfer(from, to, tokenId);\r\n        _checkOnERC721Received(from, to, tokenId, data);\r\n    }\r\n\r\n    /**\r\n     * @dev Approve `to` to operate on `tokenId`\r\n     *\r\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\r\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\r\n     */\r\n    function _approve(address to, uint256 tokenId, address auth) internal {\r\n        _approve(to, tokenId, auth, true);\r\n    }\r\n\r\n    /**\r\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\r\n     * emitted in the context of transfers.\r\n     */\r\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\r\n        // Avoid reading the owner unless necessary\r\n        if (emitEvent || auth != address(0)) {\r\n            address owner = _requireOwned(tokenId);\r\n\r\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\r\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\r\n                revert ERC721InvalidApprover(auth);\r\n            }\r\n\r\n            if (emitEvent) {\r\n                emit Approval(owner, to, tokenId);\r\n            }\r\n        }\r\n\r\n        _tokenApprovals[tokenId] = to;\r\n    }\r\n\r\n    /**\r\n     * @dev Approve `operator` to operate on all of `owner` tokens\r\n     *\r\n     * Requirements:\r\n     * - operator can't be the address zero.\r\n     *\r\n     * Emits an {ApprovalForAll} event.\r\n     */\r\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\r\n        if (operator == address(0)) {\r\n            revert ERC721InvalidOperator(operator);\r\n        }\r\n        _operatorApprovals[owner][operator] = approved;\r\n        emit ApprovalForAll(owner, operator, approved);\r\n    }\r\n\r\n    /**\r\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\r\n     * Returns the owner.\r\n     *\r\n     * Overrides to ownership logic should be done to {_ownerOf}.\r\n     */\r\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\r\n        address owner = _ownerOf(tokenId);\r\n        if (owner == address(0)) {\r\n            revert ERC721NonexistentToken(tokenId);\r\n        }\r\n        return owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\r\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\r\n     *\r\n     * @param from address representing the previous owner of the given token ID\r\n     * @param to target address that will receive the tokens\r\n     * @param tokenId uint256 ID of the token to be transferred\r\n     * @param data bytes optional data to send along with the call\r\n     */\r\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\r\n        if (to.code.length > 0) {\r\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\r\n                if (retval != IERC721Receiver.onERC721Received.selector) {\r\n                    revert ERC721InvalidReceiver(to);\r\n                }\r\n            } catch (bytes memory reason) {\r\n                if (reason.length == 0) {\r\n                    revert ERC721InvalidReceiver(to);\r\n                } else {\r\n                    /// @solidity memory-safe-assembly\r\n                    assembly {\r\n                        revert(add(32, reason), mload(reason))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n"
			},
			"openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Standard ERC20 Errors\r\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\r\n */\r\ninterface IERC20Errors {\r\n    /**\r\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     * @param balance Current balance for the interacting account.\r\n     * @param needed Minimum amount required to perform a transfer.\r\n     */\r\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     */\r\n    error ERC20InvalidSender(address sender);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\r\n     * @param receiver Address to which tokens are being transferred.\r\n     */\r\n    error ERC20InvalidReceiver(address receiver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\r\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\r\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\r\n     * @param needed Minimum amount required to perform a transfer.\r\n     */\r\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\r\n     * @param approver Address initiating an approval operation.\r\n     */\r\n    error ERC20InvalidApprover(address approver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\r\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\r\n     */\r\n    error ERC20InvalidSpender(address spender);\r\n}\r\n\r\n/**\r\n * @dev Standard ERC721 Errors\r\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\r\n */\r\ninterface IERC721Errors {\r\n    /**\r\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\r\n     * Used in balance queries.\r\n     * @param owner Address of the current owner of a token.\r\n     */\r\n    error ERC721InvalidOwner(address owner);\r\n\r\n    /**\r\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\r\n     * @param tokenId Identifier number of a token.\r\n     */\r\n    error ERC721NonexistentToken(uint256 tokenId);\r\n\r\n    /**\r\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     * @param tokenId Identifier number of a token.\r\n     * @param owner Address of the current owner of a token.\r\n     */\r\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     */\r\n    error ERC721InvalidSender(address sender);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\r\n     * @param receiver Address to which tokens are being transferred.\r\n     */\r\n    error ERC721InvalidReceiver(address receiver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     * @param tokenId Identifier number of a token.\r\n     */\r\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\r\n     * @param approver Address initiating an approval operation.\r\n     */\r\n    error ERC721InvalidApprover(address approver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     */\r\n    error ERC721InvalidOperator(address operator);\r\n}\r\n\r\n/**\r\n * @dev Standard ERC1155 Errors\r\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\r\n */\r\ninterface IERC1155Errors {\r\n    /**\r\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     * @param balance Current balance for the interacting account.\r\n     * @param needed Minimum amount required to perform a transfer.\r\n     * @param tokenId Identifier number of a token.\r\n     */\r\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     */\r\n    error ERC1155InvalidSender(address sender);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\r\n     * @param receiver Address to which tokens are being transferred.\r\n     */\r\n    error ERC1155InvalidReceiver(address receiver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     * @param owner Address of the current owner of a token.\r\n     */\r\n    error ERC1155MissingApprovalForAll(address operator, address owner);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\r\n     * @param approver Address initiating an approval operation.\r\n     */\r\n    error ERC1155InvalidApprover(address approver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     */\r\n    error ERC1155InvalidOperator(address operator);\r\n\r\n    /**\r\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\r\n     * Used in batch transfers.\r\n     * @param idsLength Length of the array of token identifiers\r\n     * @param valuesLength Length of the array of token amounts\r\n     */\r\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\r\n}\r\n"
			},
			"openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {IERC165} from \"./IERC165.sol\";\r\n\r\n/**\r\n * @dev Implementation of the {IERC165} interface.\r\n *\r\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\r\n * for the additional interface id that will be supported. For example:\r\n *\r\n * ```solidity\r\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\r\n * }\r\n * ```\r\n */\r\nabstract contract ERC165 is IERC165 {\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\r\n        return interfaceId == type(IERC165).interfaceId;\r\n    }\r\n}\r\n"
			},
			"openzeppelin-contracts/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {Math} from \"./math/Math.sol\";\r\nimport {SignedMath} from \"./math/SignedMath.sol\";\r\n\r\n/**\r\n * @dev String operations.\r\n */\r\nlibrary Strings {\r\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\r\n    uint8 private constant ADDRESS_LENGTH = 20;\r\n\r\n    /**\r\n     * @dev The `value` string doesn't fit in the specified `length`.\r\n     */\r\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\r\n     */\r\n    function toString(uint256 value) internal pure returns (string memory) {\r\n        unchecked {\r\n            uint256 length = Math.log10(value) + 1;\r\n            string memory buffer = new string(length);\r\n            uint256 ptr;\r\n            /// @solidity memory-safe-assembly\r\n            assembly {\r\n                ptr := add(buffer, add(32, length))\r\n            }\r\n            while (true) {\r\n                ptr--;\r\n                /// @solidity memory-safe-assembly\r\n                assembly {\r\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\r\n                }\r\n                value /= 10;\r\n                if (value == 0) break;\r\n            }\r\n            return buffer;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\r\n     */\r\n    function toStringSigned(int256 value) internal pure returns (string memory) {\r\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\r\n     */\r\n    function toHexString(uint256 value) internal pure returns (string memory) {\r\n        unchecked {\r\n            return toHexString(value, Math.log256(value) + 1);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\r\n     */\r\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\r\n        uint256 localValue = value;\r\n        bytes memory buffer = new bytes(2 * length + 2);\r\n        buffer[0] = \"0\";\r\n        buffer[1] = \"x\";\r\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\r\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\r\n            localValue >>= 4;\r\n        }\r\n        if (localValue != 0) {\r\n            revert StringsInsufficientHexLength(value, length);\r\n        }\r\n        return string(buffer);\r\n    }\r\n\r\n    /**\r\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\r\n     * representation.\r\n     */\r\n    function toHexString(address addr) internal pure returns (string memory) {\r\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the two strings are equal.\r\n     */\r\n    function equal(string memory a, string memory b) internal pure returns (bool) {\r\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\r\n    }\r\n}\r\n"
			},
			"openzeppelin-contracts/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n"
			},
			"openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {IERC721} from \"../IERC721.sol\";\r\n\r\n/**\r\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\r\n * @dev See https://eips.ethereum.org/EIPS/eip-721\r\n */\r\ninterface IERC721Metadata is IERC721 {\r\n    /**\r\n     * @dev Returns the token collection name.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the token collection symbol.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\r\n     */\r\n    function tokenURI(uint256 tokenId) external view returns (string memory);\r\n}\r\n"
			},
			"openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @title ERC721 token receiver interface\r\n * @dev Interface for any contract that wants to support safeTransfers\r\n * from ERC721 asset contracts.\r\n */\r\ninterface IERC721Receiver {\r\n    /**\r\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\r\n     * by `operator` from `from`, this function is called.\r\n     *\r\n     * It must return its Solidity selector to confirm the token transfer.\r\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\r\n     * reverted.\r\n     *\r\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\r\n     */\r\n    function onERC721Received(\r\n        address operator,\r\n        address from,\r\n        uint256 tokenId,\r\n        bytes calldata data\r\n    ) external returns (bytes4);\r\n}\r\n"
			},
			"openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\r\n\r\n/**\r\n * @dev Required interface of an ERC721 compliant contract.\r\n */\r\ninterface IERC721 is IERC165 {\r\n    /**\r\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\r\n     */\r\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\r\n     */\r\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\r\n\r\n    /**\r\n     * @dev Returns the number of tokens in ``owner``'s account.\r\n     */\r\n    function balanceOf(address owner) external view returns (uint256 balance);\r\n\r\n    /**\r\n     * @dev Returns the owner of the `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function ownerOf(uint256 tokenId) external view returns (address owner);\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\r\n     *   a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\r\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\r\n     *   {setApprovalForAll}.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\r\n     *   a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\r\n\r\n    /**\r\n     * @dev Transfers `tokenId` token from `from` to `to`.\r\n     *\r\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\r\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\r\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address from, address to, uint256 tokenId) external;\r\n\r\n    /**\r\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\r\n     * The approval is cleared when the token is transferred.\r\n     *\r\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The caller must own the token or be an approved operator.\r\n     * - `tokenId` must exist.\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address to, uint256 tokenId) external;\r\n\r\n    /**\r\n     * @dev Approve or remove `operator` as an operator for the caller.\r\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The `operator` cannot be the address zero.\r\n     *\r\n     * Emits an {ApprovalForAll} event.\r\n     */\r\n    function setApprovalForAll(address operator, bool approved) external;\r\n\r\n    /**\r\n     * @dev Returns the account approved for `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function getApproved(uint256 tokenId) external view returns (address operator);\r\n\r\n    /**\r\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\r\n     *\r\n     * See {setApprovalForAll}\r\n     */\r\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\r\n}\r\n"
			},
			"openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Interface of the ERC165 standard, as defined in the\r\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\r\n *\r\n * Implementers can declare support of contract interfaces, which can then be\r\n * queried by others ({ERC165Checker}).\r\n *\r\n * For an implementation, see {ERC165}.\r\n */\r\ninterface IERC165 {\r\n    /**\r\n     * @dev Returns true if this contract implements the interface defined by\r\n     * `interfaceId`. See the corresponding\r\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\r\n     * to learn more about how these ids are created.\r\n     *\r\n     * This function call must use less than 30 000 gas.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\r\n}\r\n"
			},
			"openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Standard signed math utilities missing in the Solidity language.\r\n */\r\nlibrary SignedMath {\r\n    /**\r\n     * @dev Returns the largest of two signed numbers.\r\n     */\r\n    function max(int256 a, int256 b) internal pure returns (int256) {\r\n        return a > b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the smallest of two signed numbers.\r\n     */\r\n    function min(int256 a, int256 b) internal pure returns (int256) {\r\n        return a < b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the average of two signed numbers without overflow.\r\n     * The result is rounded towards zero.\r\n     */\r\n    function average(int256 a, int256 b) internal pure returns (int256) {\r\n        // Formula from the book \"Hacker's Delight\"\r\n        int256 x = (a & b) + ((a ^ b) >> 1);\r\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the absolute unsigned value of a signed value.\r\n     */\r\n    function abs(int256 n) internal pure returns (uint256) {\r\n        unchecked {\r\n            // must be unchecked in order to support `n = type(int256).min`\r\n            return uint256(n >= 0 ? n : -n);\r\n        }\r\n    }\r\n}\r\n"
			},
			"openzeppelin-contracts/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Standard math utilities missing in the Solidity language.\r\n */\r\nlibrary Math {\r\n    /**\r\n     * @dev Muldiv operation overflow.\r\n     */\r\n    error MathOverflowedMulDiv();\r\n\r\n    enum Rounding {\r\n        Floor, // Toward negative infinity\r\n        Ceil, // Toward positive infinity\r\n        Trunc, // Toward zero\r\n        Expand // Away from zero\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\r\n     */\r\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            uint256 c = a + b;\r\n            if (c < a) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\r\n     */\r\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b > a) return (false, 0);\r\n            return (true, a - b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\r\n     */\r\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n            // benefit is lost if 'b' is also tested.\r\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n            if (a == 0) return (true, 0);\r\n            uint256 c = a * b;\r\n            if (c / a != b) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\r\n     */\r\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a / b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\r\n     */\r\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a % b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the largest of two numbers.\r\n     */\r\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a > b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the smallest of two numbers.\r\n     */\r\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a < b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the average of two numbers. The result is rounded towards\r\n     * zero.\r\n     */\r\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // (a + b) / 2 can overflow.\r\n        return (a & b) + (a ^ b) / 2;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the ceiling of the division of two numbers.\r\n     *\r\n     * This differs from standard division with `/` in that it rounds towards infinity instead\r\n     * of rounding towards zero.\r\n     */\r\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (b == 0) {\r\n            // Guarantee the same behavior as in a regular Solidity division.\r\n            return a / b;\r\n        }\r\n\r\n        // (a + b - 1) / b can overflow on addition, so we distribute.\r\n        return a == 0 ? 0 : (a - 1) / b + 1;\r\n    }\r\n\r\n    /**\r\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\r\n     * denominator == 0.\r\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\r\n     * Uniswap Labs also under MIT license.\r\n     */\r\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\r\n        unchecked {\r\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\r\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\r\n            // variables such that product = prod1 * 2^256 + prod0.\r\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\r\n            uint256 prod1; // Most significant 256 bits of the product\r\n            assembly {\r\n                let mm := mulmod(x, y, not(0))\r\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\r\n            }\r\n\r\n            // Handle non-overflow cases, 256 by 256 division.\r\n            if (prod1 == 0) {\r\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\r\n                // The surrounding unchecked block does not change this fact.\r\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\r\n                return prod0 / denominator;\r\n            }\r\n\r\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\r\n            if (denominator <= prod1) {\r\n                revert MathOverflowedMulDiv();\r\n            }\r\n\r\n            ///////////////////////////////////////////////\r\n            // 512 by 256 division.\r\n            ///////////////////////////////////////////////\r\n\r\n            // Make division exact by subtracting the remainder from [prod1 prod0].\r\n            uint256 remainder;\r\n            assembly {\r\n                // Compute remainder using mulmod.\r\n                remainder := mulmod(x, y, denominator)\r\n\r\n                // Subtract 256 bit number from 512 bit number.\r\n                prod1 := sub(prod1, gt(remainder, prod0))\r\n                prod0 := sub(prod0, remainder)\r\n            }\r\n\r\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\r\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\r\n\r\n            uint256 twos = denominator & (0 - denominator);\r\n            assembly {\r\n                // Divide denominator by twos.\r\n                denominator := div(denominator, twos)\r\n\r\n                // Divide [prod1 prod0] by twos.\r\n                prod0 := div(prod0, twos)\r\n\r\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\r\n                twos := add(div(sub(0, twos), twos), 1)\r\n            }\r\n\r\n            // Shift in bits from prod1 into prod0.\r\n            prod0 |= prod1 * twos;\r\n\r\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\r\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\r\n            // four bits. That is, denominator * inv = 1 mod 2^4.\r\n            uint256 inverse = (3 * denominator) ^ 2;\r\n\r\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\r\n            // works in modular arithmetic, doubling the correct bits in each step.\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\r\n\r\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\r\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\r\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\r\n            // is no longer required.\r\n            result = prod0 * inverse;\r\n            return result;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\r\n     */\r\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\r\n        uint256 result = mulDiv(x, y, denominator);\r\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\r\n            result += 1;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\r\n     * towards zero.\r\n     *\r\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\r\n     */\r\n    function sqrt(uint256 a) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\r\n        //\r\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\r\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\r\n        //\r\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\r\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\r\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\r\n        //\r\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\r\n        uint256 result = 1 << (log2(a) >> 1);\r\n\r\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\r\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\r\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\r\n        // into the expected uint128 result.\r\n        unchecked {\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            return min(result, a / result);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @notice Calculates sqrt(a), following the selected rounding direction.\r\n     */\r\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = sqrt(a);\r\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log2(uint256 value) internal pure returns (uint256) {\r\n        uint256 result = 0;\r\n        unchecked {\r\n            if (value >> 128 > 0) {\r\n                value >>= 128;\r\n                result += 128;\r\n            }\r\n            if (value >> 64 > 0) {\r\n                value >>= 64;\r\n                result += 64;\r\n            }\r\n            if (value >> 32 > 0) {\r\n                value >>= 32;\r\n                result += 32;\r\n            }\r\n            if (value >> 16 > 0) {\r\n                value >>= 16;\r\n                result += 16;\r\n            }\r\n            if (value >> 8 > 0) {\r\n                value >>= 8;\r\n                result += 8;\r\n            }\r\n            if (value >> 4 > 0) {\r\n                value >>= 4;\r\n                result += 4;\r\n            }\r\n            if (value >> 2 > 0) {\r\n                value >>= 2;\r\n                result += 2;\r\n            }\r\n            if (value >> 1 > 0) {\r\n                result += 1;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = log2(value);\r\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log10(uint256 value) internal pure returns (uint256) {\r\n        uint256 result = 0;\r\n        unchecked {\r\n            if (value >= 10 ** 64) {\r\n                value /= 10 ** 64;\r\n                result += 64;\r\n            }\r\n            if (value >= 10 ** 32) {\r\n                value /= 10 ** 32;\r\n                result += 32;\r\n            }\r\n            if (value >= 10 ** 16) {\r\n                value /= 10 ** 16;\r\n                result += 16;\r\n            }\r\n            if (value >= 10 ** 8) {\r\n                value /= 10 ** 8;\r\n                result += 8;\r\n            }\r\n            if (value >= 10 ** 4) {\r\n                value /= 10 ** 4;\r\n                result += 4;\r\n            }\r\n            if (value >= 10 ** 2) {\r\n                value /= 10 ** 2;\r\n                result += 2;\r\n            }\r\n            if (value >= 10 ** 1) {\r\n                result += 1;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = log10(value);\r\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\r\n     * Returns 0 if given 0.\r\n     *\r\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\r\n     */\r\n    function log256(uint256 value) internal pure returns (uint256) {\r\n        uint256 result = 0;\r\n        unchecked {\r\n            if (value >> 128 > 0) {\r\n                value >>= 128;\r\n                result += 16;\r\n            }\r\n            if (value >> 64 > 0) {\r\n                value >>= 64;\r\n                result += 8;\r\n            }\r\n            if (value >> 32 > 0) {\r\n                value >>= 32;\r\n                result += 4;\r\n            }\r\n            if (value >> 16 > 0) {\r\n                value >>= 16;\r\n                result += 2;\r\n            }\r\n            if (value >> 8 > 0) {\r\n                result += 1;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = log256(value);\r\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\r\n     */\r\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\r\n        return uint8(rounding) % 2 == 1;\r\n    }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Picture.sol": {
				"Picture": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_order",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "_image",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Picture.sol\":61:264  contract Picture {... */\n  mstore(0x40, 0x80)\n    /* \"Picture.sol\":128:261  constructor (... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"Picture.sol\":223:229  _order */\n  dup2\n    /* \"Picture.sol\":215:220  order */\n  0x00\n    /* \"Picture.sol\":215:229  order = _order */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Picture.sol\":247:253  _image */\n  dup1\n    /* \"Picture.sol\":240:245  image */\n  0x01\n    /* \"Picture.sol\":240:253  image= _image */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"Picture.sol\":128:261  constructor (... */\n  pop\n  pop\n    /* \"Picture.sol\":61:264  contract Picture {... */\n  jump(tag_8)\n    /* \"#utility.yul\":7:82   */\ntag_9:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_10:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_11:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:411   */\ntag_12:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":400:405   */\n  dup2\n    /* \"#utility.yul\":389:405   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:411   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":417:539   */\ntag_13:\n    /* \"#utility.yul\":490:514   */\n  tag_49\n    /* \"#utility.yul\":508:513   */\n  dup2\n    /* \"#utility.yul\":490:514   */\n  tag_12\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":483:488   */\n  dup2\n    /* \"#utility.yul\":480:515   */\n  eq\n    /* \"#utility.yul\":470:533   */\n  tag_50\n  jumpi\n    /* \"#utility.yul\":529:530   */\n  0x00\n    /* \"#utility.yul\":526:527   */\n  dup1\n    /* \"#utility.yul\":519:531   */\n  revert\n    /* \"#utility.yul\":470:533   */\ntag_50:\n    /* \"#utility.yul\":417:539   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":545:688   */\ntag_14:\n    /* \"#utility.yul\":602:607   */\n  0x00\n    /* \"#utility.yul\":633:639   */\n  dup2\n    /* \"#utility.yul\":627:640   */\n  mload\n    /* \"#utility.yul\":618:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":649:682   */\n  tag_52\n    /* \"#utility.yul\":676:681   */\n  dup2\n    /* \"#utility.yul\":649:682   */\n  tag_13\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":545:688   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":694:811   */\ntag_15:\n    /* \"#utility.yul\":803:804   */\n  0x00\n    /* \"#utility.yul\":800:801   */\n  dup1\n    /* \"#utility.yul\":793:805   */\n  revert\n    /* \"#utility.yul\":817:934   */\ntag_16:\n    /* \"#utility.yul\":926:927   */\n  0x00\n    /* \"#utility.yul\":923:924   */\n  dup1\n    /* \"#utility.yul\":916:928   */\n  revert\n    /* \"#utility.yul\":940:1042   */\ntag_17:\n    /* \"#utility.yul\":981:987   */\n  0x00\n    /* \"#utility.yul\":1032:1034   */\n  0x1f\n    /* \"#utility.yul\":1028:1035   */\n  not\n    /* \"#utility.yul\":1023:1025   */\n  0x1f\n    /* \"#utility.yul\":1016:1021   */\n  dup4\n    /* \"#utility.yul\":1012:1026   */\n  add\n    /* \"#utility.yul\":1008:1036   */\n  and\n    /* \"#utility.yul\":998:1036   */\n  swap1\n  pop\n    /* \"#utility.yul\":940:1042   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1048:1228   */\ntag_18:\n    /* \"#utility.yul\":1096:1173   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1093:1094   */\n  0x00\n    /* \"#utility.yul\":1086:1174   */\n  mstore\n    /* \"#utility.yul\":1193:1197   */\n  0x41\n    /* \"#utility.yul\":1190:1191   */\n  0x04\n    /* \"#utility.yul\":1183:1198   */\n  mstore\n    /* \"#utility.yul\":1217:1221   */\n  0x24\n    /* \"#utility.yul\":1214:1215   */\n  0x00\n    /* \"#utility.yul\":1207:1222   */\n  revert\n    /* \"#utility.yul\":1234:1515   */\ntag_19:\n    /* \"#utility.yul\":1317:1344   */\n  tag_58\n    /* \"#utility.yul\":1339:1343   */\n  dup3\n    /* \"#utility.yul\":1317:1344   */\n  tag_17\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":1309:1315   */\n  dup2\n    /* \"#utility.yul\":1305:1345   */\n  add\n    /* \"#utility.yul\":1447:1453   */\n  dup2\n    /* \"#utility.yul\":1435:1445   */\n  dup2\n    /* \"#utility.yul\":1432:1454   */\n  lt\n    /* \"#utility.yul\":1411:1429   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1399:1409   */\n  dup3\n    /* \"#utility.yul\":1396:1430   */\n  gt\n    /* \"#utility.yul\":1393:1455   */\n  or\n    /* \"#utility.yul\":1390:1478   */\n  iszero\n  tag_59\n  jumpi\n    /* \"#utility.yul\":1458:1476   */\n  tag_60\n  tag_18\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1390:1478   */\ntag_59:\n    /* \"#utility.yul\":1498:1508   */\n  dup1\n    /* \"#utility.yul\":1494:1496   */\n  0x40\n    /* \"#utility.yul\":1487:1509   */\n  mstore\n    /* \"#utility.yul\":1277:1515   */\n  pop\n    /* \"#utility.yul\":1234:1515   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1521:1650   */\ntag_20:\n    /* \"#utility.yul\":1555:1561   */\n  0x00\n    /* \"#utility.yul\":1582:1602   */\n  tag_62\n  tag_9\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":1572:1602   */\n  swap1\n  pop\n    /* \"#utility.yul\":1611:1644   */\n  tag_63\n    /* \"#utility.yul\":1639:1643   */\n  dup3\n    /* \"#utility.yul\":1631:1637   */\n  dup3\n    /* \"#utility.yul\":1611:1644   */\n  tag_19\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":1521:1650   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1656:1964   */\ntag_21:\n    /* \"#utility.yul\":1718:1722   */\n  0x00\n    /* \"#utility.yul\":1808:1826   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1800:1806   */\n  dup3\n    /* \"#utility.yul\":1797:1827   */\n  gt\n    /* \"#utility.yul\":1794:1850   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":1830:1848   */\n  tag_66\n  tag_18\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":1794:1850   */\ntag_65:\n    /* \"#utility.yul\":1868:1897   */\n  tag_67\n    /* \"#utility.yul\":1890:1896   */\n  dup3\n    /* \"#utility.yul\":1868:1897   */\n  tag_17\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":1860:1897   */\n  swap1\n  pop\n    /* \"#utility.yul\":1952:1956   */\n  0x20\n    /* \"#utility.yul\":1946:1950   */\n  dup2\n    /* \"#utility.yul\":1942:1957   */\n  add\n    /* \"#utility.yul\":1934:1957   */\n  swap1\n  pop\n    /* \"#utility.yul\":1656:1964   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1970:2216   */\ntag_22:\n    /* \"#utility.yul\":2051:2052   */\n  0x00\n    /* \"#utility.yul\":2061:2174   */\ntag_69:\n    /* \"#utility.yul\":2075:2081   */\n  dup4\n    /* \"#utility.yul\":2072:2073   */\n  dup2\n    /* \"#utility.yul\":2069:2082   */\n  lt\n    /* \"#utility.yul\":2061:2174   */\n  iszero\n  tag_71\n  jumpi\n    /* \"#utility.yul\":2160:2161   */\n  dup1\n    /* \"#utility.yul\":2155:2158   */\n  dup3\n    /* \"#utility.yul\":2151:2162   */\n  add\n    /* \"#utility.yul\":2145:2163   */\n  mload\n    /* \"#utility.yul\":2141:2142   */\n  dup2\n    /* \"#utility.yul\":2136:2139   */\n  dup5\n    /* \"#utility.yul\":2132:2143   */\n  add\n    /* \"#utility.yul\":2125:2164   */\n  mstore\n    /* \"#utility.yul\":2097:2099   */\n  0x20\n    /* \"#utility.yul\":2094:2095   */\n  dup2\n    /* \"#utility.yul\":2090:2100   */\n  add\n    /* \"#utility.yul\":2085:2100   */\n  swap1\n  pop\n    /* \"#utility.yul\":2061:2174   */\n  jump(tag_69)\ntag_71:\n    /* \"#utility.yul\":2208:2209   */\n  0x00\n    /* \"#utility.yul\":2199:2205   */\n  dup5\n    /* \"#utility.yul\":2194:2197   */\n  dup5\n    /* \"#utility.yul\":2190:2206   */\n  add\n    /* \"#utility.yul\":2183:2210   */\n  mstore\n    /* \"#utility.yul\":2032:2216   */\n  pop\n    /* \"#utility.yul\":1970:2216   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2222:2656   */\ntag_23:\n    /* \"#utility.yul\":2311:2316   */\n  0x00\n    /* \"#utility.yul\":2336:2402   */\n  tag_73\n    /* \"#utility.yul\":2352:2401   */\n  tag_74\n    /* \"#utility.yul\":2394:2400   */\n  dup5\n    /* \"#utility.yul\":2352:2401   */\n  tag_21\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":2336:2402   */\n  tag_20\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":2327:2402   */\n  swap1\n  pop\n    /* \"#utility.yul\":2425:2431   */\n  dup3\n    /* \"#utility.yul\":2418:2423   */\n  dup2\n    /* \"#utility.yul\":2411:2432   */\n  mstore\n    /* \"#utility.yul\":2463:2467   */\n  0x20\n    /* \"#utility.yul\":2456:2461   */\n  dup2\n    /* \"#utility.yul\":2452:2468   */\n  add\n    /* \"#utility.yul\":2501:2504   */\n  dup5\n    /* \"#utility.yul\":2492:2498   */\n  dup5\n    /* \"#utility.yul\":2487:2490   */\n  dup5\n    /* \"#utility.yul\":2483:2499   */\n  add\n    /* \"#utility.yul\":2480:2505   */\n  gt\n    /* \"#utility.yul\":2477:2589   */\n  iszero\n  tag_75\n  jumpi\n    /* \"#utility.yul\":2508:2587   */\n  tag_76\n  tag_16\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":2477:2589   */\ntag_75:\n    /* \"#utility.yul\":2598:2650   */\n  tag_77\n    /* \"#utility.yul\":2643:2649   */\n  dup5\n    /* \"#utility.yul\":2638:2641   */\n  dup3\n    /* \"#utility.yul\":2633:2636   */\n  dup6\n    /* \"#utility.yul\":2598:2650   */\n  tag_22\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":2317:2656   */\n  pop\n    /* \"#utility.yul\":2222:2656   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2676:3031   */\ntag_24:\n    /* \"#utility.yul\":2743:2748   */\n  0x00\n    /* \"#utility.yul\":2792:2795   */\n  dup3\n    /* \"#utility.yul\":2785:2789   */\n  0x1f\n    /* \"#utility.yul\":2777:2783   */\n  dup4\n    /* \"#utility.yul\":2773:2790   */\n  add\n    /* \"#utility.yul\":2769:2796   */\n  slt\n    /* \"#utility.yul\":2759:2881   */\n  tag_79\n  jumpi\n    /* \"#utility.yul\":2800:2879   */\n  tag_80\n  tag_15\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":2759:2881   */\ntag_79:\n    /* \"#utility.yul\":2910:2916   */\n  dup2\n    /* \"#utility.yul\":2904:2917   */\n  mload\n    /* \"#utility.yul\":2935:3025   */\n  tag_81\n    /* \"#utility.yul\":3021:3024   */\n  dup5\n    /* \"#utility.yul\":3013:3019   */\n  dup3\n    /* \"#utility.yul\":3006:3010   */\n  0x20\n    /* \"#utility.yul\":2998:3004   */\n  dup7\n    /* \"#utility.yul\":2994:3011   */\n  add\n    /* \"#utility.yul\":2935:3025   */\n  tag_23\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":2926:3025   */\n  swap2\n  pop\n    /* \"#utility.yul\":2749:3031   */\n  pop\n    /* \"#utility.yul\":2676:3031   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3037:3717   */\ntag_3:\n    /* \"#utility.yul\":3126:3132   */\n  0x00\n    /* \"#utility.yul\":3134:3140   */\n  dup1\n    /* \"#utility.yul\":3183:3185   */\n  0x40\n    /* \"#utility.yul\":3171:3180   */\n  dup4\n    /* \"#utility.yul\":3162:3169   */\n  dup6\n    /* \"#utility.yul\":3158:3181   */\n  sub\n    /* \"#utility.yul\":3154:3186   */\n  slt\n    /* \"#utility.yul\":3151:3270   */\n  iszero\n  tag_83\n  jumpi\n    /* \"#utility.yul\":3189:3268   */\n  tag_84\n  tag_10\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":3151:3270   */\ntag_83:\n    /* \"#utility.yul\":3309:3310   */\n  0x00\n    /* \"#utility.yul\":3334:3398   */\n  tag_85\n    /* \"#utility.yul\":3390:3397   */\n  dup6\n    /* \"#utility.yul\":3381:3387   */\n  dup3\n    /* \"#utility.yul\":3370:3379   */\n  dup7\n    /* \"#utility.yul\":3366:3388   */\n  add\n    /* \"#utility.yul\":3334:3398   */\n  tag_14\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":3324:3398   */\n  swap3\n  pop\n    /* \"#utility.yul\":3280:3408   */\n  pop\n    /* \"#utility.yul\":3468:3470   */\n  0x20\n    /* \"#utility.yul\":3457:3466   */\n  dup4\n    /* \"#utility.yul\":3453:3471   */\n  add\n    /* \"#utility.yul\":3447:3472   */\n  mload\n    /* \"#utility.yul\":3499:3517   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3491:3497   */\n  dup2\n    /* \"#utility.yul\":3488:3518   */\n  gt\n    /* \"#utility.yul\":3485:3602   */\n  iszero\n  tag_86\n  jumpi\n    /* \"#utility.yul\":3521:3600   */\n  tag_87\n  tag_11\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":3485:3602   */\ntag_86:\n    /* \"#utility.yul\":3626:3700   */\n  tag_88\n    /* \"#utility.yul\":3692:3699   */\n  dup6\n    /* \"#utility.yul\":3683:3689   */\n  dup3\n    /* \"#utility.yul\":3672:3681   */\n  dup7\n    /* \"#utility.yul\":3668:3690   */\n  add\n    /* \"#utility.yul\":3626:3700   */\n  tag_24\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":3616:3700   */\n  swap2\n  pop\n    /* \"#utility.yul\":3418:3710   */\n  pop\n    /* \"#utility.yul\":3037:3717   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3723:3822   */\ntag_25:\n    /* \"#utility.yul\":3775:3781   */\n  0x00\n    /* \"#utility.yul\":3809:3814   */\n  dup2\n    /* \"#utility.yul\":3803:3815   */\n  mload\n    /* \"#utility.yul\":3793:3815   */\n  swap1\n  pop\n    /* \"#utility.yul\":3723:3822   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3828:4008   */\ntag_26:\n    /* \"#utility.yul\":3876:3953   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3873:3874   */\n  0x00\n    /* \"#utility.yul\":3866:3954   */\n  mstore\n    /* \"#utility.yul\":3973:3977   */\n  0x22\n    /* \"#utility.yul\":3970:3971   */\n  0x04\n    /* \"#utility.yul\":3963:3978   */\n  mstore\n    /* \"#utility.yul\":3997:4001   */\n  0x24\n    /* \"#utility.yul\":3994:3995   */\n  0x00\n    /* \"#utility.yul\":3987:4002   */\n  revert\n    /* \"#utility.yul\":4014:4334   */\ntag_27:\n    /* \"#utility.yul\":4058:4064   */\n  0x00\n    /* \"#utility.yul\":4095:4096   */\n  0x02\n    /* \"#utility.yul\":4089:4093   */\n  dup3\n    /* \"#utility.yul\":4085:4097   */\n  div\n    /* \"#utility.yul\":4075:4097   */\n  swap1\n  pop\n    /* \"#utility.yul\":4142:4143   */\n  0x01\n    /* \"#utility.yul\":4136:4140   */\n  dup3\n    /* \"#utility.yul\":4132:4144   */\n  and\n    /* \"#utility.yul\":4163:4181   */\n  dup1\n    /* \"#utility.yul\":4153:4234   */\n  tag_92\n  jumpi\n    /* \"#utility.yul\":4219:4223   */\n  0x7f\n    /* \"#utility.yul\":4211:4217   */\n  dup3\n    /* \"#utility.yul\":4207:4224   */\n  and\n    /* \"#utility.yul\":4197:4224   */\n  swap2\n  pop\n    /* \"#utility.yul\":4153:4234   */\ntag_92:\n    /* \"#utility.yul\":4281:4283   */\n  0x20\n    /* \"#utility.yul\":4273:4279   */\n  dup3\n    /* \"#utility.yul\":4270:4284   */\n  lt\n    /* \"#utility.yul\":4250:4268   */\n  dup2\n    /* \"#utility.yul\":4247:4285   */\n  sub\n    /* \"#utility.yul\":4244:4328   */\n  tag_93\n  jumpi\n    /* \"#utility.yul\":4300:4318   */\n  tag_94\n  tag_26\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":4244:4328   */\ntag_93:\n    /* \"#utility.yul\":4065:4334   */\n  pop\n    /* \"#utility.yul\":4014:4334   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4340:4481   */\ntag_28:\n    /* \"#utility.yul\":4389:4393   */\n  0x00\n    /* \"#utility.yul\":4412:4415   */\n  dup2\n    /* \"#utility.yul\":4404:4415   */\n  swap1\n  pop\n    /* \"#utility.yul\":4435:4438   */\n  dup2\n    /* \"#utility.yul\":4432:4433   */\n  0x00\n    /* \"#utility.yul\":4425:4439   */\n  mstore\n    /* \"#utility.yul\":4469:4473   */\n  0x20\n    /* \"#utility.yul\":4466:4467   */\n  0x00\n    /* \"#utility.yul\":4456:4474   */\n  keccak256\n    /* \"#utility.yul\":4448:4474   */\n  swap1\n  pop\n    /* \"#utility.yul\":4340:4481   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4487:4580   */\ntag_29:\n    /* \"#utility.yul\":4524:4530   */\n  0x00\n    /* \"#utility.yul\":4571:4573   */\n  0x20\n    /* \"#utility.yul\":4566:4568   */\n  0x1f\n    /* \"#utility.yul\":4559:4564   */\n  dup4\n    /* \"#utility.yul\":4555:4569   */\n  add\n    /* \"#utility.yul\":4551:4574   */\n  div\n    /* \"#utility.yul\":4541:4574   */\n  swap1\n  pop\n    /* \"#utility.yul\":4487:4580   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4586:4693   */\ntag_30:\n    /* \"#utility.yul\":4630:4638   */\n  0x00\n    /* \"#utility.yul\":4680:4685   */\n  dup3\n    /* \"#utility.yul\":4674:4678   */\n  dup3\n    /* \"#utility.yul\":4670:4686   */\n  shl\n    /* \"#utility.yul\":4649:4686   */\n  swap1\n  pop\n    /* \"#utility.yul\":4586:4693   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4699:5092   */\ntag_31:\n    /* \"#utility.yul\":4768:4774   */\n  0x00\n    /* \"#utility.yul\":4818:4819   */\n  0x08\n    /* \"#utility.yul\":4806:4816   */\n  dup4\n    /* \"#utility.yul\":4802:4820   */\n  mul\n    /* \"#utility.yul\":4841:4938   */\n  tag_99\n    /* \"#utility.yul\":4871:4937   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":4860:4869   */\n  dup3\n    /* \"#utility.yul\":4841:4938   */\n  tag_30\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":4959:4998   */\n  tag_100\n    /* \"#utility.yul\":4989:4997   */\n  dup7\n    /* \"#utility.yul\":4978:4987   */\n  dup4\n    /* \"#utility.yul\":4959:4998   */\n  tag_30\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":4947:4998   */\n  swap6\n  pop\n    /* \"#utility.yul\":5031:5035   */\n  dup1\n    /* \"#utility.yul\":5027:5036   */\n  not\n    /* \"#utility.yul\":5020:5025   */\n  dup5\n    /* \"#utility.yul\":5016:5037   */\n  and\n    /* \"#utility.yul\":5007:5037   */\n  swap4\n  pop\n    /* \"#utility.yul\":5080:5084   */\n  dup1\n    /* \"#utility.yul\":5070:5078   */\n  dup7\n    /* \"#utility.yul\":5066:5085   */\n  and\n    /* \"#utility.yul\":5059:5064   */\n  dup5\n    /* \"#utility.yul\":5056:5086   */\n  or\n    /* \"#utility.yul\":5046:5086   */\n  swap3\n  pop\n    /* \"#utility.yul\":4775:5092   */\n  pop\n  pop\n    /* \"#utility.yul\":4699:5092   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5098:5158   */\ntag_32:\n    /* \"#utility.yul\":5126:5129   */\n  0x00\n    /* \"#utility.yul\":5147:5152   */\n  dup2\n    /* \"#utility.yul\":5140:5152   */\n  swap1\n  pop\n    /* \"#utility.yul\":5098:5158   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5164:5306   */\ntag_33:\n    /* \"#utility.yul\":5214:5223   */\n  0x00\n    /* \"#utility.yul\":5247:5300   */\n  tag_103\n    /* \"#utility.yul\":5265:5299   */\n  tag_104\n    /* \"#utility.yul\":5274:5298   */\n  tag_105\n    /* \"#utility.yul\":5292:5297   */\n  dup5\n    /* \"#utility.yul\":5274:5298   */\n  tag_12\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":5265:5299   */\n  tag_32\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":5247:5300   */\n  tag_12\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":5234:5300   */\n  swap1\n  pop\n    /* \"#utility.yul\":5164:5306   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5312:5387   */\ntag_34:\n    /* \"#utility.yul\":5355:5358   */\n  0x00\n    /* \"#utility.yul\":5376:5381   */\n  dup2\n    /* \"#utility.yul\":5369:5381   */\n  swap1\n  pop\n    /* \"#utility.yul\":5312:5387   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5393:5662   */\ntag_35:\n    /* \"#utility.yul\":5503:5542   */\n  tag_108\n    /* \"#utility.yul\":5534:5541   */\n  dup4\n    /* \"#utility.yul\":5503:5542   */\n  tag_33\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":5564:5655   */\n  tag_109\n    /* \"#utility.yul\":5613:5654   */\n  tag_110\n    /* \"#utility.yul\":5637:5653   */\n  dup3\n    /* \"#utility.yul\":5613:5654   */\n  tag_34\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":5605:5611   */\n  dup5\n    /* \"#utility.yul\":5598:5602   */\n  dup5\n    /* \"#utility.yul\":5592:5603   */\n  sload\n    /* \"#utility.yul\":5564:5655   */\n  tag_31\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":5558:5562   */\n  dup3\n    /* \"#utility.yul\":5551:5656   */\n  sstore\n    /* \"#utility.yul\":5469:5662   */\n  pop\n    /* \"#utility.yul\":5393:5662   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5668:5741   */\ntag_36:\n    /* \"#utility.yul\":5713:5716   */\n  0x00\n    /* \"#utility.yul\":5668:5741   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":5747:5936   */\ntag_37:\n    /* \"#utility.yul\":5824:5856   */\n  tag_113\n  tag_36\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":5865:5930   */\n  tag_114\n    /* \"#utility.yul\":5923:5929   */\n  dup2\n    /* \"#utility.yul\":5915:5921   */\n  dup5\n    /* \"#utility.yul\":5909:5913   */\n  dup5\n    /* \"#utility.yul\":5865:5930   */\n  tag_35\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":5800:5936   */\n  pop\n    /* \"#utility.yul\":5747:5936   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5942:6128   */\ntag_38:\n    /* \"#utility.yul\":6002:6122   */\ntag_116:\n    /* \"#utility.yul\":6019:6022   */\n  dup2\n    /* \"#utility.yul\":6012:6017   */\n  dup2\n    /* \"#utility.yul\":6009:6023   */\n  lt\n    /* \"#utility.yul\":6002:6122   */\n  iszero\n  tag_118\n  jumpi\n    /* \"#utility.yul\":6073:6112   */\n  tag_119\n    /* \"#utility.yul\":6110:6111   */\n  0x00\n    /* \"#utility.yul\":6103:6108   */\n  dup3\n    /* \"#utility.yul\":6073:6112   */\n  tag_37\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":6046:6047   */\n  0x01\n    /* \"#utility.yul\":6039:6044   */\n  dup2\n    /* \"#utility.yul\":6035:6048   */\n  add\n    /* \"#utility.yul\":6026:6048   */\n  swap1\n  pop\n    /* \"#utility.yul\":6002:6122   */\n  jump(tag_116)\ntag_118:\n    /* \"#utility.yul\":5942:6128   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6134:6677   */\ntag_39:\n    /* \"#utility.yul\":6235:6237   */\n  0x1f\n    /* \"#utility.yul\":6230:6233   */\n  dup3\n    /* \"#utility.yul\":6227:6238   */\n  gt\n    /* \"#utility.yul\":6224:6670   */\n  iszero\n  tag_121\n  jumpi\n    /* \"#utility.yul\":6269:6307   */\n  tag_122\n    /* \"#utility.yul\":6301:6306   */\n  dup2\n    /* \"#utility.yul\":6269:6307   */\n  tag_28\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":6353:6382   */\n  tag_123\n    /* \"#utility.yul\":6371:6381   */\n  dup5\n    /* \"#utility.yul\":6353:6382   */\n  tag_29\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":6343:6351   */\n  dup2\n    /* \"#utility.yul\":6339:6383   */\n  add\n    /* \"#utility.yul\":6536:6538   */\n  0x20\n    /* \"#utility.yul\":6524:6534   */\n  dup6\n    /* \"#utility.yul\":6521:6539   */\n  lt\n    /* \"#utility.yul\":6518:6567   */\n  iszero\n  tag_124\n  jumpi\n    /* \"#utility.yul\":6557:6565   */\n  dup2\n    /* \"#utility.yul\":6542:6565   */\n  swap1\n  pop\n    /* \"#utility.yul\":6518:6567   */\ntag_124:\n    /* \"#utility.yul\":6580:6660   */\n  tag_125\n    /* \"#utility.yul\":6636:6658   */\n  tag_126\n    /* \"#utility.yul\":6654:6657   */\n  dup6\n    /* \"#utility.yul\":6636:6658   */\n  tag_29\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":6626:6634   */\n  dup4\n    /* \"#utility.yul\":6622:6659   */\n  add\n    /* \"#utility.yul\":6609:6620   */\n  dup3\n    /* \"#utility.yul\":6580:6660   */\n  tag_38\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":6239:6670   */\n  pop\n  pop\n    /* \"#utility.yul\":6224:6670   */\ntag_121:\n    /* \"#utility.yul\":6134:6677   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6683:6800   */\ntag_40:\n    /* \"#utility.yul\":6737:6745   */\n  0x00\n    /* \"#utility.yul\":6787:6792   */\n  dup3\n    /* \"#utility.yul\":6781:6785   */\n  dup3\n    /* \"#utility.yul\":6777:6793   */\n  shr\n    /* \"#utility.yul\":6756:6793   */\n  swap1\n  pop\n    /* \"#utility.yul\":6683:6800   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6806:6975   */\ntag_41:\n    /* \"#utility.yul\":6850:6856   */\n  0x00\n    /* \"#utility.yul\":6883:6934   */\n  tag_129\n    /* \"#utility.yul\":6931:6932   */\n  0x00\n    /* \"#utility.yul\":6927:6933   */\n  not\n    /* \"#utility.yul\":6919:6924   */\n  dup5\n    /* \"#utility.yul\":6916:6917   */\n  0x08\n    /* \"#utility.yul\":6912:6925   */\n  mul\n    /* \"#utility.yul\":6883:6934   */\n  tag_40\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":6879:6935   */\n  not\n    /* \"#utility.yul\":6964:6968   */\n  dup1\n    /* \"#utility.yul\":6958:6962   */\n  dup4\n    /* \"#utility.yul\":6954:6969   */\n  and\n    /* \"#utility.yul\":6944:6969   */\n  swap2\n  pop\n    /* \"#utility.yul\":6857:6975   */\n  pop\n    /* \"#utility.yul\":6806:6975   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6980:7275   */\ntag_42:\n    /* \"#utility.yul\":7056:7060   */\n  0x00\n    /* \"#utility.yul\":7202:7231   */\n  tag_131\n    /* \"#utility.yul\":7227:7230   */\n  dup4\n    /* \"#utility.yul\":7221:7225   */\n  dup4\n    /* \"#utility.yul\":7202:7231   */\n  tag_41\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":7194:7231   */\n  swap2\n  pop\n    /* \"#utility.yul\":7264:7267   */\n  dup3\n    /* \"#utility.yul\":7261:7262   */\n  0x02\n    /* \"#utility.yul\":7257:7268   */\n  mul\n    /* \"#utility.yul\":7251:7255   */\n  dup3\n    /* \"#utility.yul\":7248:7269   */\n  or\n    /* \"#utility.yul\":7240:7269   */\n  swap1\n  pop\n    /* \"#utility.yul\":6980:7275   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7280:8675   */\ntag_7:\n    /* \"#utility.yul\":7397:7434   */\n  tag_133\n    /* \"#utility.yul\":7430:7433   */\n  dup3\n    /* \"#utility.yul\":7397:7434   */\n  tag_25\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":7499:7517   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7491:7497   */\n  dup2\n    /* \"#utility.yul\":7488:7518   */\n  gt\n    /* \"#utility.yul\":7485:7541   */\n  iszero\n  tag_134\n  jumpi\n    /* \"#utility.yul\":7521:7539   */\n  tag_135\n  tag_18\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":7485:7541   */\ntag_134:\n    /* \"#utility.yul\":7565:7603   */\n  tag_136\n    /* \"#utility.yul\":7597:7601   */\n  dup3\n    /* \"#utility.yul\":7591:7602   */\n  sload\n    /* \"#utility.yul\":7565:7603   */\n  tag_27\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":7650:7717   */\n  tag_137\n    /* \"#utility.yul\":7710:7716   */\n  dup3\n    /* \"#utility.yul\":7702:7708   */\n  dup3\n    /* \"#utility.yul\":7696:7700   */\n  dup6\n    /* \"#utility.yul\":7650:7717   */\n  tag_39\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":7744:7745   */\n  0x00\n    /* \"#utility.yul\":7768:7772   */\n  0x20\n    /* \"#utility.yul\":7755:7772   */\n  swap1\n  pop\n    /* \"#utility.yul\":7800:7802   */\n  0x1f\n    /* \"#utility.yul\":7792:7798   */\n  dup4\n    /* \"#utility.yul\":7789:7803   */\n  gt\n    /* \"#utility.yul\":7817:7818   */\n  0x01\n    /* \"#utility.yul\":7812:8430   */\n  dup2\n  eq\n  tag_139\n  jumpi\n    /* \"#utility.yul\":8474:8475   */\n  0x00\n    /* \"#utility.yul\":8491:8497   */\n  dup5\n    /* \"#utility.yul\":8488:8565   */\n  iszero\n  tag_140\n  jumpi\n    /* \"#utility.yul\":8540:8549   */\n  dup3\n    /* \"#utility.yul\":8535:8538   */\n  dup8\n    /* \"#utility.yul\":8531:8550   */\n  add\n    /* \"#utility.yul\":8525:8551   */\n  mload\n    /* \"#utility.yul\":8516:8551   */\n  swap1\n  pop\n    /* \"#utility.yul\":8488:8565   */\ntag_140:\n    /* \"#utility.yul\":8591:8658   */\n  tag_141\n    /* \"#utility.yul\":8651:8657   */\n  dup6\n    /* \"#utility.yul\":8644:8649   */\n  dup3\n    /* \"#utility.yul\":8591:8658   */\n  tag_42\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":8585:8589   */\n  dup7\n    /* \"#utility.yul\":8578:8659   */\n  sstore\n    /* \"#utility.yul\":8447:8669   */\n  pop\n    /* \"#utility.yul\":7782:8669   */\n  jump(tag_138)\n    /* \"#utility.yul\":7812:8430   */\ntag_139:\n    /* \"#utility.yul\":7864:7868   */\n  0x1f\n    /* \"#utility.yul\":7860:7869   */\n  not\n    /* \"#utility.yul\":7852:7858   */\n  dup5\n    /* \"#utility.yul\":7848:7870   */\n  and\n    /* \"#utility.yul\":7898:7935   */\n  tag_142\n    /* \"#utility.yul\":7930:7934   */\n  dup7\n    /* \"#utility.yul\":7898:7935   */\n  tag_28\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":7957:7958   */\n  0x00\n    /* \"#utility.yul\":7971:8179   */\ntag_143:\n    /* \"#utility.yul\":7985:7992   */\n  dup3\n    /* \"#utility.yul\":7982:7983   */\n  dup2\n    /* \"#utility.yul\":7979:7993   */\n  lt\n    /* \"#utility.yul\":7971:8179   */\n  iszero\n  tag_145\n  jumpi\n    /* \"#utility.yul\":8064:8073   */\n  dup5\n    /* \"#utility.yul\":8059:8062   */\n  dup10\n    /* \"#utility.yul\":8055:8074   */\n  add\n    /* \"#utility.yul\":8049:8075   */\n  mload\n    /* \"#utility.yul\":8041:8047   */\n  dup3\n    /* \"#utility.yul\":8034:8076   */\n  sstore\n    /* \"#utility.yul\":8115:8116   */\n  0x01\n    /* \"#utility.yul\":8107:8113   */\n  dup3\n    /* \"#utility.yul\":8103:8117   */\n  add\n    /* \"#utility.yul\":8093:8117   */\n  swap2\n  pop\n    /* \"#utility.yul\":8162:8164   */\n  0x20\n    /* \"#utility.yul\":8151:8160   */\n  dup6\n    /* \"#utility.yul\":8147:8165   */\n  add\n    /* \"#utility.yul\":8134:8165   */\n  swap5\n  pop\n    /* \"#utility.yul\":8008:8012   */\n  0x20\n    /* \"#utility.yul\":8005:8006   */\n  dup2\n    /* \"#utility.yul\":8001:8013   */\n  add\n    /* \"#utility.yul\":7996:8013   */\n  swap1\n  pop\n    /* \"#utility.yul\":7971:8179   */\n  jump(tag_143)\ntag_145:\n    /* \"#utility.yul\":8207:8213   */\n  dup7\n    /* \"#utility.yul\":8198:8205   */\n  dup4\n    /* \"#utility.yul\":8195:8214   */\n  lt\n    /* \"#utility.yul\":8192:8371   */\n  iszero\n  tag_146\n  jumpi\n    /* \"#utility.yul\":8265:8274   */\n  dup5\n    /* \"#utility.yul\":8260:8263   */\n  dup10\n    /* \"#utility.yul\":8256:8275   */\n  add\n    /* \"#utility.yul\":8250:8276   */\n  mload\n    /* \"#utility.yul\":8308:8356   */\n  tag_147\n    /* \"#utility.yul\":8350:8354   */\n  0x1f\n    /* \"#utility.yul\":8342:8348   */\n  dup10\n    /* \"#utility.yul\":8338:8355   */\n  and\n    /* \"#utility.yul\":8327:8336   */\n  dup3\n    /* \"#utility.yul\":8308:8356   */\n  tag_41\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":8300:8306   */\n  dup4\n    /* \"#utility.yul\":8293:8357   */\n  sstore\n    /* \"#utility.yul\":8215:8371   */\n  pop\n    /* \"#utility.yul\":8192:8371   */\ntag_146:\n    /* \"#utility.yul\":8417:8418   */\n  0x01\n    /* \"#utility.yul\":8413:8414   */\n  0x02\n    /* \"#utility.yul\":8405:8411   */\n  dup9\n    /* \"#utility.yul\":8401:8415   */\n  mul\n    /* \"#utility.yul\":8397:8419   */\n  add\n    /* \"#utility.yul\":8391:8395   */\n  dup9\n    /* \"#utility.yul\":8384:8420   */\n  sstore\n    /* \"#utility.yul\":7819:8430   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7782:8669   */\ntag_138:\n  pop\n    /* \"#utility.yul\":7372:8675   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7280:8675   */\n  pop\n  pop\n  jump\t// out\n    /* \"Picture.sol\":61:264  contract Picture {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Picture.sol\":61:264  contract Picture {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206628c35243f79f05405b8d532cb3e25f74e499793fc95cb00b90ade4fb29895c64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_21": {
									"entryPoint": null,
									"id": 21,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 378,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 443,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 126,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_string_memory_ptr_fromMemory": {
									"entryPoint": 488,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_memory": {
									"entryPoint": 264,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 78,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 290,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 681,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 578,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 957,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 95,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 923,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 816,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1094,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 338,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 699,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 633,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1067,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 215,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 807,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1039,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 588,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 170,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 849,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 146,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 150,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 91,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 87,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 154,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 714,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1027,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 899,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 726,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 858,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 104,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 895,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8678:14",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:14"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:14",
														"type": ""
													}
												],
												"src": "7:75:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:14"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:14"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:14",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:14",
														"type": ""
													}
												],
												"src": "334:77:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:14"
															},
															"nodeType": "YulIf",
															"src": "470:63:14"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:14",
														"type": ""
													}
												],
												"src": "417:122:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "608:80:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "618:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "627:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "618:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "676:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "649:26:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "649:33:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "649:33:14"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "586:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "594:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "602:5:14",
														"type": ""
													}
												],
												"src": "545:143:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "783:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "800:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "803:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "793:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "793:12:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "793:12:14"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "694:117:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "906:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "923:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "926:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "916:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "916:12:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "916:12:14"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "817:117:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "988:54:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "998:38:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1016:5:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1023:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1012:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1012:14:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1032:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1028:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1028:7:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1008:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1008:28:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "998:6:14"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "971:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "981:6:14",
														"type": ""
													}
												],
												"src": "940:102:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1076:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1093:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1096:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1086:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1086:88:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1086:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1190:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1193:4:14",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1183:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1183:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1183:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1214:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1217:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1207:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1207:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1207:15:14"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1048:180:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1277:238:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1287:58:14",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1309:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "1339:4:14"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "1317:21:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1317:27:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1305:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1305:40:14"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1291:10:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1456:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1458:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1458:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1458:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1399:10:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1411:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1396:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1396:34:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1435:10:14"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1447:6:14"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1432:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1432:22:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1393:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1393:62:14"
															},
															"nodeType": "YulIf",
															"src": "1390:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1494:2:14",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1498:10:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1487:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1487:22:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1487:22:14"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1263:6:14",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1271:4:14",
														"type": ""
													}
												],
												"src": "1234:281:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1562:88:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1572:30:14",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1582:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:20:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1572:6:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1631:6:14"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1639:4:14"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1611:19:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1611:33:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1611:33:14"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1546:4:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1555:6:14",
														"type": ""
													}
												],
												"src": "1521:129:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1723:241:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1828:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1830:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1830:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1830:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1800:6:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1808:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1797:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1797:30:14"
															},
															"nodeType": "YulIf",
															"src": "1794:56:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1860:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1890:6:14"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "1868:21:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1868:29:14"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1860:4:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1934:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1946:4:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1952:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1942:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1942:15:14"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1934:4:14"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1707:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1718:4:14",
														"type": ""
													}
												],
												"src": "1656:308:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2032:184:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2042:10:14",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2051:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2046:1:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2111:63:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2136:3:14"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "2141:1:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2132:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2132:11:14"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "2155:3:14"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "2160:1:14"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2151:3:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2151:11:14"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2145:5:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2145:18:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2125:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2125:39:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2125:39:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2072:1:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2075:6:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2069:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2069:13:14"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2083:19:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2085:15:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2094:1:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2097:2:14",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2090:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2090:10:14"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2085:1:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2065:3:14",
																"statements": []
															},
															"src": "2061:113:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "2194:3:14"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2199:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2190:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2190:16:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2208:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2183:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2183:27:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2183:27:14"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2014:3:14",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "2019:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2024:6:14",
														"type": ""
													}
												],
												"src": "1970:246:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2317:339:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2327:75:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2394:6:14"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "2352:41:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2352:49:14"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2336:15:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2336:66:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2327:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2418:5:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2425:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2411:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2411:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2411:21:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2441:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2456:5:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2463:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2452:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2452:16:14"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2445:3:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2506:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "2508:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2508:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2508:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2487:3:14"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2492:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2483:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2483:16:14"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2501:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2480:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2480:25:14"
															},
															"nodeType": "YulIf",
															"src": "2477:112:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2633:3:14"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2638:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2643:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2598:34:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2598:52:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2598:52:14"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2290:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2295:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2303:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2311:5:14",
														"type": ""
													}
												],
												"src": "2222:434:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2749:282:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2798:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2800:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2800:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2800:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2777:6:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2785:4:14",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2773:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2773:17:14"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2792:3:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2769:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2769:27:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2762:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2762:35:14"
															},
															"nodeType": "YulIf",
															"src": "2759:122:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2890:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2910:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2904:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2904:13:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2894:6:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2926:99:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2998:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3006:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2994:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2994:17:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3013:6:14"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3021:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2935:58:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2935:90:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2926:5:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2727:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2735:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2743:5:14",
														"type": ""
													}
												],
												"src": "2676:355:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3141:576:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3187:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3189:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3189:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3189:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3162:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3171:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3158:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3158:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3183:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3154:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3154:32:14"
															},
															"nodeType": "YulIf",
															"src": "3151:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "3280:128:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3295:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3309:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3299:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3324:74:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3370:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3381:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3366:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3366:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3390:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3334:31:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3334:64:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3324:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3418:292:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3433:39:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3457:9:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3468:2:14",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3453:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3453:18:14"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3447:5:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3447:25:14"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3437:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3519:83:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3521:77:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3521:79:14"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3521:79:14"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3491:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3499:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3488:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3488:30:14"
																	},
																	"nodeType": "YulIf",
																	"src": "3485:117:14"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3616:84:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3672:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3683:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3668:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3668:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3692:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3626:41:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3626:74:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3616:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3103:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3114:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3126:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3134:6:14",
														"type": ""
													}
												],
												"src": "3037:680:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3782:40:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3793:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3809:5:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3803:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3803:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3793:6:14"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3765:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3775:6:14",
														"type": ""
													}
												],
												"src": "3723:99:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3856:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3873:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3876:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3866:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3866:88:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3866:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3970:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3973:4:14",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3963:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3963:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3963:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3994:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3997:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3987:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3987:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3987:15:14"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "3828:180:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4065:269:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4075:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4089:4:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4095:1:14",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4085:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4085:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4075:6:14"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4106:38:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4136:4:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4142:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4132:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4132:12:14"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "4110:18:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4183:51:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4197:27:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "4211:6:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4219:4:14",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "4207:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4207:17:14"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4197:6:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4163:18:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4156:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4156:26:14"
															},
															"nodeType": "YulIf",
															"src": "4153:81:14"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4286:42:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "4300:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4300:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4300:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4250:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4273:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4281:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4270:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4270:14:14"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4247:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4247:38:14"
															},
															"nodeType": "YulIf",
															"src": "4244:84:14"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4049:4:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4058:6:14",
														"type": ""
													}
												],
												"src": "4014:320:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4394:87:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4404:11:14",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "4412:3:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4404:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4432:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "4435:3:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4425:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4425:14:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4425:14:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4448:26:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4466:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4469:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "4456:9:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4456:18:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4448:4:14"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "4381:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4389:4:14",
														"type": ""
													}
												],
												"src": "4340:141:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4531:49:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4541:33:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4559:5:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4566:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4555:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4555:14:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4571:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4551:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4551:23:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4541:6:14"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4514:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4524:6:14",
														"type": ""
													}
												],
												"src": "4487:93:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4639:54:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4649:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "4674:4:14"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4680:5:14"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "4670:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4670:16:14"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "4649:8:14"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "4614:4:14",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4620:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "4630:8:14",
														"type": ""
													}
												],
												"src": "4586:107:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4775:317:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4785:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "4806:10:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4818:1:14",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4802:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4802:18:14"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "4789:9:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4829:109:14",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "4860:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4871:66:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "4841:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4841:97:14"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "4833:4:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4947:51:14",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "4978:9:14"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "4989:8:14"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "4959:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4959:39:14"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "4947:8:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5007:30:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5020:5:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "5031:4:14"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5027:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5027:9:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5016:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5016:21:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5007:5:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5046:40:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5059:5:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "5070:8:14"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "5080:4:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5066:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5066:19:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5056:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5056:30:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "5046:6:14"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4736:5:14",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "4743:10:14",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "4755:8:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4768:6:14",
														"type": ""
													}
												],
												"src": "4699:393:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5130:28:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5140:12:14",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5147:5:14"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5140:3:14"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5116:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5126:3:14",
														"type": ""
													}
												],
												"src": "5098:60:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5224:82:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5234:66:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5292:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5274:17:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5274:24:14"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "5265:8:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5265:34:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5247:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5247:53:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "5234:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5204:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5214:9:14",
														"type": ""
													}
												],
												"src": "5164:142:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5359:28:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5369:12:14",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5376:5:14"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5369:3:14"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5345:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5355:3:14",
														"type": ""
													}
												],
												"src": "5312:75:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5469:193:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5479:63:14",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "5534:7:14"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5503:30:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5503:39:14"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "5483:16:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5558:4:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "5598:4:14"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "5592:5:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5592:11:14"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5605:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "5637:16:14"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5613:23:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5613:41:14"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "5564:27:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5564:91:14"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "5551:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5551:105:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5551:105:14"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5446:4:14",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5452:6:14",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "5460:7:14",
														"type": ""
													}
												],
												"src": "5393:269:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5717:24:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5727:8:14",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5734:1:14",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5727:3:14"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5713:3:14",
														"type": ""
													}
												],
												"src": "5668:73:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5800:136:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5810:46:14",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5824:30:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5824:32:14"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "5814:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5909:4:14"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5915:6:14"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "5923:6:14"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5865:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5865:65:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5865:65:14"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5786:4:14",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5792:6:14",
														"type": ""
													}
												],
												"src": "5747:189:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5992:136:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6059:63:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "6103:5:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6110:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "6073:29:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6073:39:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6073:39:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "6012:5:14"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "6019:3:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6009:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6009:14:14"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6024:26:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6026:22:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "6039:5:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6046:1:14",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6035:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6035:13:14"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "6026:5:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6006:2:14",
																"statements": []
															},
															"src": "6002:120:14"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "5980:5:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5987:3:14",
														"type": ""
													}
												],
												"src": "5942:186:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6213:464:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6239:431:14",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6253:54:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "6301:5:14"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "6269:31:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6269:38:14"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "6257:8:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6320:63:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "6343:8:14"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "6371:10:14"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "6353:17:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6353:29:14"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6339:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6339:44:14"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "6324:11:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "6540:27:14",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "6542:23:14",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "6557:8:14"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "6542:11:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "6524:10:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6536:2:14",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "6521:2:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6521:18:14"
																		},
																		"nodeType": "YulIf",
																		"src": "6518:49:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "6609:11:14"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "6626:8:14"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "6654:3:14"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "6636:17:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6636:22:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6622:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6622:37:14"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "6580:28:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6580:80:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6580:80:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "6230:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6235:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6227:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6227:11:14"
															},
															"nodeType": "YulIf",
															"src": "6224:446:14"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6189:5:14",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "6196:3:14",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "6201:10:14",
														"type": ""
													}
												],
												"src": "6134:543:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6746:54:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6756:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "6781:4:14"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6787:5:14"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6777:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6777:16:14"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "6756:8:14"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "6721:4:14",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6727:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "6737:8:14",
														"type": ""
													}
												],
												"src": "6683:117:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6857:118:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6867:68:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6916:1:14",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "6919:5:14"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "6912:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6912:13:14"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6931:1:14",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "6927:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6927:6:14"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "6883:28:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6883:51:14"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "6879:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6879:56:14"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "6871:4:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6944:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6958:4:14"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "6964:4:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6954:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6954:15:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "6944:6:14"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6834:4:14",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "6840:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "6850:6:14",
														"type": ""
													}
												],
												"src": "6806:169:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7061:214:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7194:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7221:4:14"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "7227:3:14"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "7202:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7202:29:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "7194:4:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7240:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7251:4:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7261:1:14",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "7264:3:14"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7257:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7257:11:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7248:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7248:21:14"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "7240:4:14"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "7042:4:14",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "7048:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "7056:4:14",
														"type": ""
													}
												],
												"src": "6980:295:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7372:1303:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7383:51:14",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7430:3:14"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7397:32:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7397:37:14"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "7387:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7519:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7521:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7521:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7521:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7491:6:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7499:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7488:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7488:30:14"
															},
															"nodeType": "YulIf",
															"src": "7485:56:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7551:52:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "7597:4:14"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "7591:5:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7591:11:14"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "7565:25:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7565:38:14"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "7555:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "7696:4:14"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "7702:6:14"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7710:6:14"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "7650:45:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7650:67:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7650:67:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7727:18:14",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7744:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "7731:9:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7755:17:14",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7768:4:14",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "7755:9:14"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7819:611:14",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7833:37:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "7852:6:14"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "7864:4:14",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "7860:3:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7860:9:14"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "7848:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7848:22:14"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "7837:7:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7884:51:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "7930:4:14"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "7898:31:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7898:37:14"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "7888:6:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7948:10:14",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7957:1:14",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "7952:1:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8016:163:14",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8041:6:14"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "8059:3:14"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "8064:9:14"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "8055:3:14"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "8055:19:14"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "8049:5:14"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8049:26:14"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "8034:6:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8034:42:14"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "8034:42:14"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "8093:24:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8107:6:14"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8115:1:14",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8103:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8103:14:14"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "8093:6:14"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "8134:31:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "8151:9:14"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8162:2:14",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8147:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8147:18:14"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "8134:9:14"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "7982:1:14"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "7985:7:14"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "7979:2:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7979:14:14"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "7994:21:14",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "7996:17:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "8005:1:14"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8008:4:14",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8001:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8001:12:14"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "7996:1:14"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "7975:3:14",
																					"statements": []
																				},
																				"src": "7971:208:14"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8215:156:14",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "8233:43:14",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "8260:3:14"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "8265:9:14"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "8256:3:14"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8256:19:14"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "8250:5:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8250:26:14"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "8237:9:14",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8300:6:14"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "8327:9:14"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "8342:6:14"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "8350:4:14",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "8338:3:14"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "8338:17:14"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "8308:18:14"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8308:48:14"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "8293:6:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8293:64:14"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "8293:64:14"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "8198:7:14"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "8207:6:14"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "8195:2:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8195:19:14"
																				},
																				"nodeType": "YulIf",
																				"src": "8192:179:14"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8391:4:14"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "8405:6:14"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "8413:1:14",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "8401:3:14"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "8401:14:14"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "8417:1:14",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "8397:3:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8397:22:14"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8384:6:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8384:36:14"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8384:36:14"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "7812:618:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7817:1:14",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8447:222:14",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "8461:14:14",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8474:1:14",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "8465:5:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8498:67:14",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "8516:35:14",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "8535:3:14"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "8540:9:14"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "8531:3:14"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8531:19:14"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "8525:5:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8525:26:14"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8516:5:14"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "8491:6:14"
																				},
																				"nodeType": "YulIf",
																				"src": "8488:77:14"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8585:4:14"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8644:5:14"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "8651:6:14"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "8591:52:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8591:67:14"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8578:6:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8578:81:14"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8578:81:14"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "8439:230:14",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7792:6:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7800:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7789:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7789:14:14"
															},
															"nodeType": "YulSwitch",
															"src": "7782:887:14"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "7361:4:14",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7367:3:14",
														"type": ""
													}
												],
												"src": "7280:1395:14"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_uint256t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060405161055f38038061055f833981810160405281019061003191906101e8565b815f8190555080600190816100469190610446565b505050610515565b5f604051905090565b5f80fd5b5f80fd5b5f819050919050565b6100718161005f565b811461007b575f80fd5b50565b5f8151905061008c81610068565b92915050565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6100e08261009a565b810181811067ffffffffffffffff821117156100ff576100fe6100aa565b5b80604052505050565b5f61011161004e565b905061011d82826100d7565b919050565b5f67ffffffffffffffff82111561013c5761013b6100aa565b5b6101458261009a565b9050602081019050919050565b5f5b8381101561016f578082015181840152602081019050610154565b5f8484015250505050565b5f61018c61018784610122565b610108565b9050828152602081018484840111156101a8576101a7610096565b5b6101b3848285610152565b509392505050565b5f82601f8301126101cf576101ce610092565b5b81516101df84826020860161017a565b91505092915050565b5f80604083850312156101fe576101fd610057565b5b5f61020b8582860161007e565b925050602083015167ffffffffffffffff81111561022c5761022b61005b565b5b610238858286016101bb565b9150509250929050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061029057607f821691505b6020821081036102a3576102a261024c565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026103057fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826102ca565b61030f86836102ca565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61034a6103456103408461005f565b610327565b61005f565b9050919050565b5f819050919050565b61036383610330565b61037761036f82610351565b8484546102d6565b825550505050565b5f90565b61038b61037f565b61039681848461035a565b505050565b5b818110156103b9576103ae5f82610383565b60018101905061039c565b5050565b601f8211156103fe576103cf816102a9565b6103d8846102bb565b810160208510156103e7578190505b6103fb6103f3856102bb565b83018261039b565b50505b505050565b5f82821c905092915050565b5f61041e5f1984600802610403565b1980831691505092915050565b5f610436838361040f565b9150826002028217905092915050565b61044f82610242565b67ffffffffffffffff811115610468576104676100aa565b5b6104728254610279565b61047d8282856103bd565b5f60209050601f8311600181146104ae575f841561049c578287015190505b6104a6858261042b565b86555061050d565b601f1984166104bc866102a9565b5f5b828110156104e3578489015182556001820191506020850194506020810190506104be565b8683101561050057848901516104fc601f89168261040f565b8355505b6001600288020188555050505b505050505050565b603e806105215f395ff3fe60806040525f80fdfea26469706673582212206628c35243f79f05405b8d532cb3e25f74e499793fc95cb00b90ade4fb29895c64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x55F CODESIZE SUB DUP1 PUSH2 0x55F DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x1E8 JUMP JUMPDEST DUP2 PUSH0 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH2 0x46 SWAP2 SWAP1 PUSH2 0x446 JUMP JUMPDEST POP POP POP PUSH2 0x515 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x71 DUP2 PUSH2 0x5F JUMP JUMPDEST DUP2 EQ PUSH2 0x7B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x8C DUP2 PUSH2 0x68 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0xE0 DUP3 PUSH2 0x9A JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xFF JUMPI PUSH2 0xFE PUSH2 0xAA JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x111 PUSH2 0x4E JUMP JUMPDEST SWAP1 POP PUSH2 0x11D DUP3 DUP3 PUSH2 0xD7 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x13C JUMPI PUSH2 0x13B PUSH2 0xAA JUMP JUMPDEST JUMPDEST PUSH2 0x145 DUP3 PUSH2 0x9A JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x154 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x18C PUSH2 0x187 DUP5 PUSH2 0x122 JUMP JUMPDEST PUSH2 0x108 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1A8 JUMPI PUSH2 0x1A7 PUSH2 0x96 JUMP JUMPDEST JUMPDEST PUSH2 0x1B3 DUP5 DUP3 DUP6 PUSH2 0x152 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1CF JUMPI PUSH2 0x1CE PUSH2 0x92 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x1DF DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x17A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FE JUMPI PUSH2 0x1FD PUSH2 0x57 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20B DUP6 DUP3 DUP7 ADD PUSH2 0x7E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22C JUMPI PUSH2 0x22B PUSH2 0x5B JUMP JUMPDEST JUMPDEST PUSH2 0x238 DUP6 DUP3 DUP7 ADD PUSH2 0x1BB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x290 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2A3 JUMPI PUSH2 0x2A2 PUSH2 0x24C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x305 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2CA JUMP JUMPDEST PUSH2 0x30F DUP7 DUP4 PUSH2 0x2CA JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x34A PUSH2 0x345 PUSH2 0x340 DUP5 PUSH2 0x5F JUMP JUMPDEST PUSH2 0x327 JUMP JUMPDEST PUSH2 0x5F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x363 DUP4 PUSH2 0x330 JUMP JUMPDEST PUSH2 0x377 PUSH2 0x36F DUP3 PUSH2 0x351 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2D6 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x38B PUSH2 0x37F JUMP JUMPDEST PUSH2 0x396 DUP2 DUP5 DUP5 PUSH2 0x35A JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3B9 JUMPI PUSH2 0x3AE PUSH0 DUP3 PUSH2 0x383 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x39C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x3FE JUMPI PUSH2 0x3CF DUP2 PUSH2 0x2A9 JUMP JUMPDEST PUSH2 0x3D8 DUP5 PUSH2 0x2BB JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x3E7 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x3FB PUSH2 0x3F3 DUP6 PUSH2 0x2BB JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x39B JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x41E PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x403 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x436 DUP4 DUP4 PUSH2 0x40F JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x44F DUP3 PUSH2 0x242 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x468 JUMPI PUSH2 0x467 PUSH2 0xAA JUMP JUMPDEST JUMPDEST PUSH2 0x472 DUP3 SLOAD PUSH2 0x279 JUMP JUMPDEST PUSH2 0x47D DUP3 DUP3 DUP6 PUSH2 0x3BD JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x4AE JUMPI PUSH0 DUP5 ISZERO PUSH2 0x49C JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x4A6 DUP6 DUP3 PUSH2 0x42B JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x50D JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x4BC DUP7 PUSH2 0x2A9 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4E3 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4BE JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x500 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x4FC PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x40F JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3E DUP1 PUSH2 0x521 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0x28C35243F79F05 BLOCKHASH JUMPDEST DUP14 MSTORE8 0x2C 0xB3 0xE2 PUSH0 PUSH21 0xE499793FC95CB00B90ADE4FB29895C64736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "61:203:0:-:0;;;128:133;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;223:6;215:5;:14;;;;247:6;240:5;:13;;;;;;:::i;:::-;;128:133;;61:203;;7:75:14;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:117::-;803:1;800;793:12;817:117;926:1;923;916:12;940:102;981:6;1032:2;1028:7;1023:2;1016:5;1012:14;1008:28;998:38;;940:102;;;:::o;1048:180::-;1096:77;1093:1;1086:88;1193:4;1190:1;1183:15;1217:4;1214:1;1207:15;1234:281;1317:27;1339:4;1317:27;:::i;:::-;1309:6;1305:40;1447:6;1435:10;1432:22;1411:18;1399:10;1396:34;1393:62;1390:88;;;1458:18;;:::i;:::-;1390:88;1498:10;1494:2;1487:22;1277:238;1234:281;;:::o;1521:129::-;1555:6;1582:20;;:::i;:::-;1572:30;;1611:33;1639:4;1631:6;1611:33;:::i;:::-;1521:129;;;:::o;1656:308::-;1718:4;1808:18;1800:6;1797:30;1794:56;;;1830:18;;:::i;:::-;1794:56;1868:29;1890:6;1868:29;:::i;:::-;1860:37;;1952:4;1946;1942:15;1934:23;;1656:308;;;:::o;1970:246::-;2051:1;2061:113;2075:6;2072:1;2069:13;2061:113;;;2160:1;2155:3;2151:11;2145:18;2141:1;2136:3;2132:11;2125:39;2097:2;2094:1;2090:10;2085:15;;2061:113;;;2208:1;2199:6;2194:3;2190:16;2183:27;2032:184;1970:246;;;:::o;2222:434::-;2311:5;2336:66;2352:49;2394:6;2352:49;:::i;:::-;2336:66;:::i;:::-;2327:75;;2425:6;2418:5;2411:21;2463:4;2456:5;2452:16;2501:3;2492:6;2487:3;2483:16;2480:25;2477:112;;;2508:79;;:::i;:::-;2477:112;2598:52;2643:6;2638:3;2633;2598:52;:::i;:::-;2317:339;2222:434;;;;;:::o;2676:355::-;2743:5;2792:3;2785:4;2777:6;2773:17;2769:27;2759:122;;2800:79;;:::i;:::-;2759:122;2910:6;2904:13;2935:90;3021:3;3013:6;3006:4;2998:6;2994:17;2935:90;:::i;:::-;2926:99;;2749:282;2676:355;;;;:::o;3037:680::-;3126:6;3134;3183:2;3171:9;3162:7;3158:23;3154:32;3151:119;;;3189:79;;:::i;:::-;3151:119;3309:1;3334:64;3390:7;3381:6;3370:9;3366:22;3334:64;:::i;:::-;3324:74;;3280:128;3468:2;3457:9;3453:18;3447:25;3499:18;3491:6;3488:30;3485:117;;;3521:79;;:::i;:::-;3485:117;3626:74;3692:7;3683:6;3672:9;3668:22;3626:74;:::i;:::-;3616:84;;3418:292;3037:680;;;;;:::o;3723:99::-;3775:6;3809:5;3803:12;3793:22;;3723:99;;;:::o;3828:180::-;3876:77;3873:1;3866:88;3973:4;3970:1;3963:15;3997:4;3994:1;3987:15;4014:320;4058:6;4095:1;4089:4;4085:12;4075:22;;4142:1;4136:4;4132:12;4163:18;4153:81;;4219:4;4211:6;4207:17;4197:27;;4153:81;4281:2;4273:6;4270:14;4250:18;4247:38;4244:84;;4300:18;;:::i;:::-;4244:84;4065:269;4014:320;;;:::o;4340:141::-;4389:4;4412:3;4404:11;;4435:3;4432:1;4425:14;4469:4;4466:1;4456:18;4448:26;;4340:141;;;:::o;4487:93::-;4524:6;4571:2;4566;4559:5;4555:14;4551:23;4541:33;;4487:93;;;:::o;4586:107::-;4630:8;4680:5;4674:4;4670:16;4649:37;;4586:107;;;;:::o;4699:393::-;4768:6;4818:1;4806:10;4802:18;4841:97;4871:66;4860:9;4841:97;:::i;:::-;4959:39;4989:8;4978:9;4959:39;:::i;:::-;4947:51;;5031:4;5027:9;5020:5;5016:21;5007:30;;5080:4;5070:8;5066:19;5059:5;5056:30;5046:40;;4775:317;;4699:393;;;;;:::o;5098:60::-;5126:3;5147:5;5140:12;;5098:60;;;:::o;5164:142::-;5214:9;5247:53;5265:34;5274:24;5292:5;5274:24;:::i;:::-;5265:34;:::i;:::-;5247:53;:::i;:::-;5234:66;;5164:142;;;:::o;5312:75::-;5355:3;5376:5;5369:12;;5312:75;;;:::o;5393:269::-;5503:39;5534:7;5503:39;:::i;:::-;5564:91;5613:41;5637:16;5613:41;:::i;:::-;5605:6;5598:4;5592:11;5564:91;:::i;:::-;5558:4;5551:105;5469:193;5393:269;;;:::o;5668:73::-;5713:3;5668:73;:::o;5747:189::-;5824:32;;:::i;:::-;5865:65;5923:6;5915;5909:4;5865:65;:::i;:::-;5800:136;5747:189;;:::o;5942:186::-;6002:120;6019:3;6012:5;6009:14;6002:120;;;6073:39;6110:1;6103:5;6073:39;:::i;:::-;6046:1;6039:5;6035:13;6026:22;;6002:120;;;5942:186;;:::o;6134:543::-;6235:2;6230:3;6227:11;6224:446;;;6269:38;6301:5;6269:38;:::i;:::-;6353:29;6371:10;6353:29;:::i;:::-;6343:8;6339:44;6536:2;6524:10;6521:18;6518:49;;;6557:8;6542:23;;6518:49;6580:80;6636:22;6654:3;6636:22;:::i;:::-;6626:8;6622:37;6609:11;6580:80;:::i;:::-;6239:431;;6224:446;6134:543;;;:::o;6683:117::-;6737:8;6787:5;6781:4;6777:16;6756:37;;6683:117;;;;:::o;6806:169::-;6850:6;6883:51;6931:1;6927:6;6919:5;6916:1;6912:13;6883:51;:::i;:::-;6879:56;6964:4;6958;6954:15;6944:25;;6857:118;6806:169;;;;:::o;6980:295::-;7056:4;7202:29;7227:3;7221:4;7202:29;:::i;:::-;7194:37;;7264:3;7261:1;7257:11;7251:4;7248:21;7240:29;;6980:295;;;;:::o;7280:1395::-;7397:37;7430:3;7397:37;:::i;:::-;7499:18;7491:6;7488:30;7485:56;;;7521:18;;:::i;:::-;7485:56;7565:38;7597:4;7591:11;7565:38;:::i;:::-;7650:67;7710:6;7702;7696:4;7650:67;:::i;:::-;7744:1;7768:4;7755:17;;7800:2;7792:6;7789:14;7817:1;7812:618;;;;8474:1;8491:6;8488:77;;;8540:9;8535:3;8531:19;8525:26;8516:35;;8488:77;8591:67;8651:6;8644:5;8591:67;:::i;:::-;8585:4;8578:81;8447:222;7782:887;;7812:618;7864:4;7860:9;7852:6;7848:22;7898:37;7930:4;7898:37;:::i;:::-;7957:1;7971:208;7985:7;7982:1;7979:14;7971:208;;;8064:9;8059:3;8055:19;8049:26;8041:6;8034:42;8115:1;8107:6;8103:14;8093:24;;8162:2;8151:9;8147:18;8134:31;;8008:4;8005:1;8001:12;7996:17;;7971:208;;;8207:6;8198:7;8195:19;8192:179;;;8265:9;8260:3;8256:19;8250:26;8308:48;8350:4;8342:6;8338:17;8327:9;8308:48;:::i;:::-;8300:6;8293:64;8215:156;8192:179;8417:1;8413;8405:6;8401:14;8397:22;8391:4;8384:36;7819:611;;;7782:887;;7372:1303;;;7280:1395;;:::o;61:203:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040525f80fdfea26469706673582212206628c35243f79f05405b8d532cb3e25f74e499793fc95cb00b90ade4fb29895c64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0x28C35243F79F05 BLOCKHASH JUMPDEST DUP14 MSTORE8 0x2C 0xB3 0xE2 PUSH0 PUSH21 0xE499793FC95CB00B90ADE4FB29895C64736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "61:203:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 61,
									"end": 264,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 61,
									"end": 264,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 61,
									"end": 264,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 128,
									"end": 261,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 128,
									"end": 261,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 128,
									"end": 261,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 128,
									"end": 261,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 128,
									"end": 261,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 128,
									"end": 261,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 128,
									"end": 261,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 128,
									"end": 261,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 128,
									"end": 261,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 128,
									"end": 261,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 128,
									"end": 261,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 128,
									"end": 261,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 128,
									"end": 261,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 128,
									"end": 261,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 128,
									"end": 261,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 128,
									"end": 261,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 128,
									"end": 261,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 128,
									"end": 261,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 128,
									"end": 261,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 128,
									"end": 261,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 128,
									"end": 261,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 128,
									"end": 261,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 128,
									"end": 261,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 128,
									"end": 261,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 128,
									"end": 261,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 128,
									"end": 261,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 128,
									"end": 261,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 128,
									"end": 261,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 128,
									"end": 261,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 128,
									"end": 261,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 128,
									"end": 261,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 128,
									"end": 261,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 128,
									"end": 261,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 128,
									"end": 261,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 128,
									"end": 261,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 223,
									"end": 229,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 215,
									"end": 220,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 229,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 215,
									"end": 229,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 215,
									"end": 229,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 215,
									"end": 229,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 247,
									"end": 253,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 240,
									"end": 245,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 240,
									"end": 253,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 240,
									"end": 253,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 240,
									"end": 253,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 240,
									"end": 253,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 240,
									"end": 253,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 240,
									"end": 253,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 240,
									"end": 253,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 240,
									"end": 253,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 240,
									"end": 253,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 240,
									"end": 253,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 128,
									"end": 261,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 128,
									"end": 261,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 61,
									"end": 264,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 61,
									"end": 264,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 14,
									"value": "9"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 14,
									"value": "10"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 14,
									"value": "11"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 334,
									"end": 411,
									"name": "tag",
									"source": 14,
									"value": "12"
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 405,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 389,
									"end": 405,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 389,
									"end": 405,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 334,
									"end": 411,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 334,
									"end": 411,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 417,
									"end": 539,
									"name": "tag",
									"source": 14,
									"value": "13"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "49"
								},
								{
									"begin": 508,
									"end": 513,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "12"
								},
								{
									"begin": 490,
									"end": 514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 490,
									"end": 514,
									"name": "tag",
									"source": 14,
									"value": "49"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 483,
									"end": 488,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 480,
									"end": 515,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 470,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "50"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 527,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 519,
									"end": 531,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 470,
									"end": 533,
									"name": "tag",
									"source": 14,
									"value": "50"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 417,
									"end": 539,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 417,
									"end": 539,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 545,
									"end": 688,
									"name": "tag",
									"source": 14,
									"value": "14"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 602,
									"end": 607,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 639,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 627,
									"end": 640,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 618,
									"end": 640,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 618,
									"end": 640,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "52"
								},
								{
									"begin": 676,
									"end": 681,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "13"
								},
								{
									"begin": 649,
									"end": 682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 649,
									"end": 682,
									"name": "tag",
									"source": 14,
									"value": "52"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 545,
									"end": 688,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 694,
									"end": 811,
									"name": "tag",
									"source": 14,
									"value": "15"
								},
								{
									"begin": 694,
									"end": 811,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 803,
									"end": 804,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 800,
									"end": 801,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 793,
									"end": 805,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 817,
									"end": 934,
									"name": "tag",
									"source": 14,
									"value": "16"
								},
								{
									"begin": 817,
									"end": 934,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 926,
									"end": 927,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 923,
									"end": 924,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 916,
									"end": 928,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 940,
									"end": 1042,
									"name": "tag",
									"source": 14,
									"value": "17"
								},
								{
									"begin": 940,
									"end": 1042,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 981,
									"end": 987,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1032,
									"end": 1034,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 1028,
									"end": 1035,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 1023,
									"end": 1025,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 1016,
									"end": 1021,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 1012,
									"end": 1026,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1008,
									"end": 1036,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 998,
									"end": 1036,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 998,
									"end": 1036,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 940,
									"end": 1042,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 940,
									"end": 1042,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 940,
									"end": 1042,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 940,
									"end": 1042,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1048,
									"end": 1228,
									"name": "tag",
									"source": 14,
									"value": "18"
								},
								{
									"begin": 1048,
									"end": 1228,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1096,
									"end": 1173,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1093,
									"end": 1094,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1086,
									"end": 1174,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1193,
									"end": 1197,
									"name": "PUSH",
									"source": 14,
									"value": "41"
								},
								{
									"begin": 1190,
									"end": 1191,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 1183,
									"end": 1198,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1217,
									"end": 1221,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 1214,
									"end": 1215,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1207,
									"end": 1222,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 1234,
									"end": 1515,
									"name": "tag",
									"source": 14,
									"value": "19"
								},
								{
									"begin": 1234,
									"end": 1515,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1317,
									"end": 1344,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "58"
								},
								{
									"begin": 1339,
									"end": 1343,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1317,
									"end": 1344,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "17"
								},
								{
									"begin": 1317,
									"end": 1344,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1317,
									"end": 1344,
									"name": "tag",
									"source": 14,
									"value": "58"
								},
								{
									"begin": 1317,
									"end": 1344,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1309,
									"end": 1315,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1305,
									"end": 1345,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1447,
									"end": 1453,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1435,
									"end": 1445,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1432,
									"end": 1454,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 1411,
									"end": 1429,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1399,
									"end": 1409,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1396,
									"end": 1430,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 1393,
									"end": 1455,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 1390,
									"end": 1478,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 1390,
									"end": 1478,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "59"
								},
								{
									"begin": 1390,
									"end": 1478,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1458,
									"end": 1476,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "60"
								},
								{
									"begin": 1458,
									"end": 1476,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "18"
								},
								{
									"begin": 1458,
									"end": 1476,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1458,
									"end": 1476,
									"name": "tag",
									"source": 14,
									"value": "60"
								},
								{
									"begin": 1458,
									"end": 1476,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1390,
									"end": 1478,
									"name": "tag",
									"source": 14,
									"value": "59"
								},
								{
									"begin": 1390,
									"end": 1478,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1498,
									"end": 1508,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1494,
									"end": 1496,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 1487,
									"end": 1509,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1277,
									"end": 1515,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1234,
									"end": 1515,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1234,
									"end": 1515,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1234,
									"end": 1515,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1521,
									"end": 1650,
									"name": "tag",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 1521,
									"end": 1650,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1555,
									"end": 1561,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1582,
									"end": 1602,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "62"
								},
								{
									"begin": 1582,
									"end": 1602,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "9"
								},
								{
									"begin": 1582,
									"end": 1602,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1582,
									"end": 1602,
									"name": "tag",
									"source": 14,
									"value": "62"
								},
								{
									"begin": 1582,
									"end": 1602,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1572,
									"end": 1602,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1572,
									"end": 1602,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1611,
									"end": 1644,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "63"
								},
								{
									"begin": 1639,
									"end": 1643,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1631,
									"end": 1637,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1611,
									"end": 1644,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "19"
								},
								{
									"begin": 1611,
									"end": 1644,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1611,
									"end": 1644,
									"name": "tag",
									"source": 14,
									"value": "63"
								},
								{
									"begin": 1611,
									"end": 1644,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1521,
									"end": 1650,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1521,
									"end": 1650,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1521,
									"end": 1650,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1521,
									"end": 1650,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1656,
									"end": 1964,
									"name": "tag",
									"source": 14,
									"value": "21"
								},
								{
									"begin": 1656,
									"end": 1964,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1718,
									"end": 1722,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1808,
									"end": 1826,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1800,
									"end": 1806,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1797,
									"end": 1827,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 1794,
									"end": 1850,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 1794,
									"end": 1850,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "65"
								},
								{
									"begin": 1794,
									"end": 1850,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1830,
									"end": 1848,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "66"
								},
								{
									"begin": 1830,
									"end": 1848,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "18"
								},
								{
									"begin": 1830,
									"end": 1848,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1830,
									"end": 1848,
									"name": "tag",
									"source": 14,
									"value": "66"
								},
								{
									"begin": 1830,
									"end": 1848,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1794,
									"end": 1850,
									"name": "tag",
									"source": 14,
									"value": "65"
								},
								{
									"begin": 1794,
									"end": 1850,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1868,
									"end": 1897,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "67"
								},
								{
									"begin": 1890,
									"end": 1896,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1868,
									"end": 1897,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "17"
								},
								{
									"begin": 1868,
									"end": 1897,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1868,
									"end": 1897,
									"name": "tag",
									"source": 14,
									"value": "67"
								},
								{
									"begin": 1868,
									"end": 1897,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1860,
									"end": 1897,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1860,
									"end": 1897,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1952,
									"end": 1956,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 1946,
									"end": 1950,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1942,
									"end": 1957,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1934,
									"end": 1957,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1934,
									"end": 1957,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1656,
									"end": 1964,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1656,
									"end": 1964,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1656,
									"end": 1964,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1656,
									"end": 1964,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1970,
									"end": 2216,
									"name": "tag",
									"source": 14,
									"value": "22"
								},
								{
									"begin": 1970,
									"end": 2216,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2051,
									"end": 2052,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2061,
									"end": 2174,
									"name": "tag",
									"source": 14,
									"value": "69"
								},
								{
									"begin": 2061,
									"end": 2174,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2075,
									"end": 2081,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 2072,
									"end": 2073,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2069,
									"end": 2082,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 2061,
									"end": 2174,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 2061,
									"end": 2174,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "71"
								},
								{
									"begin": 2061,
									"end": 2174,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 2160,
									"end": 2161,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 2155,
									"end": 2158,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2151,
									"end": 2162,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2145,
									"end": 2163,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 2141,
									"end": 2142,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2136,
									"end": 2139,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 2132,
									"end": 2143,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2125,
									"end": 2164,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 2097,
									"end": 2099,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 2094,
									"end": 2095,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2090,
									"end": 2100,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2085,
									"end": 2100,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2085,
									"end": 2100,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2061,
									"end": 2174,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "69"
								},
								{
									"begin": 2061,
									"end": 2174,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2061,
									"end": 2174,
									"name": "tag",
									"source": 14,
									"value": "71"
								},
								{
									"begin": 2061,
									"end": 2174,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2208,
									"end": 2209,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2199,
									"end": 2205,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 2194,
									"end": 2197,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2183,
									"end": 2210,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 2032,
									"end": 2216,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1970,
									"end": 2216,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1970,
									"end": 2216,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1970,
									"end": 2216,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1970,
									"end": 2216,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2222,
									"end": 2656,
									"name": "tag",
									"source": 14,
									"value": "23"
								},
								{
									"begin": 2222,
									"end": 2656,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2311,
									"end": 2316,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2336,
									"end": 2402,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 2352,
									"end": 2401,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "74"
								},
								{
									"begin": 2394,
									"end": 2400,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 2352,
									"end": 2401,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "21"
								},
								{
									"begin": 2352,
									"end": 2401,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2352,
									"end": 2401,
									"name": "tag",
									"source": 14,
									"value": "74"
								},
								{
									"begin": 2352,
									"end": 2401,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2336,
									"end": 2402,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 2336,
									"end": 2402,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2336,
									"end": 2402,
									"name": "tag",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 2336,
									"end": 2402,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2327,
									"end": 2402,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2327,
									"end": 2402,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2425,
									"end": 2431,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2418,
									"end": 2423,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2411,
									"end": 2432,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 2463,
									"end": 2467,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 2456,
									"end": 2461,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2452,
									"end": 2468,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2501,
									"end": 2504,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 2492,
									"end": 2498,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 2487,
									"end": 2490,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 2483,
									"end": 2499,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2480,
									"end": 2505,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 2477,
									"end": 2589,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 2477,
									"end": 2589,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "75"
								},
								{
									"begin": 2477,
									"end": 2589,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 2508,
									"end": 2587,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "76"
								},
								{
									"begin": 2508,
									"end": 2587,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "16"
								},
								{
									"begin": 2508,
									"end": 2587,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2508,
									"end": 2587,
									"name": "tag",
									"source": 14,
									"value": "76"
								},
								{
									"begin": 2508,
									"end": 2587,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2477,
									"end": 2589,
									"name": "tag",
									"source": 14,
									"value": "75"
								},
								{
									"begin": 2477,
									"end": 2589,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2598,
									"end": 2650,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "77"
								},
								{
									"begin": 2643,
									"end": 2649,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 2638,
									"end": 2641,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2633,
									"end": 2636,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 2598,
									"end": 2650,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "22"
								},
								{
									"begin": 2598,
									"end": 2650,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2598,
									"end": 2650,
									"name": "tag",
									"source": 14,
									"value": "77"
								},
								{
									"begin": 2598,
									"end": 2650,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2317,
									"end": 2656,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2222,
									"end": 2656,
									"name": "SWAP4",
									"source": 14
								},
								{
									"begin": 2222,
									"end": 2656,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 2222,
									"end": 2656,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2222,
									"end": 2656,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2222,
									"end": 2656,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2222,
									"end": 2656,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2676,
									"end": 3031,
									"name": "tag",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 2676,
									"end": 3031,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2743,
									"end": 2748,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2792,
									"end": 2795,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2785,
									"end": 2789,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 2777,
									"end": 2783,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 2773,
									"end": 2790,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2769,
									"end": 2796,
									"name": "SLT",
									"source": 14
								},
								{
									"begin": 2759,
									"end": 2881,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "79"
								},
								{
									"begin": 2759,
									"end": 2881,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 2800,
									"end": 2879,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "80"
								},
								{
									"begin": 2800,
									"end": 2879,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "15"
								},
								{
									"begin": 2800,
									"end": 2879,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2800,
									"end": 2879,
									"name": "tag",
									"source": 14,
									"value": "80"
								},
								{
									"begin": 2800,
									"end": 2879,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2759,
									"end": 2881,
									"name": "tag",
									"source": 14,
									"value": "79"
								},
								{
									"begin": 2759,
									"end": 2881,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2910,
									"end": 2916,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2904,
									"end": 2917,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 2935,
									"end": 3025,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "81"
								},
								{
									"begin": 3021,
									"end": 3024,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 3013,
									"end": 3019,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 3006,
									"end": 3010,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 2998,
									"end": 3004,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 2994,
									"end": 3011,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2935,
									"end": 3025,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "23"
								},
								{
									"begin": 2935,
									"end": 3025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2935,
									"end": 3025,
									"name": "tag",
									"source": 14,
									"value": "81"
								},
								{
									"begin": 2935,
									"end": 3025,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2926,
									"end": 3025,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 2926,
									"end": 3025,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2749,
									"end": 3031,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2676,
									"end": 3031,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 2676,
									"end": 3031,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 2676,
									"end": 3031,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2676,
									"end": 3031,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2676,
									"end": 3031,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3037,
									"end": 3717,
									"name": "tag",
									"source": 14,
									"value": "3"
								},
								{
									"begin": 3037,
									"end": 3717,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3126,
									"end": 3132,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 3134,
									"end": 3140,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 3183,
									"end": 3185,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 3171,
									"end": 3180,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 3162,
									"end": 3169,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 3158,
									"end": 3181,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 3154,
									"end": 3186,
									"name": "SLT",
									"source": 14
								},
								{
									"begin": 3151,
									"end": 3270,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 3151,
									"end": 3270,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "83"
								},
								{
									"begin": 3151,
									"end": 3270,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 3189,
									"end": 3268,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "84"
								},
								{
									"begin": 3189,
									"end": 3268,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "10"
								},
								{
									"begin": 3189,
									"end": 3268,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3189,
									"end": 3268,
									"name": "tag",
									"source": 14,
									"value": "84"
								},
								{
									"begin": 3189,
									"end": 3268,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3151,
									"end": 3270,
									"name": "tag",
									"source": 14,
									"value": "83"
								},
								{
									"begin": 3151,
									"end": 3270,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3309,
									"end": 3310,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 3334,
									"end": 3398,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "85"
								},
								{
									"begin": 3390,
									"end": 3397,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 3381,
									"end": 3387,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 3370,
									"end": 3379,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 3366,
									"end": 3388,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 3334,
									"end": 3398,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "14"
								},
								{
									"begin": 3334,
									"end": 3398,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3334,
									"end": 3398,
									"name": "tag",
									"source": 14,
									"value": "85"
								},
								{
									"begin": 3334,
									"end": 3398,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3324,
									"end": 3398,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 3324,
									"end": 3398,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3280,
									"end": 3408,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3468,
									"end": 3470,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 3457,
									"end": 3466,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 3453,
									"end": 3471,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 3447,
									"end": 3472,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 3499,
									"end": 3517,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3491,
									"end": 3497,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3488,
									"end": 3518,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 3485,
									"end": 3602,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 3485,
									"end": 3602,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "86"
								},
								{
									"begin": 3485,
									"end": 3602,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 3521,
									"end": 3600,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "87"
								},
								{
									"begin": 3521,
									"end": 3600,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "11"
								},
								{
									"begin": 3521,
									"end": 3600,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3521,
									"end": 3600,
									"name": "tag",
									"source": 14,
									"value": "87"
								},
								{
									"begin": 3521,
									"end": 3600,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3485,
									"end": 3602,
									"name": "tag",
									"source": 14,
									"value": "86"
								},
								{
									"begin": 3485,
									"end": 3602,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3626,
									"end": 3700,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "88"
								},
								{
									"begin": 3692,
									"end": 3699,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 3683,
									"end": 3689,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 3672,
									"end": 3681,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 3668,
									"end": 3690,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 3626,
									"end": 3700,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 3626,
									"end": 3700,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3626,
									"end": 3700,
									"name": "tag",
									"source": 14,
									"value": "88"
								},
								{
									"begin": 3626,
									"end": 3700,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3616,
									"end": 3700,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 3616,
									"end": 3700,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3418,
									"end": 3710,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3037,
									"end": 3717,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 3037,
									"end": 3717,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3037,
									"end": 3717,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 3037,
									"end": 3717,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3037,
									"end": 3717,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3037,
									"end": 3717,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3723,
									"end": 3822,
									"name": "tag",
									"source": 14,
									"value": "25"
								},
								{
									"begin": 3723,
									"end": 3822,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3775,
									"end": 3781,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 3809,
									"end": 3814,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3803,
									"end": 3815,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 3793,
									"end": 3815,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3793,
									"end": 3815,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3723,
									"end": 3822,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 3723,
									"end": 3822,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3723,
									"end": 3822,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3723,
									"end": 3822,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3828,
									"end": 4008,
									"name": "tag",
									"source": 14,
									"value": "26"
								},
								{
									"begin": 3828,
									"end": 4008,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3876,
									"end": 3953,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3873,
									"end": 3874,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 3866,
									"end": 3954,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 3973,
									"end": 3977,
									"name": "PUSH",
									"source": 14,
									"value": "22"
								},
								{
									"begin": 3970,
									"end": 3971,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 3963,
									"end": 3978,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 3997,
									"end": 4001,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 3994,
									"end": 3995,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 3987,
									"end": 4002,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 4014,
									"end": 4334,
									"name": "tag",
									"source": 14,
									"value": "27"
								},
								{
									"begin": 4014,
									"end": 4334,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4058,
									"end": 4064,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 4095,
									"end": 4096,
									"name": "PUSH",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 4089,
									"end": 4093,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4085,
									"end": 4097,
									"name": "DIV",
									"source": 14
								},
								{
									"begin": 4075,
									"end": 4097,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4075,
									"end": 4097,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4142,
									"end": 4143,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 4136,
									"end": 4140,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4132,
									"end": 4144,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 4163,
									"end": 4181,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 4153,
									"end": 4234,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "92"
								},
								{
									"begin": 4153,
									"end": 4234,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 4219,
									"end": 4223,
									"name": "PUSH",
									"source": 14,
									"value": "7F"
								},
								{
									"begin": 4211,
									"end": 4217,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4207,
									"end": 4224,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 4197,
									"end": 4224,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 4197,
									"end": 4224,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4153,
									"end": 4234,
									"name": "tag",
									"source": 14,
									"value": "92"
								},
								{
									"begin": 4153,
									"end": 4234,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4281,
									"end": 4283,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 4273,
									"end": 4279,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4270,
									"end": 4284,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 4250,
									"end": 4268,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4247,
									"end": 4285,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 4244,
									"end": 4328,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "93"
								},
								{
									"begin": 4244,
									"end": 4328,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 4300,
									"end": 4318,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "94"
								},
								{
									"begin": 4300,
									"end": 4318,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "26"
								},
								{
									"begin": 4300,
									"end": 4318,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4300,
									"end": 4318,
									"name": "tag",
									"source": 14,
									"value": "94"
								},
								{
									"begin": 4300,
									"end": 4318,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4244,
									"end": 4328,
									"name": "tag",
									"source": 14,
									"value": "93"
								},
								{
									"begin": 4244,
									"end": 4328,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4065,
									"end": 4334,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4014,
									"end": 4334,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 4014,
									"end": 4334,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4014,
									"end": 4334,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4014,
									"end": 4334,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4340,
									"end": 4481,
									"name": "tag",
									"source": 14,
									"value": "28"
								},
								{
									"begin": 4340,
									"end": 4481,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4389,
									"end": 4393,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 4412,
									"end": 4415,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4404,
									"end": 4415,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4404,
									"end": 4415,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4435,
									"end": 4438,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4432,
									"end": 4433,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 4425,
									"end": 4439,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 4469,
									"end": 4473,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 4466,
									"end": 4467,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 4456,
									"end": 4474,
									"name": "KECCAK256",
									"source": 14
								},
								{
									"begin": 4448,
									"end": 4474,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4448,
									"end": 4474,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4340,
									"end": 4481,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 4340,
									"end": 4481,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4340,
									"end": 4481,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4340,
									"end": 4481,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4487,
									"end": 4580,
									"name": "tag",
									"source": 14,
									"value": "29"
								},
								{
									"begin": 4487,
									"end": 4580,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4524,
									"end": 4530,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 4571,
									"end": 4573,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 4566,
									"end": 4568,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 4559,
									"end": 4564,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 4555,
									"end": 4569,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 4551,
									"end": 4574,
									"name": "DIV",
									"source": 14
								},
								{
									"begin": 4541,
									"end": 4574,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4541,
									"end": 4574,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4487,
									"end": 4580,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 4487,
									"end": 4580,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4487,
									"end": 4580,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4487,
									"end": 4580,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4586,
									"end": 4693,
									"name": "tag",
									"source": 14,
									"value": "30"
								},
								{
									"begin": 4586,
									"end": 4693,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4630,
									"end": 4638,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 4680,
									"end": 4685,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4674,
									"end": 4678,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4670,
									"end": 4686,
									"name": "SHL",
									"source": 14
								},
								{
									"begin": 4649,
									"end": 4686,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4649,
									"end": 4686,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4586,
									"end": 4693,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 4586,
									"end": 4693,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 4586,
									"end": 4693,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4586,
									"end": 4693,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4586,
									"end": 4693,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4699,
									"end": 5092,
									"name": "tag",
									"source": 14,
									"value": "31"
								},
								{
									"begin": 4699,
									"end": 5092,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4768,
									"end": 4774,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 4818,
									"end": 4819,
									"name": "PUSH",
									"source": 14,
									"value": "8"
								},
								{
									"begin": 4806,
									"end": 4816,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 4802,
									"end": 4820,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 4841,
									"end": 4938,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "99"
								},
								{
									"begin": 4871,
									"end": 4937,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4860,
									"end": 4869,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4841,
									"end": 4938,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "30"
								},
								{
									"begin": 4841,
									"end": 4938,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4841,
									"end": 4938,
									"name": "tag",
									"source": 14,
									"value": "99"
								},
								{
									"begin": 4841,
									"end": 4938,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4959,
									"end": 4998,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "100"
								},
								{
									"begin": 4989,
									"end": 4997,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 4978,
									"end": 4987,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 4959,
									"end": 4998,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "30"
								},
								{
									"begin": 4959,
									"end": 4998,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4959,
									"end": 4998,
									"name": "tag",
									"source": 14,
									"value": "100"
								},
								{
									"begin": 4959,
									"end": 4998,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4947,
									"end": 4998,
									"name": "SWAP6",
									"source": 14
								},
								{
									"begin": 4947,
									"end": 4998,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5031,
									"end": 5035,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 5027,
									"end": 5036,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 5020,
									"end": 5025,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 5016,
									"end": 5037,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 5007,
									"end": 5037,
									"name": "SWAP4",
									"source": 14
								},
								{
									"begin": 5007,
									"end": 5037,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5080,
									"end": 5084,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 5070,
									"end": 5078,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 5066,
									"end": 5085,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 5059,
									"end": 5064,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 5056,
									"end": 5086,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 5046,
									"end": 5086,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 5046,
									"end": 5086,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4775,
									"end": 5092,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4775,
									"end": 5092,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4699,
									"end": 5092,
									"name": "SWAP4",
									"source": 14
								},
								{
									"begin": 4699,
									"end": 5092,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 4699,
									"end": 5092,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4699,
									"end": 5092,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4699,
									"end": 5092,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4699,
									"end": 5092,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5098,
									"end": 5158,
									"name": "tag",
									"source": 14,
									"value": "32"
								},
								{
									"begin": 5098,
									"end": 5158,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5126,
									"end": 5129,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 5147,
									"end": 5152,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 5140,
									"end": 5152,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 5140,
									"end": 5152,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5098,
									"end": 5158,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 5098,
									"end": 5158,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 5098,
									"end": 5158,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5098,
									"end": 5158,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5164,
									"end": 5306,
									"name": "tag",
									"source": 14,
									"value": "33"
								},
								{
									"begin": 5164,
									"end": 5306,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5214,
									"end": 5223,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 5247,
									"end": 5300,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "103"
								},
								{
									"begin": 5265,
									"end": 5299,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "104"
								},
								{
									"begin": 5274,
									"end": 5298,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "105"
								},
								{
									"begin": 5292,
									"end": 5297,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 5274,
									"end": 5298,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "12"
								},
								{
									"begin": 5274,
									"end": 5298,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5274,
									"end": 5298,
									"name": "tag",
									"source": 14,
									"value": "105"
								},
								{
									"begin": 5274,
									"end": 5298,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5265,
									"end": 5299,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "32"
								},
								{
									"begin": 5265,
									"end": 5299,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5265,
									"end": 5299,
									"name": "tag",
									"source": 14,
									"value": "104"
								},
								{
									"begin": 5265,
									"end": 5299,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5247,
									"end": 5300,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "12"
								},
								{
									"begin": 5247,
									"end": 5300,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5247,
									"end": 5300,
									"name": "tag",
									"source": 14,
									"value": "103"
								},
								{
									"begin": 5247,
									"end": 5300,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5234,
									"end": 5300,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 5234,
									"end": 5300,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5164,
									"end": 5306,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 5164,
									"end": 5306,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 5164,
									"end": 5306,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5164,
									"end": 5306,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5312,
									"end": 5387,
									"name": "tag",
									"source": 14,
									"value": "34"
								},
								{
									"begin": 5312,
									"end": 5387,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5355,
									"end": 5358,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 5376,
									"end": 5381,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 5369,
									"end": 5381,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 5369,
									"end": 5381,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5312,
									"end": 5387,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 5312,
									"end": 5387,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 5312,
									"end": 5387,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5312,
									"end": 5387,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5393,
									"end": 5662,
									"name": "tag",
									"source": 14,
									"value": "35"
								},
								{
									"begin": 5393,
									"end": 5662,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5503,
									"end": 5542,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "108"
								},
								{
									"begin": 5534,
									"end": 5541,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 5503,
									"end": 5542,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "33"
								},
								{
									"begin": 5503,
									"end": 5542,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5503,
									"end": 5542,
									"name": "tag",
									"source": 14,
									"value": "108"
								},
								{
									"begin": 5503,
									"end": 5542,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5564,
									"end": 5655,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "109"
								},
								{
									"begin": 5613,
									"end": 5654,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "110"
								},
								{
									"begin": 5637,
									"end": 5653,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 5613,
									"end": 5654,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "34"
								},
								{
									"begin": 5613,
									"end": 5654,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5613,
									"end": 5654,
									"name": "tag",
									"source": 14,
									"value": "110"
								},
								{
									"begin": 5613,
									"end": 5654,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5605,
									"end": 5611,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 5598,
									"end": 5602,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 5592,
									"end": 5603,
									"name": "SLOAD",
									"source": 14
								},
								{
									"begin": 5564,
									"end": 5655,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "31"
								},
								{
									"begin": 5564,
									"end": 5655,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5564,
									"end": 5655,
									"name": "tag",
									"source": 14,
									"value": "109"
								},
								{
									"begin": 5564,
									"end": 5655,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5558,
									"end": 5562,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 5551,
									"end": 5656,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 5469,
									"end": 5662,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5393,
									"end": 5662,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5393,
									"end": 5662,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5393,
									"end": 5662,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5393,
									"end": 5662,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5668,
									"end": 5741,
									"name": "tag",
									"source": 14,
									"value": "36"
								},
								{
									"begin": 5668,
									"end": 5741,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5713,
									"end": 5716,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 5668,
									"end": 5741,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 5668,
									"end": 5741,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5747,
									"end": 5936,
									"name": "tag",
									"source": 14,
									"value": "37"
								},
								{
									"begin": 5747,
									"end": 5936,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5824,
									"end": 5856,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "113"
								},
								{
									"begin": 5824,
									"end": 5856,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "36"
								},
								{
									"begin": 5824,
									"end": 5856,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5824,
									"end": 5856,
									"name": "tag",
									"source": 14,
									"value": "113"
								},
								{
									"begin": 5824,
									"end": 5856,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5865,
									"end": 5930,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "114"
								},
								{
									"begin": 5923,
									"end": 5929,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 5915,
									"end": 5921,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 5909,
									"end": 5913,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 5865,
									"end": 5930,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "35"
								},
								{
									"begin": 5865,
									"end": 5930,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5865,
									"end": 5930,
									"name": "tag",
									"source": 14,
									"value": "114"
								},
								{
									"begin": 5865,
									"end": 5930,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5800,
									"end": 5936,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5747,
									"end": 5936,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5747,
									"end": 5936,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5747,
									"end": 5936,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5942,
									"end": 6128,
									"name": "tag",
									"source": 14,
									"value": "38"
								},
								{
									"begin": 5942,
									"end": 6128,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6002,
									"end": 6122,
									"name": "tag",
									"source": 14,
									"value": "116"
								},
								{
									"begin": 6002,
									"end": 6122,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6019,
									"end": 6022,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 6012,
									"end": 6017,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 6009,
									"end": 6023,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 6002,
									"end": 6122,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 6002,
									"end": 6122,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "118"
								},
								{
									"begin": 6002,
									"end": 6122,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 6073,
									"end": 6112,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "119"
								},
								{
									"begin": 6110,
									"end": 6111,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 6103,
									"end": 6108,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 6073,
									"end": 6112,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "37"
								},
								{
									"begin": 6073,
									"end": 6112,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6073,
									"end": 6112,
									"name": "tag",
									"source": 14,
									"value": "119"
								},
								{
									"begin": 6073,
									"end": 6112,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6046,
									"end": 6047,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 6039,
									"end": 6044,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 6035,
									"end": 6048,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 6026,
									"end": 6048,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 6026,
									"end": 6048,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6002,
									"end": 6122,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "116"
								},
								{
									"begin": 6002,
									"end": 6122,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6002,
									"end": 6122,
									"name": "tag",
									"source": 14,
									"value": "118"
								},
								{
									"begin": 6002,
									"end": 6122,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5942,
									"end": 6128,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5942,
									"end": 6128,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5942,
									"end": 6128,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6134,
									"end": 6677,
									"name": "tag",
									"source": 14,
									"value": "39"
								},
								{
									"begin": 6134,
									"end": 6677,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6235,
									"end": 6237,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 6230,
									"end": 6233,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 6227,
									"end": 6238,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 6224,
									"end": 6670,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 6224,
									"end": 6670,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "121"
								},
								{
									"begin": 6224,
									"end": 6670,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 6269,
									"end": 6307,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "122"
								},
								{
									"begin": 6301,
									"end": 6306,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 6269,
									"end": 6307,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "28"
								},
								{
									"begin": 6269,
									"end": 6307,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6269,
									"end": 6307,
									"name": "tag",
									"source": 14,
									"value": "122"
								},
								{
									"begin": 6269,
									"end": 6307,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6353,
									"end": 6382,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "123"
								},
								{
									"begin": 6371,
									"end": 6381,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 6353,
									"end": 6382,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "29"
								},
								{
									"begin": 6353,
									"end": 6382,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6353,
									"end": 6382,
									"name": "tag",
									"source": 14,
									"value": "123"
								},
								{
									"begin": 6353,
									"end": 6382,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6343,
									"end": 6351,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 6339,
									"end": 6383,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 6536,
									"end": 6538,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 6524,
									"end": 6534,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 6521,
									"end": 6539,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 6518,
									"end": 6567,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 6518,
									"end": 6567,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "124"
								},
								{
									"begin": 6518,
									"end": 6567,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 6557,
									"end": 6565,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 6542,
									"end": 6565,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 6542,
									"end": 6565,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6518,
									"end": 6567,
									"name": "tag",
									"source": 14,
									"value": "124"
								},
								{
									"begin": 6518,
									"end": 6567,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6580,
									"end": 6660,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "125"
								},
								{
									"begin": 6636,
									"end": 6658,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "126"
								},
								{
									"begin": 6654,
									"end": 6657,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 6636,
									"end": 6658,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "29"
								},
								{
									"begin": 6636,
									"end": 6658,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6636,
									"end": 6658,
									"name": "tag",
									"source": 14,
									"value": "126"
								},
								{
									"begin": 6636,
									"end": 6658,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6626,
									"end": 6634,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 6622,
									"end": 6659,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 6609,
									"end": 6620,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 6580,
									"end": 6660,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "38"
								},
								{
									"begin": 6580,
									"end": 6660,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6580,
									"end": 6660,
									"name": "tag",
									"source": 14,
									"value": "125"
								},
								{
									"begin": 6580,
									"end": 6660,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6239,
									"end": 6670,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6239,
									"end": 6670,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6224,
									"end": 6670,
									"name": "tag",
									"source": 14,
									"value": "121"
								},
								{
									"begin": 6224,
									"end": 6670,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6134,
									"end": 6677,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6134,
									"end": 6677,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6134,
									"end": 6677,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6134,
									"end": 6677,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6683,
									"end": 6800,
									"name": "tag",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 6683,
									"end": 6800,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6737,
									"end": 6745,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 6787,
									"end": 6792,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 6781,
									"end": 6785,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 6777,
									"end": 6793,
									"name": "SHR",
									"source": 14
								},
								{
									"begin": 6756,
									"end": 6793,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 6756,
									"end": 6793,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6683,
									"end": 6800,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 6683,
									"end": 6800,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 6683,
									"end": 6800,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6683,
									"end": 6800,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6683,
									"end": 6800,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6806,
									"end": 6975,
									"name": "tag",
									"source": 14,
									"value": "41"
								},
								{
									"begin": 6806,
									"end": 6975,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6850,
									"end": 6856,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 6883,
									"end": 6934,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "129"
								},
								{
									"begin": 6931,
									"end": 6932,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 6927,
									"end": 6933,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 6919,
									"end": 6924,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 6916,
									"end": 6917,
									"name": "PUSH",
									"source": 14,
									"value": "8"
								},
								{
									"begin": 6912,
									"end": 6925,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 6883,
									"end": 6934,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 6883,
									"end": 6934,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6883,
									"end": 6934,
									"name": "tag",
									"source": 14,
									"value": "129"
								},
								{
									"begin": 6883,
									"end": 6934,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6879,
									"end": 6935,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 6964,
									"end": 6968,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 6958,
									"end": 6962,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 6954,
									"end": 6969,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 6944,
									"end": 6969,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 6944,
									"end": 6969,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6857,
									"end": 6975,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6806,
									"end": 6975,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 6806,
									"end": 6975,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 6806,
									"end": 6975,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6806,
									"end": 6975,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6806,
									"end": 6975,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6980,
									"end": 7275,
									"name": "tag",
									"source": 14,
									"value": "42"
								},
								{
									"begin": 6980,
									"end": 7275,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7056,
									"end": 7060,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 7202,
									"end": 7231,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "131"
								},
								{
									"begin": 7227,
									"end": 7230,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 7221,
									"end": 7225,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 7202,
									"end": 7231,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "41"
								},
								{
									"begin": 7202,
									"end": 7231,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 7202,
									"end": 7231,
									"name": "tag",
									"source": 14,
									"value": "131"
								},
								{
									"begin": 7202,
									"end": 7231,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7194,
									"end": 7231,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 7194,
									"end": 7231,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7264,
									"end": 7267,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 7261,
									"end": 7262,
									"name": "PUSH",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 7257,
									"end": 7268,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 7251,
									"end": 7255,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 7248,
									"end": 7269,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 7240,
									"end": 7269,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 7240,
									"end": 7269,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6980,
									"end": 7275,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 6980,
									"end": 7275,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 6980,
									"end": 7275,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6980,
									"end": 7275,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6980,
									"end": 7275,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 7280,
									"end": 8675,
									"name": "tag",
									"source": 14,
									"value": "7"
								},
								{
									"begin": 7280,
									"end": 8675,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7397,
									"end": 7434,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "133"
								},
								{
									"begin": 7430,
									"end": 7433,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 7397,
									"end": 7434,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "25"
								},
								{
									"begin": 7397,
									"end": 7434,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 7397,
									"end": 7434,
									"name": "tag",
									"source": 14,
									"value": "133"
								},
								{
									"begin": 7397,
									"end": 7434,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7499,
									"end": 7517,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7491,
									"end": 7497,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 7488,
									"end": 7518,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 7485,
									"end": 7541,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 7485,
									"end": 7541,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "134"
								},
								{
									"begin": 7485,
									"end": 7541,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 7521,
									"end": 7539,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "135"
								},
								{
									"begin": 7521,
									"end": 7539,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "18"
								},
								{
									"begin": 7521,
									"end": 7539,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 7521,
									"end": 7539,
									"name": "tag",
									"source": 14,
									"value": "135"
								},
								{
									"begin": 7521,
									"end": 7539,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7485,
									"end": 7541,
									"name": "tag",
									"source": 14,
									"value": "134"
								},
								{
									"begin": 7485,
									"end": 7541,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7565,
									"end": 7603,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "136"
								},
								{
									"begin": 7597,
									"end": 7601,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 7591,
									"end": 7602,
									"name": "SLOAD",
									"source": 14
								},
								{
									"begin": 7565,
									"end": 7603,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "27"
								},
								{
									"begin": 7565,
									"end": 7603,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 7565,
									"end": 7603,
									"name": "tag",
									"source": 14,
									"value": "136"
								},
								{
									"begin": 7565,
									"end": 7603,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7650,
									"end": 7717,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "137"
								},
								{
									"begin": 7710,
									"end": 7716,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 7702,
									"end": 7708,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 7696,
									"end": 7700,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 7650,
									"end": 7717,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "39"
								},
								{
									"begin": 7650,
									"end": 7717,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 7650,
									"end": 7717,
									"name": "tag",
									"source": 14,
									"value": "137"
								},
								{
									"begin": 7650,
									"end": 7717,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7744,
									"end": 7745,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 7768,
									"end": 7772,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 7755,
									"end": 7772,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 7755,
									"end": 7772,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7800,
									"end": 7802,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 7792,
									"end": 7798,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 7789,
									"end": 7803,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 7817,
									"end": 7818,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 7812,
									"end": 8430,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 7812,
									"end": 8430,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 7812,
									"end": 8430,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "139"
								},
								{
									"begin": 7812,
									"end": 8430,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 8474,
									"end": 8475,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 8491,
									"end": 8497,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 8488,
									"end": 8565,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 8488,
									"end": 8565,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "140"
								},
								{
									"begin": 8488,
									"end": 8565,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 8540,
									"end": 8549,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 8535,
									"end": 8538,
									"name": "DUP8",
									"source": 14
								},
								{
									"begin": 8531,
									"end": 8550,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 8525,
									"end": 8551,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 8516,
									"end": 8551,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 8516,
									"end": 8551,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 8488,
									"end": 8565,
									"name": "tag",
									"source": 14,
									"value": "140"
								},
								{
									"begin": 8488,
									"end": 8565,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 8591,
									"end": 8658,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "141"
								},
								{
									"begin": 8651,
									"end": 8657,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 8644,
									"end": 8649,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 8591,
									"end": 8658,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "42"
								},
								{
									"begin": 8591,
									"end": 8658,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 8591,
									"end": 8658,
									"name": "tag",
									"source": 14,
									"value": "141"
								},
								{
									"begin": 8591,
									"end": 8658,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 8585,
									"end": 8589,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 8578,
									"end": 8659,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 8447,
									"end": 8669,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7782,
									"end": 8669,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "138"
								},
								{
									"begin": 7782,
									"end": 8669,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 7812,
									"end": 8430,
									"name": "tag",
									"source": 14,
									"value": "139"
								},
								{
									"begin": 7812,
									"end": 8430,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7864,
									"end": 7868,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 7860,
									"end": 7869,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 7852,
									"end": 7858,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 7848,
									"end": 7870,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 7898,
									"end": 7935,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "142"
								},
								{
									"begin": 7930,
									"end": 7934,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 7898,
									"end": 7935,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "28"
								},
								{
									"begin": 7898,
									"end": 7935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 7898,
									"end": 7935,
									"name": "tag",
									"source": 14,
									"value": "142"
								},
								{
									"begin": 7898,
									"end": 7935,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7957,
									"end": 7958,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 7971,
									"end": 8179,
									"name": "tag",
									"source": 14,
									"value": "143"
								},
								{
									"begin": 7971,
									"end": 8179,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7985,
									"end": 7992,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 7982,
									"end": 7983,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 7979,
									"end": 7993,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 7971,
									"end": 8179,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 7971,
									"end": 8179,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "145"
								},
								{
									"begin": 7971,
									"end": 8179,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 8064,
									"end": 8073,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 8059,
									"end": 8062,
									"name": "DUP10",
									"source": 14
								},
								{
									"begin": 8055,
									"end": 8074,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 8049,
									"end": 8075,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 8041,
									"end": 8047,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 8034,
									"end": 8076,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 8115,
									"end": 8116,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 8107,
									"end": 8113,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 8103,
									"end": 8117,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 8093,
									"end": 8117,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 8093,
									"end": 8117,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 8162,
									"end": 8164,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 8151,
									"end": 8160,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 8147,
									"end": 8165,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 8134,
									"end": 8165,
									"name": "SWAP5",
									"source": 14
								},
								{
									"begin": 8134,
									"end": 8165,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 8008,
									"end": 8012,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 8005,
									"end": 8006,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 8001,
									"end": 8013,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 7996,
									"end": 8013,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 7996,
									"end": 8013,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7971,
									"end": 8179,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "143"
								},
								{
									"begin": 7971,
									"end": 8179,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 7971,
									"end": 8179,
									"name": "tag",
									"source": 14,
									"value": "145"
								},
								{
									"begin": 7971,
									"end": 8179,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 8207,
									"end": 8213,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 8198,
									"end": 8205,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 8195,
									"end": 8214,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 8192,
									"end": 8371,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 8192,
									"end": 8371,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "146"
								},
								{
									"begin": 8192,
									"end": 8371,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 8265,
									"end": 8274,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 8260,
									"end": 8263,
									"name": "DUP10",
									"source": 14
								},
								{
									"begin": 8256,
									"end": 8275,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 8250,
									"end": 8276,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 8308,
									"end": 8356,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "147"
								},
								{
									"begin": 8350,
									"end": 8354,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 8342,
									"end": 8348,
									"name": "DUP10",
									"source": 14
								},
								{
									"begin": 8338,
									"end": 8355,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 8327,
									"end": 8336,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 8308,
									"end": 8356,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "41"
								},
								{
									"begin": 8308,
									"end": 8356,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 8308,
									"end": 8356,
									"name": "tag",
									"source": 14,
									"value": "147"
								},
								{
									"begin": 8308,
									"end": 8356,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 8300,
									"end": 8306,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 8293,
									"end": 8357,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 8215,
									"end": 8371,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 8192,
									"end": 8371,
									"name": "tag",
									"source": 14,
									"value": "146"
								},
								{
									"begin": 8192,
									"end": 8371,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 8417,
									"end": 8418,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 8413,
									"end": 8414,
									"name": "PUSH",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 8405,
									"end": 8411,
									"name": "DUP9",
									"source": 14
								},
								{
									"begin": 8401,
									"end": 8415,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 8397,
									"end": 8419,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 8391,
									"end": 8395,
									"name": "DUP9",
									"source": 14
								},
								{
									"begin": 8384,
									"end": 8420,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 7819,
									"end": 8430,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7819,
									"end": 8430,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7819,
									"end": 8430,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7782,
									"end": 8669,
									"name": "tag",
									"source": 14,
									"value": "138"
								},
								{
									"begin": 7782,
									"end": 8669,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7782,
									"end": 8669,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7372,
									"end": 8675,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7372,
									"end": 8675,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7372,
									"end": 8675,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7280,
									"end": 8675,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7280,
									"end": 8675,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7280,
									"end": 8675,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 61,
									"end": 264,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 61,
									"end": 264,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 61,
									"end": 264,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 264,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 61,
									"end": 264,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 264,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 264,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 61,
									"end": 264,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 264,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206628c35243f79f05405b8d532cb3e25f74e499793fc95cb00b90ade4fb29895c64736f6c63430008140033",
									".code": [
										{
											"begin": 61,
											"end": 264,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 61,
											"end": 264,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 264,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 264,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 264,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 264,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"Picture.sol",
								"PictureToken.sol",
								"openzeppelin-contracts/contracts/access/Ownable.sol",
								"openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
								"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
								"openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
								"openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
								"openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"openzeppelin-contracts/contracts/utils/Context.sol",
								"openzeppelin-contracts/contracts/utils/Strings.sol",
								"openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
								"openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
								"openzeppelin-contracts/contracts/utils/math/Math.sol",
								"openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_order\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_image\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Picture.sol\":\"Picture\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Picture.sol\":{\"keccak256\":\"0xdd2a48316a223d752facbae03ac785fc4f6ed10ed2c07e86c4e2ddf5af54fb5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4b6033bd41caa124913572c56ce256d0591bcd6e5b815f372ca1a7f247d7a654\",\"dweb:/ipfs/Qmf4DB3HJGpBAG243MKJDSkKxfGMbXNnhGTm27wqonZp2y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "Picture.sol:Picture",
								"label": "order",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 5,
								"contract": "Picture.sol:Picture",
								"label": "image",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"PictureToken.sol": {
				"PictureToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								},
								{
									"internalType": "contract Picture",
									"name": "_props",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getSinglePictureToken",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "ownerAddress",
											"type": "address"
										},
										{
											"internalType": "contract Picture",
											"name": "props",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "bool",
											"name": "onSale",
											"type": "bool"
										}
									],
									"internalType": "struct tokenData",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "notPutOnSale",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "price",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "purchase",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "putOnSale",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								}
							],
							"name": "setPrice",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"PictureToken.sol\":223:1333  contract PictureToken is ERC721, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"PictureToken.sol\":340:534  constructor(address initialOwner, Picture _props)... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"PictureToken.sol\":437:449  initialOwner */\n  dup2\n    /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1419:1535  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0c\n  dup2\n  mstore\n  0x20\n  add\n  0x50696374757265546f6b656e0000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x02\n  dup2\n  mstore\n  0x20\n  add\n  0x5054000000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1494:1499  name_ */\n  dup2\n    /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1486:1491  _name */\n  0x00\n    /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1486:1499  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1520:1527  symbol_ */\n  dup1\n    /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1510:1517  _symbol */\n  0x01\n    /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1510:1527  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1419:1535  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":1335:1336  0 */\n  0x00\n    /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":1311:1337  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":1311:1323  initialOwner */\n  dup2\n    /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":1311:1337  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":1307:1404  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":1389:1390  0 */\n  0x00\n    /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":1361:1392  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":1307:1404  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":1414:1446  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":1433:1445  initialOwner */\n  dup2\n    /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":1414:1432  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":1414:1446  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":1262:1454  constructor(address initialOwner) {... */\n  pop\n    /* \"PictureToken.sol\":475:481  _props */\n  dup1\n    /* \"PictureToken.sol\":467:472  props */\n  0x07\n  0x00\n    /* \"PictureToken.sol\":467:481  props = _props */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"PictureToken.sol\":500:501  0 */\n  0x00\n    /* \"PictureToken.sol\":492:497  price */\n  0x08\n    /* \"PictureToken.sol\":492:501  price = 0 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"PictureToken.sol\":521:526  false */\n  0x00\n    /* \"PictureToken.sol\":512:518  onSale */\n  0x09\n  0x00\n    /* \"PictureToken.sol\":512:526  onSale = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"PictureToken.sol\":340:534  constructor(address initialOwner, Picture _props)... */\n  pop\n  pop\n    /* \"PictureToken.sol\":223:1333  contract PictureToken is ERC721, Ownable {... */\n  jump(tag_18)\n    /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":3006:3197  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":3080:3096  address oldOwner */\n  0x00\n    /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":3099:3105  _owner */\n  0x06\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":3080:3105  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":3125:3133  newOwner */\n  dup2\n    /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":3116:3122  _owner */\n  0x06\n  0x00\n    /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":3116:3133  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":3180:3188  newOwner */\n  dup2\n    /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":3149:3189  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":3170:3178  oldOwner */\n  dup2\n    /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":3149:3189  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":3069:3197  {... */\n  pop\n    /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":3006:3197  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_21:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_23:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_24:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_57\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_23\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_25:\n    /* \"#utility.yul\":641:665   */\n  tag_59\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_24\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_60\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_60:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_26:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_62\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_25\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:955   */\ntag_27:\n    /* \"#utility.yul\":896:903   */\n  0x00\n    /* \"#utility.yul\":925:949   */\n  tag_64\n    /* \"#utility.yul\":943:948   */\n  dup3\n    /* \"#utility.yul\":925:949   */\n  tag_24\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":914:949   */\n  swap1\n  pop\n    /* \"#utility.yul\":845:955   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":961:1111   */\ntag_28:\n    /* \"#utility.yul\":1048:1086   */\n  tag_66\n    /* \"#utility.yul\":1080:1085   */\n  dup2\n    /* \"#utility.yul\":1048:1086   */\n  tag_27\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":1041:1046   */\n  dup2\n    /* \"#utility.yul\":1038:1087   */\n  eq\n    /* \"#utility.yul\":1028:1105   */\n  tag_67\n  jumpi\n    /* \"#utility.yul\":1101:1102   */\n  0x00\n    /* \"#utility.yul\":1098:1099   */\n  dup1\n    /* \"#utility.yul\":1091:1103   */\n  revert\n    /* \"#utility.yul\":1028:1105   */\ntag_67:\n    /* \"#utility.yul\":961:1111   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1117:1288   */\ntag_29:\n    /* \"#utility.yul\":1188:1193   */\n  0x00\n    /* \"#utility.yul\":1219:1225   */\n  dup2\n    /* \"#utility.yul\":1213:1226   */\n  mload\n    /* \"#utility.yul\":1204:1226   */\n  swap1\n  pop\n    /* \"#utility.yul\":1235:1282   */\n  tag_69\n    /* \"#utility.yul\":1276:1281   */\n  dup2\n    /* \"#utility.yul\":1235:1282   */\n  tag_28\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":1117:1288   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1294:1829   */\ntag_3:\n    /* \"#utility.yul\":1387:1393   */\n  0x00\n    /* \"#utility.yul\":1395:1401   */\n  dup1\n    /* \"#utility.yul\":1444:1446   */\n  0x40\n    /* \"#utility.yul\":1432:1441   */\n  dup4\n    /* \"#utility.yul\":1423:1430   */\n  dup6\n    /* \"#utility.yul\":1419:1442   */\n  sub\n    /* \"#utility.yul\":1415:1447   */\n  slt\n    /* \"#utility.yul\":1412:1531   */\n  iszero\n  tag_71\n  jumpi\n    /* \"#utility.yul\":1450:1529   */\n  tag_72\n  tag_21\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":1412:1531   */\ntag_71:\n    /* \"#utility.yul\":1570:1571   */\n  0x00\n    /* \"#utility.yul\":1595:1659   */\n  tag_73\n    /* \"#utility.yul\":1651:1658   */\n  dup6\n    /* \"#utility.yul\":1642:1648   */\n  dup3\n    /* \"#utility.yul\":1631:1640   */\n  dup7\n    /* \"#utility.yul\":1627:1649   */\n  add\n    /* \"#utility.yul\":1595:1659   */\n  tag_26\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":1585:1659   */\n  swap3\n  pop\n    /* \"#utility.yul\":1541:1669   */\n  pop\n    /* \"#utility.yul\":1708:1710   */\n  0x20\n    /* \"#utility.yul\":1734:1812   */\n  tag_74\n    /* \"#utility.yul\":1804:1811   */\n  dup6\n    /* \"#utility.yul\":1795:1801   */\n  dup3\n    /* \"#utility.yul\":1784:1793   */\n  dup7\n    /* \"#utility.yul\":1780:1802   */\n  add\n    /* \"#utility.yul\":1734:1812   */\n  tag_29\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":1724:1812   */\n  swap2\n  pop\n    /* \"#utility.yul\":1679:1822   */\n  pop\n    /* \"#utility.yul\":1294:1829   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1835:1934   */\ntag_30:\n    /* \"#utility.yul\":1887:1893   */\n  0x00\n    /* \"#utility.yul\":1921:1926   */\n  dup2\n    /* \"#utility.yul\":1915:1927   */\n  mload\n    /* \"#utility.yul\":1905:1927   */\n  swap1\n  pop\n    /* \"#utility.yul\":1835:1934   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1940:2120   */\ntag_31:\n    /* \"#utility.yul\":1988:2065   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1985:1986   */\n  0x00\n    /* \"#utility.yul\":1978:2066   */\n  mstore\n    /* \"#utility.yul\":2085:2089   */\n  0x41\n    /* \"#utility.yul\":2082:2083   */\n  0x04\n    /* \"#utility.yul\":2075:2090   */\n  mstore\n    /* \"#utility.yul\":2109:2113   */\n  0x24\n    /* \"#utility.yul\":2106:2107   */\n  0x00\n    /* \"#utility.yul\":2099:2114   */\n  revert\n    /* \"#utility.yul\":2126:2306   */\ntag_32:\n    /* \"#utility.yul\":2174:2251   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":2171:2172   */\n  0x00\n    /* \"#utility.yul\":2164:2252   */\n  mstore\n    /* \"#utility.yul\":2271:2275   */\n  0x22\n    /* \"#utility.yul\":2268:2269   */\n  0x04\n    /* \"#utility.yul\":2261:2276   */\n  mstore\n    /* \"#utility.yul\":2295:2299   */\n  0x24\n    /* \"#utility.yul\":2292:2293   */\n  0x00\n    /* \"#utility.yul\":2285:2300   */\n  revert\n    /* \"#utility.yul\":2312:2632   */\ntag_33:\n    /* \"#utility.yul\":2356:2362   */\n  0x00\n    /* \"#utility.yul\":2393:2394   */\n  0x02\n    /* \"#utility.yul\":2387:2391   */\n  dup3\n    /* \"#utility.yul\":2383:2395   */\n  div\n    /* \"#utility.yul\":2373:2395   */\n  swap1\n  pop\n    /* \"#utility.yul\":2440:2441   */\n  0x01\n    /* \"#utility.yul\":2434:2438   */\n  dup3\n    /* \"#utility.yul\":2430:2442   */\n  and\n    /* \"#utility.yul\":2461:2479   */\n  dup1\n    /* \"#utility.yul\":2451:2532   */\n  tag_79\n  jumpi\n    /* \"#utility.yul\":2517:2521   */\n  0x7f\n    /* \"#utility.yul\":2509:2515   */\n  dup3\n    /* \"#utility.yul\":2505:2522   */\n  and\n    /* \"#utility.yul\":2495:2522   */\n  swap2\n  pop\n    /* \"#utility.yul\":2451:2532   */\ntag_79:\n    /* \"#utility.yul\":2579:2581   */\n  0x20\n    /* \"#utility.yul\":2571:2577   */\n  dup3\n    /* \"#utility.yul\":2568:2582   */\n  lt\n    /* \"#utility.yul\":2548:2566   */\n  dup2\n    /* \"#utility.yul\":2545:2583   */\n  sub\n    /* \"#utility.yul\":2542:2626   */\n  tag_80\n  jumpi\n    /* \"#utility.yul\":2598:2616   */\n  tag_81\n  tag_32\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":2542:2626   */\ntag_80:\n    /* \"#utility.yul\":2363:2632   */\n  pop\n    /* \"#utility.yul\":2312:2632   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2638:2779   */\ntag_34:\n    /* \"#utility.yul\":2687:2691   */\n  0x00\n    /* \"#utility.yul\":2710:2713   */\n  dup2\n    /* \"#utility.yul\":2702:2713   */\n  swap1\n  pop\n    /* \"#utility.yul\":2733:2736   */\n  dup2\n    /* \"#utility.yul\":2730:2731   */\n  0x00\n    /* \"#utility.yul\":2723:2737   */\n  mstore\n    /* \"#utility.yul\":2767:2771   */\n  0x20\n    /* \"#utility.yul\":2764:2765   */\n  0x00\n    /* \"#utility.yul\":2754:2772   */\n  keccak256\n    /* \"#utility.yul\":2746:2772   */\n  swap1\n  pop\n    /* \"#utility.yul\":2638:2779   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2785:2878   */\ntag_35:\n    /* \"#utility.yul\":2822:2828   */\n  0x00\n    /* \"#utility.yul\":2869:2871   */\n  0x20\n    /* \"#utility.yul\":2864:2866   */\n  0x1f\n    /* \"#utility.yul\":2857:2862   */\n  dup4\n    /* \"#utility.yul\":2853:2867   */\n  add\n    /* \"#utility.yul\":2849:2872   */\n  div\n    /* \"#utility.yul\":2839:2872   */\n  swap1\n  pop\n    /* \"#utility.yul\":2785:2878   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2884:2991   */\ntag_36:\n    /* \"#utility.yul\":2928:2936   */\n  0x00\n    /* \"#utility.yul\":2978:2983   */\n  dup3\n    /* \"#utility.yul\":2972:2976   */\n  dup3\n    /* \"#utility.yul\":2968:2984   */\n  shl\n    /* \"#utility.yul\":2947:2984   */\n  swap1\n  pop\n    /* \"#utility.yul\":2884:2991   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2997:3390   */\ntag_37:\n    /* \"#utility.yul\":3066:3072   */\n  0x00\n    /* \"#utility.yul\":3116:3117   */\n  0x08\n    /* \"#utility.yul\":3104:3114   */\n  dup4\n    /* \"#utility.yul\":3100:3118   */\n  mul\n    /* \"#utility.yul\":3139:3236   */\n  tag_86\n    /* \"#utility.yul\":3169:3235   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":3158:3167   */\n  dup3\n    /* \"#utility.yul\":3139:3236   */\n  tag_36\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":3257:3296   */\n  tag_87\n    /* \"#utility.yul\":3287:3295   */\n  dup7\n    /* \"#utility.yul\":3276:3285   */\n  dup4\n    /* \"#utility.yul\":3257:3296   */\n  tag_36\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":3245:3296   */\n  swap6\n  pop\n    /* \"#utility.yul\":3329:3333   */\n  dup1\n    /* \"#utility.yul\":3325:3334   */\n  not\n    /* \"#utility.yul\":3318:3323   */\n  dup5\n    /* \"#utility.yul\":3314:3335   */\n  and\n    /* \"#utility.yul\":3305:3335   */\n  swap4\n  pop\n    /* \"#utility.yul\":3378:3382   */\n  dup1\n    /* \"#utility.yul\":3368:3376   */\n  dup7\n    /* \"#utility.yul\":3364:3383   */\n  and\n    /* \"#utility.yul\":3357:3362   */\n  dup5\n    /* \"#utility.yul\":3354:3384   */\n  or\n    /* \"#utility.yul\":3344:3384   */\n  swap3\n  pop\n    /* \"#utility.yul\":3073:3390   */\n  pop\n  pop\n    /* \"#utility.yul\":2997:3390   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3396:3473   */\ntag_38:\n    /* \"#utility.yul\":3433:3440   */\n  0x00\n    /* \"#utility.yul\":3462:3467   */\n  dup2\n    /* \"#utility.yul\":3451:3467   */\n  swap1\n  pop\n    /* \"#utility.yul\":3396:3473   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3479:3539   */\ntag_39:\n    /* \"#utility.yul\":3507:3510   */\n  0x00\n    /* \"#utility.yul\":3528:3533   */\n  dup2\n    /* \"#utility.yul\":3521:3533   */\n  swap1\n  pop\n    /* \"#utility.yul\":3479:3539   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3545:3687   */\ntag_40:\n    /* \"#utility.yul\":3595:3604   */\n  0x00\n    /* \"#utility.yul\":3628:3681   */\n  tag_91\n    /* \"#utility.yul\":3646:3680   */\n  tag_92\n    /* \"#utility.yul\":3655:3679   */\n  tag_93\n    /* \"#utility.yul\":3673:3678   */\n  dup5\n    /* \"#utility.yul\":3655:3679   */\n  tag_38\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":3646:3680   */\n  tag_39\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":3628:3681   */\n  tag_38\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":3615:3681   */\n  swap1\n  pop\n    /* \"#utility.yul\":3545:3687   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3693:3768   */\ntag_41:\n    /* \"#utility.yul\":3736:3739   */\n  0x00\n    /* \"#utility.yul\":3757:3762   */\n  dup2\n    /* \"#utility.yul\":3750:3762   */\n  swap1\n  pop\n    /* \"#utility.yul\":3693:3768   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3774:4043   */\ntag_42:\n    /* \"#utility.yul\":3884:3923   */\n  tag_96\n    /* \"#utility.yul\":3915:3922   */\n  dup4\n    /* \"#utility.yul\":3884:3923   */\n  tag_40\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":3945:4036   */\n  tag_97\n    /* \"#utility.yul\":3994:4035   */\n  tag_98\n    /* \"#utility.yul\":4018:4034   */\n  dup3\n    /* \"#utility.yul\":3994:4035   */\n  tag_41\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":3986:3992   */\n  dup5\n    /* \"#utility.yul\":3979:3983   */\n  dup5\n    /* \"#utility.yul\":3973:3984   */\n  sload\n    /* \"#utility.yul\":3945:4036   */\n  tag_37\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":3939:3943   */\n  dup3\n    /* \"#utility.yul\":3932:4037   */\n  sstore\n    /* \"#utility.yul\":3850:4043   */\n  pop\n    /* \"#utility.yul\":3774:4043   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4049:4122   */\ntag_43:\n    /* \"#utility.yul\":4094:4097   */\n  0x00\n    /* \"#utility.yul\":4049:4122   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":4128:4317   */\ntag_44:\n    /* \"#utility.yul\":4205:4237   */\n  tag_101\n  tag_43\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":4246:4311   */\n  tag_102\n    /* \"#utility.yul\":4304:4310   */\n  dup2\n    /* \"#utility.yul\":4296:4302   */\n  dup5\n    /* \"#utility.yul\":4290:4294   */\n  dup5\n    /* \"#utility.yul\":4246:4311   */\n  tag_42\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":4181:4317   */\n  pop\n    /* \"#utility.yul\":4128:4317   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4323:4509   */\ntag_45:\n    /* \"#utility.yul\":4383:4503   */\ntag_104:\n    /* \"#utility.yul\":4400:4403   */\n  dup2\n    /* \"#utility.yul\":4393:4398   */\n  dup2\n    /* \"#utility.yul\":4390:4404   */\n  lt\n    /* \"#utility.yul\":4383:4503   */\n  iszero\n  tag_106\n  jumpi\n    /* \"#utility.yul\":4454:4493   */\n  tag_107\n    /* \"#utility.yul\":4491:4492   */\n  0x00\n    /* \"#utility.yul\":4484:4489   */\n  dup3\n    /* \"#utility.yul\":4454:4493   */\n  tag_44\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":4427:4428   */\n  0x01\n    /* \"#utility.yul\":4420:4425   */\n  dup2\n    /* \"#utility.yul\":4416:4429   */\n  add\n    /* \"#utility.yul\":4407:4429   */\n  swap1\n  pop\n    /* \"#utility.yul\":4383:4503   */\n  jump(tag_104)\ntag_106:\n    /* \"#utility.yul\":4323:4509   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4515:5058   */\ntag_46:\n    /* \"#utility.yul\":4616:4618   */\n  0x1f\n    /* \"#utility.yul\":4611:4614   */\n  dup3\n    /* \"#utility.yul\":4608:4619   */\n  gt\n    /* \"#utility.yul\":4605:5051   */\n  iszero\n  tag_109\n  jumpi\n    /* \"#utility.yul\":4650:4688   */\n  tag_110\n    /* \"#utility.yul\":4682:4687   */\n  dup2\n    /* \"#utility.yul\":4650:4688   */\n  tag_34\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":4734:4763   */\n  tag_111\n    /* \"#utility.yul\":4752:4762   */\n  dup5\n    /* \"#utility.yul\":4734:4763   */\n  tag_35\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":4724:4732   */\n  dup2\n    /* \"#utility.yul\":4720:4764   */\n  add\n    /* \"#utility.yul\":4917:4919   */\n  0x20\n    /* \"#utility.yul\":4905:4915   */\n  dup6\n    /* \"#utility.yul\":4902:4920   */\n  lt\n    /* \"#utility.yul\":4899:4948   */\n  iszero\n  tag_112\n  jumpi\n    /* \"#utility.yul\":4938:4946   */\n  dup2\n    /* \"#utility.yul\":4923:4946   */\n  swap1\n  pop\n    /* \"#utility.yul\":4899:4948   */\ntag_112:\n    /* \"#utility.yul\":4961:5041   */\n  tag_113\n    /* \"#utility.yul\":5017:5039   */\n  tag_114\n    /* \"#utility.yul\":5035:5038   */\n  dup6\n    /* \"#utility.yul\":5017:5039   */\n  tag_35\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":5007:5015   */\n  dup4\n    /* \"#utility.yul\":5003:5040   */\n  add\n    /* \"#utility.yul\":4990:5001   */\n  dup3\n    /* \"#utility.yul\":4961:5041   */\n  tag_45\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":4620:5051   */\n  pop\n  pop\n    /* \"#utility.yul\":4605:5051   */\ntag_109:\n    /* \"#utility.yul\":4515:5058   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5064:5181   */\ntag_47:\n    /* \"#utility.yul\":5118:5126   */\n  0x00\n    /* \"#utility.yul\":5168:5173   */\n  dup3\n    /* \"#utility.yul\":5162:5166   */\n  dup3\n    /* \"#utility.yul\":5158:5174   */\n  shr\n    /* \"#utility.yul\":5137:5174   */\n  swap1\n  pop\n    /* \"#utility.yul\":5064:5181   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5187:5356   */\ntag_48:\n    /* \"#utility.yul\":5231:5237   */\n  0x00\n    /* \"#utility.yul\":5264:5315   */\n  tag_117\n    /* \"#utility.yul\":5312:5313   */\n  0x00\n    /* \"#utility.yul\":5308:5314   */\n  not\n    /* \"#utility.yul\":5300:5305   */\n  dup5\n    /* \"#utility.yul\":5297:5298   */\n  0x08\n    /* \"#utility.yul\":5293:5306   */\n  mul\n    /* \"#utility.yul\":5264:5315   */\n  tag_47\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":5260:5316   */\n  not\n    /* \"#utility.yul\":5345:5349   */\n  dup1\n    /* \"#utility.yul\":5339:5343   */\n  dup4\n    /* \"#utility.yul\":5335:5350   */\n  and\n    /* \"#utility.yul\":5325:5350   */\n  swap2\n  pop\n    /* \"#utility.yul\":5238:5356   */\n  pop\n    /* \"#utility.yul\":5187:5356   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5361:5656   */\ntag_49:\n    /* \"#utility.yul\":5437:5441   */\n  0x00\n    /* \"#utility.yul\":5583:5612   */\n  tag_119\n    /* \"#utility.yul\":5608:5611   */\n  dup4\n    /* \"#utility.yul\":5602:5606   */\n  dup4\n    /* \"#utility.yul\":5583:5612   */\n  tag_48\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":5575:5612   */\n  swap2\n  pop\n    /* \"#utility.yul\":5645:5648   */\n  dup3\n    /* \"#utility.yul\":5642:5643   */\n  0x02\n    /* \"#utility.yul\":5638:5649   */\n  mul\n    /* \"#utility.yul\":5632:5636   */\n  dup3\n    /* \"#utility.yul\":5629:5650   */\n  or\n    /* \"#utility.yul\":5621:5650   */\n  swap1\n  pop\n    /* \"#utility.yul\":5361:5656   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5661:7056   */\ntag_9:\n    /* \"#utility.yul\":5778:5815   */\n  tag_121\n    /* \"#utility.yul\":5811:5814   */\n  dup3\n    /* \"#utility.yul\":5778:5815   */\n  tag_30\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":5880:5898   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5872:5878   */\n  dup2\n    /* \"#utility.yul\":5869:5899   */\n  gt\n    /* \"#utility.yul\":5866:5922   */\n  iszero\n  tag_122\n  jumpi\n    /* \"#utility.yul\":5902:5920   */\n  tag_123\n  tag_31\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":5866:5922   */\ntag_122:\n    /* \"#utility.yul\":5946:5984   */\n  tag_124\n    /* \"#utility.yul\":5978:5982   */\n  dup3\n    /* \"#utility.yul\":5972:5983   */\n  sload\n    /* \"#utility.yul\":5946:5984   */\n  tag_33\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":6031:6098   */\n  tag_125\n    /* \"#utility.yul\":6091:6097   */\n  dup3\n    /* \"#utility.yul\":6083:6089   */\n  dup3\n    /* \"#utility.yul\":6077:6081   */\n  dup6\n    /* \"#utility.yul\":6031:6098   */\n  tag_46\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":6125:6126   */\n  0x00\n    /* \"#utility.yul\":6149:6153   */\n  0x20\n    /* \"#utility.yul\":6136:6153   */\n  swap1\n  pop\n    /* \"#utility.yul\":6181:6183   */\n  0x1f\n    /* \"#utility.yul\":6173:6179   */\n  dup4\n    /* \"#utility.yul\":6170:6184   */\n  gt\n    /* \"#utility.yul\":6198:6199   */\n  0x01\n    /* \"#utility.yul\":6193:6811   */\n  dup2\n  eq\n  tag_127\n  jumpi\n    /* \"#utility.yul\":6855:6856   */\n  0x00\n    /* \"#utility.yul\":6872:6878   */\n  dup5\n    /* \"#utility.yul\":6869:6946   */\n  iszero\n  tag_128\n  jumpi\n    /* \"#utility.yul\":6921:6930   */\n  dup3\n    /* \"#utility.yul\":6916:6919   */\n  dup8\n    /* \"#utility.yul\":6912:6931   */\n  add\n    /* \"#utility.yul\":6906:6932   */\n  mload\n    /* \"#utility.yul\":6897:6932   */\n  swap1\n  pop\n    /* \"#utility.yul\":6869:6946   */\ntag_128:\n    /* \"#utility.yul\":6972:7039   */\n  tag_129\n    /* \"#utility.yul\":7032:7038   */\n  dup6\n    /* \"#utility.yul\":7025:7030   */\n  dup3\n    /* \"#utility.yul\":6972:7039   */\n  tag_49\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":6966:6970   */\n  dup7\n    /* \"#utility.yul\":6959:7040   */\n  sstore\n    /* \"#utility.yul\":6828:7050   */\n  pop\n    /* \"#utility.yul\":6163:7050   */\n  jump(tag_126)\n    /* \"#utility.yul\":6193:6811   */\ntag_127:\n    /* \"#utility.yul\":6245:6249   */\n  0x1f\n    /* \"#utility.yul\":6241:6250   */\n  not\n    /* \"#utility.yul\":6233:6239   */\n  dup5\n    /* \"#utility.yul\":6229:6251   */\n  and\n    /* \"#utility.yul\":6279:6316   */\n  tag_130\n    /* \"#utility.yul\":6311:6315   */\n  dup7\n    /* \"#utility.yul\":6279:6316   */\n  tag_34\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":6338:6339   */\n  0x00\n    /* \"#utility.yul\":6352:6560   */\ntag_131:\n    /* \"#utility.yul\":6366:6373   */\n  dup3\n    /* \"#utility.yul\":6363:6364   */\n  dup2\n    /* \"#utility.yul\":6360:6374   */\n  lt\n    /* \"#utility.yul\":6352:6560   */\n  iszero\n  tag_133\n  jumpi\n    /* \"#utility.yul\":6445:6454   */\n  dup5\n    /* \"#utility.yul\":6440:6443   */\n  dup10\n    /* \"#utility.yul\":6436:6455   */\n  add\n    /* \"#utility.yul\":6430:6456   */\n  mload\n    /* \"#utility.yul\":6422:6428   */\n  dup3\n    /* \"#utility.yul\":6415:6457   */\n  sstore\n    /* \"#utility.yul\":6496:6497   */\n  0x01\n    /* \"#utility.yul\":6488:6494   */\n  dup3\n    /* \"#utility.yul\":6484:6498   */\n  add\n    /* \"#utility.yul\":6474:6498   */\n  swap2\n  pop\n    /* \"#utility.yul\":6543:6545   */\n  0x20\n    /* \"#utility.yul\":6532:6541   */\n  dup6\n    /* \"#utility.yul\":6528:6546   */\n  add\n    /* \"#utility.yul\":6515:6546   */\n  swap5\n  pop\n    /* \"#utility.yul\":6389:6393   */\n  0x20\n    /* \"#utility.yul\":6386:6387   */\n  dup2\n    /* \"#utility.yul\":6382:6394   */\n  add\n    /* \"#utility.yul\":6377:6394   */\n  swap1\n  pop\n    /* \"#utility.yul\":6352:6560   */\n  jump(tag_131)\ntag_133:\n    /* \"#utility.yul\":6588:6594   */\n  dup7\n    /* \"#utility.yul\":6579:6586   */\n  dup4\n    /* \"#utility.yul\":6576:6595   */\n  lt\n    /* \"#utility.yul\":6573:6752   */\n  iszero\n  tag_134\n  jumpi\n    /* \"#utility.yul\":6646:6655   */\n  dup5\n    /* \"#utility.yul\":6641:6644   */\n  dup10\n    /* \"#utility.yul\":6637:6656   */\n  add\n    /* \"#utility.yul\":6631:6657   */\n  mload\n    /* \"#utility.yul\":6689:6737   */\n  tag_135\n    /* \"#utility.yul\":6731:6735   */\n  0x1f\n    /* \"#utility.yul\":6723:6729   */\n  dup10\n    /* \"#utility.yul\":6719:6736   */\n  and\n    /* \"#utility.yul\":6708:6717   */\n  dup3\n    /* \"#utility.yul\":6689:6737   */\n  tag_48\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":6681:6687   */\n  dup4\n    /* \"#utility.yul\":6674:6738   */\n  sstore\n    /* \"#utility.yul\":6596:6752   */\n  pop\n    /* \"#utility.yul\":6573:6752   */\ntag_134:\n    /* \"#utility.yul\":6798:6799   */\n  0x01\n    /* \"#utility.yul\":6794:6795   */\n  0x02\n    /* \"#utility.yul\":6786:6792   */\n  dup9\n    /* \"#utility.yul\":6782:6796   */\n  mul\n    /* \"#utility.yul\":6778:6800   */\n  add\n    /* \"#utility.yul\":6772:6776   */\n  dup9\n    /* \"#utility.yul\":6765:6801   */\n  sstore\n    /* \"#utility.yul\":6200:6811   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":6163:7050   */\ntag_126:\n  pop\n    /* \"#utility.yul\":5753:7056   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5661:7056   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7062:7180   */\ntag_50:\n    /* \"#utility.yul\":7149:7173   */\n  tag_137\n    /* \"#utility.yul\":7167:7172   */\n  dup2\n    /* \"#utility.yul\":7149:7173   */\n  tag_24\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":7144:7147   */\n  dup3\n    /* \"#utility.yul\":7137:7174   */\n  mstore\n    /* \"#utility.yul\":7062:7180   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7186:7408   */\ntag_14:\n    /* \"#utility.yul\":7279:7283   */\n  0x00\n    /* \"#utility.yul\":7317:7319   */\n  0x20\n    /* \"#utility.yul\":7306:7315   */\n  dup3\n    /* \"#utility.yul\":7302:7320   */\n  add\n    /* \"#utility.yul\":7294:7320   */\n  swap1\n  pop\n    /* \"#utility.yul\":7330:7401   */\n  tag_139\n    /* \"#utility.yul\":7398:7399   */\n  0x00\n    /* \"#utility.yul\":7387:7396   */\n  dup4\n    /* \"#utility.yul\":7383:7400   */\n  add\n    /* \"#utility.yul\":7374:7380   */\n  dup5\n    /* \"#utility.yul\":7330:7401   */\n  tag_50\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":7186:7408   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"PictureToken.sol\":223:1333  contract PictureToken is ERC721, Ownable {... */\ntag_18:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"PictureToken.sol\":223:1333  contract PictureToken is ERC721, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x854cbb4a\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xa035b1fe\n      gt\n      tag_27\n      jumpi\n      dup1\n      0xa035b1fe\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_25\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x854cbb4a\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8c2a5bc8\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x91b7f5ed\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x98d5fdca\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0x42842e0e\n      gt\n      tag_28\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x5987cc19\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x64edfbf0\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_28:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1607:1912  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2438:2529  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3610:3768  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_5:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3429:3544  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_6:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n    tag_45:\n      stop\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4279:4867  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_7:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      stop\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4938:5072  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_8:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n    tag_53:\n      stop\n        /* \"PictureToken.sol\":1002:1072  function putOnSale() public onlyOwner {... */\n    tag_9:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      stop\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2251:2371  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_10:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PictureToken.sol\":1162:1328  function purchase() public {... */\n    tag_11:\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      stop\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1976:2189  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_12:\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      tag_67\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":2368:2471  function renounceOwnership() public virtual onlyOwner {... */\n    tag_13:\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      stop\n        /* \"PictureToken.sol\":669:814  function getSinglePictureToken() public view returns(tokenData memory) {... */\n    tag_14:\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PictureToken.sol\":1080:1154  function notPutOnSale() public onlyOwner {... */\n    tag_15:\n      tag_76\n      tag_77\n      jump\t// in\n    tag_76:\n      stop\n        /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":1693:1780  function owner() public view virtual returns (address) {... */\n    tag_16:\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PictureToken.sol\":910:994  function setPrice(uint256 _price) public onlyOwner {... */\n    tag_17:\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n    tag_81:\n      stop\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2598:2693  function symbol() public view virtual returns (string memory) {... */\n    tag_18:\n      tag_84\n      tag_85\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PictureToken.sol\":822:902  function getPrice() public view returns(uint256) {... */\n    tag_19:\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PictureToken.sol\":293:313  uint256 public price */\n    tag_20:\n      tag_90\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      tag_92\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3840:3986  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_21:\n      tag_93\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      tag_96\n      jump\t// in\n    tag_93:\n      stop\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5143:5354  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_22:\n      tag_97\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_98\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n      tag_100\n      jump\t// in\n    tag_97:\n      stop\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2764:3024  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_23:\n      tag_101\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_102\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_102:\n      tag_103\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      tag_104\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4057:4212  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_24:\n      tag_105\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_106\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n      tag_108\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      tag_109\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":2626:2846  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_25:\n      tag_110\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_111\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_111:\n      tag_112\n      jump\t// in\n    tag_110:\n      stop\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1607:1912  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_32:\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1709:1713  bool */\n      0x00\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1761:1786  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1746:1786  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1746:1757  interfaceId */\n      dup3\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1746:1786  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1746:1851  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_114\n      jumpi\n      pop\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1818:1851  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1803:1851  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1803:1814  interfaceId */\n      dup3\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1803:1851  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1746:1851  interfaceId == type(IERC721).interfaceId ||... */\n    tag_114:\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1746:1904  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_115\n      jumpi\n      pop\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1868:1904  super.supportsInterface(interfaceId) */\n      tag_116\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1892:1903  interfaceId */\n      dup3\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1868:1891  super.supportsInterface */\n      tag_117\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1868:1904  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_116:\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1746:1904  interfaceId == type(IERC721).interfaceId ||... */\n    tag_115:\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1726:1904  return... */\n      swap1\n      pop\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1607:1912  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2438:2529  function name() public view virtual returns (string memory) {... */\n    tag_36:\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2483:2496  string memory */\n      0x60\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2516:2521  _name */\n      0x00\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2509:2521  return _name */\n      dup1\n      sload\n      tag_119\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_121\n      swap1\n      tag_120\n      jump\t// in\n    tag_121:\n      dup1\n      iszero\n      tag_122\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_123\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_122)\n    tag_123:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_124:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_124\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_122:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2438:2529  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3610:3768  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_42:\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3677:3684  address */\n      0x00\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3697:3719  _requireOwned(tokenId) */\n      tag_126\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3711:3718  tokenId */\n      dup3\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3697:3710  _requireOwned */\n      tag_127\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3697:3719  _requireOwned(tokenId) */\n      jump\t// in\n    tag_126:\n      pop\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3739:3760  _getApproved(tokenId) */\n      tag_128\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3752:3759  tokenId */\n      dup3\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3739:3751  _getApproved */\n      tag_129\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3739:3760  _getApproved(tokenId) */\n      jump\t// in\n    tag_128:\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3732:3760  return _getApproved(tokenId) */\n      swap1\n      pop\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3610:3768  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3429:3544  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_48:\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3501:3536  _approve(to, tokenId, _msgSender()) */\n      tag_131\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3510:3512  to */\n      dup3\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3514:3521  tokenId */\n      dup3\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3523:3535  _msgSender() */\n      tag_132\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3523:3533  _msgSender */\n      tag_133\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3523:3535  _msgSender() */\n      jump\t// in\n    tag_132:\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3501:3509  _approve */\n      tag_134\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3501:3536  _approve(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_131:\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3429:3544  function approve(address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4279:4867  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_52:\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4388:4389  0 */\n      0x00\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4374:4390  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4374:4376  to */\n      dup3\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4374:4390  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4370:4459  if (to == address(0)) {... */\n      tag_136\n      jumpi\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4444:4445  0 */\n      0x00\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4414:4447  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_137\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4370:4459  if (to == address(0)) {... */\n    tag_136:\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4680:4701  address previousOwner */\n      0x00\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4704:4738  _update(to, tokenId, _msgSender()) */\n      tag_138\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4712:4714  to */\n      dup4\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4716:4723  tokenId */\n      dup4\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4725:4737  _msgSender() */\n      tag_139\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4725:4735  _msgSender */\n      tag_133\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4725:4737  _msgSender() */\n      jump\t// in\n    tag_139:\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4704:4711  _update */\n      tag_140\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4704:4738  _update(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_138:\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4680:4738  address previousOwner = _update(to, tokenId, _msgSender()) */\n      swap1\n      pop\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4770:4774  from */\n      dup4\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4753:4774  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4753:4766  previousOwner */\n      dup2\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4753:4774  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4749:4860  if (previousOwner != from) {... */\n      tag_141\n      jumpi\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4819:4823  from */\n      dup4\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4825:4832  tokenId */\n      dup3\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4834:4847  previousOwner */\n      dup3\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4798:4848  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      mload(0x40)\n      0x64283d7b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_142\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4749:4860  if (previousOwner != from) {... */\n    tag_141:\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4359:4867  {... */\n      pop\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4279:4867  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4938:5072  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_55:\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5025:5064  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_145\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5042:5046  from */\n      dup4\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5048:5050  to */\n      dup4\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5052:5059  tokenId */\n      dup4\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5025:5064  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5025:5041  safeTransferFrom */\n      tag_100\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5025:5064  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_145:\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4938:5072  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"PictureToken.sol\":1002:1072  function putOnSale() public onlyOwner {... */\n    tag_57:\n        /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":1579:1592  _checkOwner() */\n      tag_147\n        /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":1579:1590  _checkOwner */\n      tag_148\n        /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":1579:1592  _checkOwner() */\n      jump\t// in\n    tag_147:\n        /* \"PictureToken.sol\":1060:1064  true */\n      0x01\n        /* \"PictureToken.sol\":1051:1057  onSale */\n      0x09\n      0x00\n        /* \"PictureToken.sol\":1051:1064  onSale = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"PictureToken.sol\":1002:1072  function putOnSale() public onlyOwner {... */\n      jump\t// out\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2251:2371  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_60:\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2314:2321  address */\n      0x00\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2341:2363  _requireOwned(tokenId) */\n      tag_151\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2355:2362  tokenId */\n      dup3\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2341:2354  _requireOwned */\n      tag_127\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2341:2363  _requireOwned(tokenId) */\n      jump\t// in\n    tag_151:\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2334:2363  return _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2251:2371  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"PictureToken.sol\":1162:1328  function purchase() public {... */\n    tag_63:\n        /* \"PictureToken.sol\":1208:1218  msg.sender */\n      caller\n        /* \"PictureToken.sol\":1200:1228  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PictureToken.sol\":1200:1235  payable(msg.sender).transfer(price) */\n      0x08fc\n        /* \"PictureToken.sol\":1229:1234  price */\n      sload(0x08)\n        /* \"PictureToken.sol\":1200:1235  payable(msg.sender).transfer(price) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_154\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_154:\n      pop\n        /* \"PictureToken.sol\":1246:1275  transferOwnership(msg.sender) */\n      tag_155\n        /* \"PictureToken.sol\":1264:1274  msg.sender */\n      caller\n        /* \"PictureToken.sol\":1246:1263  transferOwnership */\n      tag_112\n        /* \"PictureToken.sol\":1246:1275  transferOwnership(msg.sender) */\n      jump\t// in\n    tag_155:\n        /* \"PictureToken.sol\":1294:1295  0 */\n      0x00\n        /* \"PictureToken.sol\":1286:1291  price */\n      0x08\n        /* \"PictureToken.sol\":1286:1295  price = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"PictureToken.sol\":1315:1320  false */\n      0x00\n        /* \"PictureToken.sol\":1306:1312  onSale */\n      0x09\n      0x00\n        /* \"PictureToken.sol\":1306:1320  onSale = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"PictureToken.sol\":1162:1328  function purchase() public {... */\n      jump\t// out\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1976:2189  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_67:\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2039:2046  uint256 */\n      0x00\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2080:2081  0 */\n      dup1\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2063:2082  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2063:2068  owner */\n      dup3\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2063:2082  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2059:2148  if (owner == address(0)) {... */\n      tag_157\n      jumpi\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2133:2134  0 */\n      0x00\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2106:2136  ERC721InvalidOwner(address(0)) */\n      mload(0x40)\n      0x89c62b6400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_158\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2059:2148  if (owner == address(0)) {... */\n    tag_157:\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2165:2174  _balances */\n      0x03\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2165:2181  _balances[owner] */\n      0x00\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2175:2180  owner */\n      dup4\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2165:2181  _balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2158:2181  return _balances[owner] */\n      swap1\n      pop\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":1976:2189  function balanceOf(address owner) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":2368:2471  function renounceOwnership() public virtual onlyOwner {... */\n    tag_71:\n        /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":1579:1592  _checkOwner() */\n      tag_160\n        /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":1579:1590  _checkOwner */\n      tag_148\n        /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":1579:1592  _checkOwner() */\n      jump\t// in\n    tag_160:\n        /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":2433:2463  _transferOwnership(address(0)) */\n      tag_162\n        /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":2460:2461  0 */\n      0x00\n        /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":2433:2451  _transferOwnership */\n      tag_163\n        /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":2433:2463  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_162:\n        /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":2368:2471  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"PictureToken.sol\":669:814  function getSinglePictureToken() public view returns(tokenData memory) {... */\n    tag_73:\n        /* \"PictureToken.sol\":722:738  tokenData memory */\n      tag_164\n      tag_165\n      jump\t// in\n    tag_164:\n        /* \"PictureToken.sol\":758:806  tokenData(Ownable.owner(), props, price, onSale) */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n        /* \"PictureToken.sol\":768:783  Ownable.owner() */\n      tag_167\n        /* \"PictureToken.sol\":768:781  Ownable.owner */\n      tag_79\n        /* \"PictureToken.sol\":768:783  Ownable.owner() */\n      jump\t// in\n    tag_167:\n        /* \"PictureToken.sol\":758:806  tokenData(Ownable.owner(), props, price, onSale) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"PictureToken.sol\":785:790  props */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PictureToken.sol\":758:806  tokenData(Ownable.owner(), props, price, onSale) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"PictureToken.sol\":792:797  price */\n      sload(0x08)\n        /* \"PictureToken.sol\":758:806  tokenData(Ownable.owner(), props, price, onSale) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"PictureToken.sol\":799:805  onSale */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"PictureToken.sol\":758:806  tokenData(Ownable.owner(), props, price, onSale) */\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n        /* \"PictureToken.sol\":751:806  return tokenData(Ownable.owner(), props, price, onSale) */\n      swap1\n      pop\n        /* \"PictureToken.sol\":669:814  function getSinglePictureToken() public view returns(tokenData memory) {... */\n      swap1\n      jump\t// out\n        /* \"PictureToken.sol\":1080:1154  function notPutOnSale() public onlyOwner {... */\n    tag_77:\n        /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":1579:1592  _checkOwner() */\n      tag_169\n        /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":1579:1590  _checkOwner */\n      tag_148\n        /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":1579:1592  _checkOwner() */\n      jump\t// in\n    tag_169:\n        /* \"PictureToken.sol\":1141:1146  false */\n      0x00\n        /* \"PictureToken.sol\":1132:1138  onSale */\n      0x09\n      0x00\n        /* \"PictureToken.sol\":1132:1146  onSale = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"PictureToken.sol\":1080:1154  function notPutOnSale() public onlyOwner {... */\n      jump\t// out\n        /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":1693:1780  function owner() public view virtual returns (address) {... */\n    tag_79:\n        /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":1739:1746  address */\n      0x00\n        /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":1766:1772  _owner */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":1759:1772  return _owner */\n      swap1\n      pop\n        /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":1693:1780  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"PictureToken.sol\":910:994  function setPrice(uint256 _price) public onlyOwner {... */\n    tag_83:\n        /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":1579:1592  _checkOwner() */\n      tag_173\n        /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":1579:1590  _checkOwner */\n      tag_148\n        /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":1579:1592  _checkOwner() */\n      jump\t// in\n    tag_173:\n        /* \"PictureToken.sol\":980:986  _price */\n      dup1\n        /* \"PictureToken.sol\":972:977  price */\n      0x08\n        /* \"PictureToken.sol\":972:986  price = _price */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"PictureToken.sol\":910:994  function setPrice(uint256 _price) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2598:2693  function symbol() public view virtual returns (string memory) {... */\n    tag_85:\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2645:2658  string memory */\n      0x60\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2678:2685  _symbol */\n      0x01\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2671:2685  return _symbol */\n      dup1\n      sload\n      tag_176\n      swap1\n      tag_120\n      jump\t// in\n    tag_176:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_177\n      swap1\n      tag_120\n      jump\t// in\n    tag_177:\n      dup1\n      iszero\n      tag_178\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_179\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_178)\n    tag_179:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_180:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_180\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_178:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2598:2693  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"PictureToken.sol\":822:902  function getPrice() public view returns(uint256) {... */\n    tag_88:\n        /* \"PictureToken.sol\":862:869  uint256 */\n      0x00\n        /* \"PictureToken.sol\":889:894  price */\n      sload(0x08)\n        /* \"PictureToken.sol\":882:894  return price */\n      swap1\n      pop\n        /* \"PictureToken.sol\":822:902  function getPrice() public view returns(uint256) {... */\n      swap1\n      jump\t// out\n        /* \"PictureToken.sol\":293:313  uint256 public price */\n    tag_91:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3840:3986  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_96:\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3926:3978  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_183\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3945:3957  _msgSender() */\n      tag_184\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3945:3955  _msgSender */\n      tag_133\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3945:3957  _msgSender() */\n      jump\t// in\n    tag_184:\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3959:3967  operator */\n      dup4\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3969:3977  approved */\n      dup4\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3926:3944  _setApprovalForAll */\n      tag_185\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3926:3978  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_183:\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":3840:3986  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5143:5354  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_100:\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5257:5288  transferFrom(from, to, tokenId) */\n      tag_187\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5270:5274  from */\n      dup5\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5276:5278  to */\n      dup5\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5280:5287  tokenId */\n      dup5\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5257:5269  transferFrom */\n      tag_52\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5257:5288  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_187:\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5299:5346  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_188\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5322:5326  from */\n      dup5\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5328:5330  to */\n      dup5\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5332:5339  tokenId */\n      dup5\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5341:5345  data */\n      dup5\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5299:5321  _checkOnERC721Received */\n      tag_189\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5299:5346  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_188:\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5143:5354  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2764:3024  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_103:\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2828:2841  string memory */\n      0x60\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2854:2876  _requireOwned(tokenId) */\n      tag_191\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2868:2875  tokenId */\n      dup3\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2854:2867  _requireOwned */\n      tag_127\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2854:2876  _requireOwned(tokenId) */\n      jump\t// in\n    tag_191:\n      pop\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2889:2910  string memory baseURI */\n      0x00\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2913:2923  _baseURI() */\n      tag_192\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2913:2921  _baseURI */\n      tag_193\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2913:2923  _baseURI() */\n      jump\t// in\n    tag_192:\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2889:2923  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2965:2966  0 */\n      0x00\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2947:2954  baseURI */\n      dup2\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2941:2962  bytes(baseURI).length */\n      mload\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2941:2966  bytes(baseURI).length > 0 */\n      gt\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2941:3016  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      tag_194\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_195)\n    tag_194:\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2983:2990  baseURI */\n      dup1\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2992:3010  tokenId.toString() */\n      tag_196\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2992:2999  tokenId */\n      dup5\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2992:3008  tokenId.toString */\n      tag_197\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2992:3010  tokenId.toString() */\n      jump\t// in\n    tag_196:\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2969:3011  string.concat(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_198\n      swap3\n      swap2\n      swap1\n      tag_199\n      jump\t// in\n    tag_198:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2941:3016  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n    tag_195:\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2934:3016  return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      swap2\n      pop\n      pop\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":2764:3024  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4057:4212  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_108:\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4145:4149  bool */\n      0x00\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4169:4187  _operatorApprovals */\n      0x05\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4169:4194  _operatorApprovals[owner] */\n      0x00\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4188:4193  owner */\n      dup5\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4169:4194  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4169:4204  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4195:4203  operator */\n      dup4\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4169:4204  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4162:4204  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":4057:4212  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":2626:2846  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_112:\n        /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":1579:1592  _checkOwner() */\n      tag_202\n        /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":1579:1590  _checkOwner */\n      tag_148\n        /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":1579:1592  _checkOwner() */\n      jump\t// in\n    tag_202:\n        /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":2731:2732  0 */\n      0x00\n        /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":2711:2733  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":2711:2719  newOwner */\n      dup2\n        /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":2711:2733  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":2707:2800  if (newOwner == address(0)) {... */\n      tag_204\n      jumpi\n        /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":2785:2786  0 */\n      0x00\n        /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":2757:2788  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_205\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_205:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":2707:2800  if (newOwner == address(0)) {... */\n    tag_204:\n        /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":2810:2838  _transferOwnership(newOwner) */\n      tag_206\n        /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":2829:2837  newOwner */\n      dup2\n        /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":2810:2828  _transferOwnership */\n      tag_163\n        /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":2810:2838  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_206:\n        /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":2626:2846  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":785:933  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_117:\n        /* \"openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":861:865  bool */\n      0x00\n        /* \"openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":900:925  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":885:925  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":885:896  interfaceId */\n      dup3\n        /* \"openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":885:925  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":878:925  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":785:933  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16585:16832  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n    tag_127:\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16648:16655  address */\n      0x00\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16668:16681  address owner */\n      dup1\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16684:16701  _ownerOf(tokenId) */\n      tag_209\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16693:16700  tokenId */\n      dup4\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16684:16692  _ownerOf */\n      tag_210\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16684:16701  _ownerOf(tokenId) */\n      jump\t// in\n    tag_209:\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16668:16701  address owner = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16733:16734  0 */\n      0x00\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16716:16735  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16716:16721  owner */\n      dup2\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16716:16735  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16712:16802  if (owner == address(0)) {... */\n      tag_211\n      jumpi\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16782:16789  tokenId */\n      dup3\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16759:16790  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_212\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_212:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16712:16802  if (owner == address(0)) {... */\n    tag_211:\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16819:16824  owner */\n      dup1\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16812:16824  return owner */\n      swap2\n      pop\n      pop\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16585:16832  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6116:6245  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_129:\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6186:6193  address */\n      0x00\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6213:6228  _tokenApprovals */\n      0x04\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6213:6237  _tokenApprovals[tokenId] */\n      0x00\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6229:6236  tokenId */\n      dup4\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6213:6237  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6206:6237  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6116:6245  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"openzeppelin-contracts/contracts/utils/Context.sol\":672:770  function _msgSender() internal view virtual returns (address) {... */\n    tag_133:\n        /* \"openzeppelin-contracts/contracts/utils/Context.sol\":725:732  address */\n      0x00\n        /* \"openzeppelin-contracts/contracts/utils/Context.sol\":752:762  msg.sender */\n      caller\n        /* \"openzeppelin-contracts/contracts/utils/Context.sol\":745:762  return msg.sender */\n      swap1\n      pop\n        /* \"openzeppelin-contracts/contracts/utils/Context.sol\":672:770  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":14817:14939  function _approve(address to, uint256 tokenId, address auth) internal {... */\n    tag_134:\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":14898:14931  _approve(to, tokenId, auth, true) */\n      tag_216\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":14907:14909  to */\n      dup4\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":14911:14918  tokenId */\n      dup4\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":14920:14924  auth */\n      dup4\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":14926:14930  true */\n      0x01\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":14898:14906  _approve */\n      tag_217\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":14898:14931  _approve(to, tokenId, auth, true) */\n      jump\t// in\n    tag_216:\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":14817:14939  function _approve(address to, uint256 tokenId, address auth) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9078:9902  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n    tag_140:\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9164:9171  address */\n      0x00\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9184:9196  address from */\n      dup1\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9199:9216  _ownerOf(tokenId) */\n      tag_219\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9208:9215  tokenId */\n      dup5\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9199:9207  _ownerOf */\n      tag_210\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9199:9216  _ownerOf(tokenId) */\n      jump\t// in\n    tag_219:\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9184:9216  address from = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9295:9296  0 */\n      0x00\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9279:9297  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9279:9283  auth */\n      dup4\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9279:9297  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9275:9363  if (auth != address(0)) {... */\n      tag_220\n      jumpi\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9314:9351  _checkAuthorized(from, auth, tokenId) */\n      tag_221\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9331:9335  from */\n      dup2\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9337:9341  auth */\n      dup5\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9343:9350  tokenId */\n      dup7\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9314:9330  _checkAuthorized */\n      tag_222\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9314:9351  _checkAuthorized(from, auth, tokenId) */\n      jump\t// in\n    tag_221:\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9275:9363  if (auth != address(0)) {... */\n    tag_220:\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9426:9427  0 */\n      0x00\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9410:9428  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9410:9414  from */\n      dup2\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9410:9428  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9406:9669  if (from != address(0)) {... */\n      tag_223\n      jumpi\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9528:9576  _approve(address(0), tokenId, address(0), false) */\n      tag_224\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9545:9546  0 */\n      0x00\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9549:9556  tokenId */\n      dup6\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9566:9567  0 */\n      0x00\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9570:9575  false */\n      dup1\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9528:9536  _approve */\n      tag_217\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9528:9576  _approve(address(0), tokenId, address(0), false) */\n      jump\t// in\n    tag_224:\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9641:9642  1 */\n      0x01\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9622:9631  _balances */\n      0x03\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9622:9637  _balances[from] */\n      0x00\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9632:9636  from */\n      dup4\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9622:9637  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9622:9642  _balances[from] -= 1 */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9406:9669  if (from != address(0)) {... */\n    tag_223:\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9699:9700  0 */\n      0x00\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9685:9701  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9685:9687  to */\n      dup6\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9685:9701  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9681:9792  if (to != address(0)) {... */\n      tag_225\n      jumpi\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9764:9765  1 */\n      0x01\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9747:9756  _balances */\n      0x03\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9747:9760  _balances[to] */\n      0x00\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9757:9759  to */\n      dup8\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9747:9760  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9747:9765  _balances[to] += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9681:9792  if (to != address(0)) {... */\n    tag_225:\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9823:9825  to */\n      dup5\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9804:9811  _owners */\n      0x02\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9804:9820  _owners[tokenId] */\n      0x00\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9812:9819  tokenId */\n      dup7\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9804:9820  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9804:9825  _owners[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9862:9869  tokenId */\n      dup4\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9858:9860  to */\n      dup6\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9843:9870  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9852:9856  from */\n      dup3\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9843:9870  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9890:9894  from */\n      dup1\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9883:9894  return from */\n      swap2\n      pop\n      pop\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":9078:9902  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":1858:2024  function _checkOwner() internal view virtual {... */\n    tag_148:\n        /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":1929:1941  _msgSender() */\n      tag_227\n        /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":1929:1939  _msgSender */\n      tag_133\n        /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":1929:1941  _msgSender() */\n      jump\t// in\n    tag_227:\n        /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":1918:1941  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":1918:1925  owner() */\n      tag_228\n        /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":1918:1923  owner */\n      tag_79\n        /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":1918:1925  owner() */\n      jump\t// in\n    tag_228:\n        /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":1918:1941  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":1914:2017  if (owner() != _msgSender()) {... */\n      tag_229\n      jumpi\n        /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":1992:2004  _msgSender() */\n      tag_230\n        /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":1992:2002  _msgSender */\n      tag_133\n        /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":1992:2004  _msgSender() */\n      jump\t// in\n    tag_230:\n        /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":1965:2005  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_231\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_231:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":1914:2017  if (owner() != _msgSender()) {... */\n    tag_229:\n        /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":1858:2024  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":3006:3197  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_163:\n        /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":3080:3096  address oldOwner */\n      0x00\n        /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":3099:3105  _owner */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":3080:3105  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":3125:3133  newOwner */\n      dup2\n        /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":3116:3122  _owner */\n      0x06\n      0x00\n        /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":3116:3133  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":3180:3188  newOwner */\n      dup2\n        /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":3149:3189  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":3170:3178  oldOwner */\n      dup2\n        /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":3149:3189  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":3069:3197  {... */\n      pop\n        /* \"openzeppelin-contracts/contracts/access/Ownable.sol\":3006:3197  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16024:16342  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_185:\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16152:16153  0 */\n      0x00\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16132:16154  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16132:16140  operator */\n      dup3\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16132:16154  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16128:16221  if (operator == address(0)) {... */\n      tag_234\n      jumpi\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16200:16208  operator */\n      dup2\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16178:16209  ERC721InvalidOperator(operator) */\n      mload(0x40)\n      0x5b08ba1800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_235\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_235:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16128:16221  if (operator == address(0)) {... */\n    tag_234:\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16269:16277  approved */\n      dup1\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16231:16249  _operatorApprovals */\n      0x05\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16231:16256  _operatorApprovals[owner] */\n      0x00\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16250:16255  owner */\n      dup6\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16231:16256  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16231:16266  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16257:16265  operator */\n      dup5\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16231:16266  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16231:16277  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16315:16323  operator */\n      dup2\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16293:16334  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16308:16313  owner */\n      dup4\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16293:16334  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16325:16333  approved */\n      dup4\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16293:16334  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_236\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_236:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":16024:16342  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17382:18181  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n    tag_189:\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17516:17517  0 */\n      0x00\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17499:17501  to */\n      dup4\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17499:17513  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17499:17517  to.code.length > 0 */\n      gt\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17495:18174  if (to.code.length > 0) {... */\n      iszero\n      tag_238\n      jumpi\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17554:17556  to */\n      dup3\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17538:17574  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17575:17587  _msgSender() */\n      tag_239\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17575:17585  _msgSender */\n      tag_133\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17575:17587  _msgSender() */\n      jump\t// in\n    tag_239:\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17589:17593  from */\n      dup7\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17595:17602  tokenId */\n      dup6\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17604:17608  data */\n      dup6\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17538:17609  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_240\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_241\n      jump\t// in\n    tag_240:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_242\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_243\n      swap2\n      swap1\n      tag_244\n      jump\t// in\n    tag_243:\n      0x01\n    tag_242:\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17534:18163  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_245\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_250\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_249)\n    tag_250:\n      0x60\n      swap2\n      pop\n    tag_249:\n      pop\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17869:17870  0 */\n      0x00\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17852:17858  reason */\n      dup2\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17852:17865  reason.length */\n      mload\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17852:17870  reason.length == 0 */\n      sub\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17848:18148  if (reason.length == 0) {... */\n      tag_251\n      jumpi\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17924:17926  to */\n      dup4\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17902:17927  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_252\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_252:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17848:18148  if (reason.length == 0) {... */\n    tag_251:\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":18098:18104  reason */\n      dup1\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":18092:18105  mload(reason) */\n      mload\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":18083:18089  reason */\n      dup2\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":18079:18081  32 */\n      0x20\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":18075:18090  add(32, reason) */\n      add\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":18068:18106  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17534:18163  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_245:\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17667:17708  IERC721Receiver.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17657:17708  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17657:17663  retval */\n      dup2\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17657:17708  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17653:17785  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n      tag_255\n      jumpi\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17762:17764  to */\n      dup4\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17740:17765  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_256\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_256:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17653:17785  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n    tag_255:\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17610:17800  returns (bytes4 retval) {... */\n      pop\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17495:18174  if (to.code.length > 0) {... */\n    tag_238:\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":17382:18181  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"PictureToken.sol\":542:661  function _baseURI() internal pure override returns (string memory) {... */\n    tag_193:\n        /* \"PictureToken.sol\":594:607  string memory */\n      0x60\n        /* \"PictureToken.sol\":620:653  return \"ipfs://pieceTokenBaseURI\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x18\n      dup2\n      mstore\n      0x20\n      add\n      0x697066733a2f2f7069656365546f6b656e426173655552490000000000000000\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"PictureToken.sol\":542:661  function _baseURI() internal pure override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"openzeppelin-contracts/contracts/utils/Strings.sol\":660:1378  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_197:\n        /* \"openzeppelin-contracts/contracts/utils/Strings.sol\":716:729  string memory */\n      0x60\n        /* \"openzeppelin-contracts/contracts/utils/Strings.sol\":767:781  uint256 length */\n      0x00\n        /* \"openzeppelin-contracts/contracts/utils/Strings.sol\":804:805  1 */\n      0x01\n        /* \"openzeppelin-contracts/contracts/utils/Strings.sol\":784:801  Math.log10(value) */\n      tag_259\n        /* \"openzeppelin-contracts/contracts/utils/Strings.sol\":795:800  value */\n      dup5\n        /* \"openzeppelin-contracts/contracts/utils/Strings.sol\":784:794  Math.log10 */\n      tag_260\n        /* \"openzeppelin-contracts/contracts/utils/Strings.sol\":784:801  Math.log10(value) */\n      jump\t// in\n    tag_259:\n        /* \"openzeppelin-contracts/contracts/utils/Strings.sol\":784:805  Math.log10(value) + 1 */\n      add\n        /* \"openzeppelin-contracts/contracts/utils/Strings.sol\":767:805  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"openzeppelin-contracts/contracts/utils/Strings.sol\":820:840  string memory buffer */\n      0x00\n        /* \"openzeppelin-contracts/contracts/utils/Strings.sol\":854:860  length */\n      dup2\n        /* \"openzeppelin-contracts/contracts/utils/Strings.sol\":843:861  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_261\n      jumpi\n      tag_262\n      tag_263\n      jump\t// in\n    tag_262:\n    tag_261:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_264\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_264:\n      pop\n        /* \"openzeppelin-contracts/contracts/utils/Strings.sol\":820:861  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"openzeppelin-contracts/contracts/utils/Strings.sol\":876:887  uint256 ptr */\n      0x00\n        /* \"openzeppelin-contracts/contracts/utils/Strings.sol\":1005:1011  length */\n      dup3\n        /* \"openzeppelin-contracts/contracts/utils/Strings.sol\":1001:1003  32 */\n      0x20\n        /* \"openzeppelin-contracts/contracts/utils/Strings.sol\":997:1012  add(32, length) */\n      add\n        /* \"openzeppelin-contracts/contracts/utils/Strings.sol\":989:995  buffer */\n      dup3\n        /* \"openzeppelin-contracts/contracts/utils/Strings.sol\":985:1013  add(buffer, add(32, length)) */\n      add\n        /* \"openzeppelin-contracts/contracts/utils/Strings.sol\":978:1013  ptr := add(buffer, add(32, length)) */\n      swap1\n      pop\n        /* \"openzeppelin-contracts/contracts/utils/Strings.sol\":1042:1332  while (true) {... */\n    tag_265:\n        /* \"openzeppelin-contracts/contracts/utils/Strings.sol\":1049:1053  true */\n      0x01\n        /* \"openzeppelin-contracts/contracts/utils/Strings.sol\":1042:1332  while (true) {... */\n      iszero\n      tag_266\n      jumpi\n        /* \"openzeppelin-contracts/contracts/utils/Strings.sol\":1074:1079  ptr-- */\n      dup1\n      dup1\n      0x01\n      swap1\n      sub\n      swap2\n      pop\n      pop\n        /* \"openzeppelin-contracts/contracts/utils/Strings.sol\":1216:1226  HEX_DIGITS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"openzeppelin-contracts/contracts/utils/Strings.sol\":1211:1213  10 */\n      0x0a\n        /* \"openzeppelin-contracts/contracts/utils/Strings.sol\":1204:1209  value */\n      dup7\n        /* \"openzeppelin-contracts/contracts/utils/Strings.sol\":1200:1214  mod(value, 10) */\n      mod\n        /* \"openzeppelin-contracts/contracts/utils/Strings.sol\":1195:1227  byte(mod(value, 10), HEX_DIGITS) */\n      byte\n        /* \"openzeppelin-contracts/contracts/utils/Strings.sol\":1190:1193  ptr */\n      dup2\n        /* \"openzeppelin-contracts/contracts/utils/Strings.sol\":1182:1228  mstore8(ptr, byte(mod(value, 10), HEX_DIGITS)) */\n      mstore8\n        /* \"openzeppelin-contracts/contracts/utils/Strings.sol\":1274:1276  10 */\n      0x0a\n        /* \"openzeppelin-contracts/contracts/utils/Strings.sol\":1265:1276  value /= 10 */\n      dup6\n      dup2\n      tag_267\n      jumpi\n      tag_268\n      tag_269\n      jump\t// in\n    tag_268:\n    tag_267:\n      div\n      swap5\n      pop\n        /* \"openzeppelin-contracts/contracts/utils/Strings.sol\":1308:1309  0 */\n      0x00\n        /* \"openzeppelin-contracts/contracts/utils/Strings.sol\":1299:1304  value */\n      dup6\n        /* \"openzeppelin-contracts/contracts/utils/Strings.sol\":1299:1309  value == 0 */\n      sub\n        /* \"openzeppelin-contracts/contracts/utils/Strings.sol\":1042:1332  while (true) {... */\n      tag_265\n        /* \"openzeppelin-contracts/contracts/utils/Strings.sol\":1295:1316  if (value == 0) break */\n      jumpi\n        /* \"openzeppelin-contracts/contracts/utils/Strings.sol\":1042:1332  while (true) {... */\n    tag_266:\n        /* \"openzeppelin-contracts/contracts/utils/Strings.sol\":1353:1359  buffer */\n      dup2\n        /* \"openzeppelin-contracts/contracts/utils/Strings.sol\":1346:1359  return buffer */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"openzeppelin-contracts/contracts/utils/Strings.sol\":660:1378  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5878:5995  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_210:\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5944:5951  address */\n      0x00\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5971:5978  _owners */\n      0x02\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5971:5987  _owners[tokenId] */\n      0x00\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5979:5986  tokenId */\n      dup4\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5971:5987  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5964:5987  return _owners[tokenId] */\n      swap1\n      pop\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":5878:5995  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15127:15805  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n    tag_217:\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15289:15298  emitEvent */\n      dup1\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15289:15320  emitEvent || auth != address(0) */\n      dup1\n      tag_273\n      jumpi\n      pop\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15318:15319  0 */\n      0x00\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15302:15320  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15302:15306  auth */\n      dup3\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15302:15320  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15289:15320  emitEvent || auth != address(0) */\n    tag_273:\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15285:15756  if (emitEvent || auth != address(0)) {... */\n      iszero\n      tag_274\n      jumpi\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15337:15350  address owner */\n      0x00\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15353:15375  _requireOwned(tokenId) */\n      tag_275\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15367:15374  tokenId */\n      dup5\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15353:15366  _requireOwned */\n      tag_127\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15353:15375  _requireOwned(tokenId) */\n      jump\t// in\n    tag_275:\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15337:15375  address owner = _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15522:15523  0 */\n      0x00\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15506:15524  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15506:15510  auth */\n      dup4\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15506:15524  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15506:15541  auth != address(0) && owner != auth */\n      dup1\n      iszero\n      tag_276\n      jumpi\n      pop\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15537:15541  auth */\n      dup3\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15528:15541  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15528:15533  owner */\n      dup2\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15528:15541  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15506:15541  auth != address(0) && owner != auth */\n    tag_276:\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15506:15575  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n      dup1\n      iszero\n      tag_277\n      jumpi\n      pop\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15546:15575  isApprovedForAll(owner, auth) */\n      tag_278\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15563:15568  owner */\n      dup2\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15570:15574  auth */\n      dup5\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15546:15562  isApprovedForAll */\n      tag_108\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15546:15575  isApprovedForAll(owner, auth) */\n      jump\t// in\n    tag_278:\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15545:15575  !isApprovedForAll(owner, auth) */\n      iszero\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15506:15575  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n    tag_277:\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15502:15646  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n      iszero\n      tag_279\n      jumpi\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15625:15629  auth */\n      dup3\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15603:15630  ERC721InvalidApprover(auth) */\n      mload(0x40)\n      0xa9fbf51f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_280\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_280:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15502:15646  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n    tag_279:\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15666:15675  emitEvent */\n      dup2\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15662:15745  if (emitEvent) {... */\n      iszero\n      tag_281\n      jumpi\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15721:15728  tokenId */\n      dup4\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15717:15719  to */\n      dup6\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15701:15729  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15710:15715  owner */\n      dup3\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15701:15729  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15662:15745  if (emitEvent) {... */\n    tag_281:\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15322:15756  {... */\n      pop\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15285:15756  if (emitEvent || auth != address(0)) {... */\n    tag_274:\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15795:15797  to */\n      dup4\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15768:15783  _tokenApprovals */\n      0x04\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15768:15792  _tokenApprovals[tokenId] */\n      0x00\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15784:15791  tokenId */\n      dup6\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15768:15792  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15768:15797  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":15127:15805  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":7285:7661  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n    tag_222:\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":7398:7436  _isAuthorized(owner, spender, tokenId) */\n      tag_283\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":7412:7417  owner */\n      dup4\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":7419:7426  spender */\n      dup4\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":7428:7435  tokenId */\n      dup4\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":7398:7411  _isAuthorized */\n      tag_284\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":7398:7436  _isAuthorized(owner, spender, tokenId) */\n      jump\t// in\n    tag_283:\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":7393:7654  if (!_isAuthorized(owner, spender, tokenId)) {... */\n      tag_285\n      jumpi\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":7474:7475  0 */\n      0x00\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":7457:7476  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":7457:7462  owner */\n      dup4\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":7457:7476  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":7453:7643  if (owner == address(0)) {... */\n      tag_286\n      jumpi\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":7527:7534  tokenId */\n      dup1\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":7504:7535  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_287\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_287:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":7453:7643  if (owner == address(0)) {... */\n    tag_286:\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":7610:7617  spender */\n      dup2\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":7619:7626  tokenId */\n      dup2\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":7583:7627  ERC721InsufficientApproval(spender, tokenId) */\n      mload(0x40)\n      0x177e802f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_289\n      swap3\n      swap2\n      swap1\n      tag_290\n      jump\t// in\n    tag_289:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":7393:7654  if (!_isAuthorized(owner, spender, tokenId)) {... */\n    tag_285:\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":7285:7661  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin-contracts/contracts/utils/math/Math.sol\":12534:13482  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_260:\n        /* \"openzeppelin-contracts/contracts/utils/math/Math.sol\":12587:12594  uint256 */\n      0x00\n        /* \"openzeppelin-contracts/contracts/utils/math/Math.sol\":12607:12621  uint256 result */\n      dup1\n        /* \"openzeppelin-contracts/contracts/utils/math/Math.sol\":12624:12625  0 */\n      0x00\n        /* \"openzeppelin-contracts/contracts/utils/math/Math.sol\":12607:12625  uint256 result = 0 */\n      swap1\n      pop\n        /* \"openzeppelin-contracts/contracts/utils/math/Math.sol\":12674:12682  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"openzeppelin-contracts/contracts/utils/math/Math.sol\":12665:12670  value */\n      dup4\n        /* \"openzeppelin-contracts/contracts/utils/math/Math.sol\":12665:12682  value >= 10 ** 64 */\n      lt\n        /* \"openzeppelin-contracts/contracts/utils/math/Math.sol\":12661:12767  if (value >= 10 ** 64) {... */\n      tag_292\n      jumpi\n        /* \"openzeppelin-contracts/contracts/utils/math/Math.sol\":12712:12720  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"openzeppelin-contracts/contracts/utils/math/Math.sol\":12703:12720  value /= 10 ** 64 */\n      dup4\n      dup2\n      tag_293\n      jumpi\n      tag_294\n      tag_269\n      jump\t// in\n    tag_294:\n    tag_293:\n      div\n      swap3\n      pop\n        /* \"openzeppelin-contracts/contracts/utils/math/Math.sol\":12749:12751  64 */\n      0x40\n        /* \"openzeppelin-contracts/contracts/utils/math/Math.sol\":12739:12751  result += 64 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"openzeppelin-contracts/contracts/utils/math/Math.sol\":12661:12767  if (value >= 10 ** 64) {... */\n    tag_292:\n        /* \"openzeppelin-contracts/contracts/utils/math/Math.sol\":12794:12802  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"openzeppelin-contracts/contracts/utils/math/Math.sol\":12785:12790  value */\n      dup4\n        /* \"openzeppelin-contracts/contracts/utils/math/Math.sol\":12785:12802  value >= 10 ** 32 */\n      lt\n        /* \"openzeppelin-contracts/contracts/utils/math/Math.sol\":12781:12887  if (value >= 10 ** 32) {... */\n      tag_295\n      jumpi\n        /* \"openzeppelin-contracts/contracts/utils/math/Math.sol\":12832:12840  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"openzeppelin-contracts/contracts/utils/math/Math.sol\":12823:12840  value /= 10 ** 32 */\n      dup4\n      dup2\n      tag_296\n      jumpi\n      tag_297\n      tag_269\n      jump\t// in\n    tag_297:\n    tag_296:\n      div\n      swap3\n      pop\n        /* \"openzeppelin-contracts/contracts/utils/math/Math.sol\":12869:12871  32 */\n      0x20\n        /* \"openzeppelin-contracts/contracts/utils/math/Math.sol\":12859:12871  result += 32 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"openzeppelin-contracts/contracts/utils/math/Math.sol\":12781:12887  if (value >= 10 ** 32) {... */\n    tag_295:\n        /* \"openzeppelin-contracts/contracts/utils/math/Math.sol\":12914:12922  10 ** 16 */\n      0x2386f26fc10000\n        /* \"openzeppelin-contracts/contracts/utils/math/Math.sol\":12905:12910  value */\n      dup4\n        /* \"openzeppelin-contracts/contracts/utils/math/Math.sol\":12905:12922  value >= 10 ** 16 */\n      lt\n        /* \"openzeppelin-contracts/contracts/utils/math/Math.sol\":12901:13007  if (value >= 10 ** 16) {... */\n      tag_298\n      jumpi\n        /* \"openzeppelin-contracts/contracts/utils/math/Math.sol\":12952:12960  10 ** 16 */\n      0x2386f26fc10000\n        /* \"openzeppelin-contracts/contracts/utils/math/Math.sol\":12943:12960  value /= 10 ** 16 */\n      dup4\n      dup2\n      tag_299\n      jumpi\n      tag_300\n      tag_269\n      jump\t// in\n    tag_300:\n    tag_299:\n      div\n      swap3\n      pop\n        /* \"openzeppelin-contracts/contracts/utils/math/Math.sol\":12989:12991  16 */\n      0x10\n        /* \"openzeppelin-contracts/contracts/utils/math/Math.sol\":12979:12991  result += 16 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"openzeppelin-contracts/contracts/utils/math/Math.sol\":12901:13007  if (value >= 10 ** 16) {... */\n    tag_298:\n        /* \"openzeppelin-contracts/contracts/utils/math/Math.sol\":13034:13041  10 ** 8 */\n      0x05f5e100\n        /* \"openzeppelin-contracts/contracts/utils/math/Math.sol\":13025:13030  value */\n      dup4\n        /* \"openzeppelin-contracts/contracts/utils/math/Math.sol\":13025:13041  value >= 10 ** 8 */\n      lt\n        /* \"openzeppelin-contracts/contracts/utils/math/Math.sol\":13021:13124  if (value >= 10 ** 8) {... */\n      tag_301\n      jumpi\n        /* \"openzeppelin-contracts/contracts/utils/math/Math.sol\":13071:13078  10 ** 8 */\n      0x05f5e100\n        /* \"openzeppelin-contracts/contracts/utils/math/Math.sol\":13062:13078  value /= 10 ** 8 */\n      dup4\n      dup2\n      tag_302\n      jumpi\n      tag_303\n      tag_269\n      jump\t// in\n    tag_303:\n    tag_302:\n      div\n      swap3\n      pop\n        /* \"openzeppelin-contracts/contracts/utils/math/Math.sol\":13107:13108  8 */\n      0x08\n        /* \"openzeppelin-contracts/contracts/utils/math/Math.sol\":13097:13108  result += 8 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"openzeppelin-contracts/contracts/utils/math/Math.sol\":13021:13124  if (value >= 10 ** 8) {... */\n    tag_301:\n        /* \"openzeppelin-contracts/contracts/utils/math/Math.sol\":13151:13158  10 ** 4 */\n      0x2710\n        /* \"openzeppelin-contracts/contracts/utils/math/Math.sol\":13142:13147  value */\n      dup4\n        /* \"openzeppelin-contracts/contracts/utils/math/Math.sol\":13142:13158  value >= 10 ** 4 */\n      lt\n        /* \"openzeppelin-contracts/contracts/utils/math/Math.sol\":13138:13241  if (value >= 10 ** 4) {... */\n      tag_304\n      jumpi\n        /* \"openzeppelin-contracts/contracts/utils/math/Math.sol\":13188:13195  10 ** 4 */\n      0x2710\n        /* \"openzeppelin-contracts/contracts/utils/math/Math.sol\":13179:13195  value /= 10 ** 4 */\n      dup4\n      dup2\n      tag_305\n      jumpi\n      tag_306\n      tag_269\n      jump\t// in\n    tag_306:\n    tag_305:\n      div\n      swap3\n      pop\n        /* \"openzeppelin-contracts/contracts/utils/math/Math.sol\":13224:13225  4 */\n      0x04\n        /* \"openzeppelin-contracts/contracts/utils/math/Math.sol\":13214:13225  result += 4 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"openzeppelin-contracts/contracts/utils/math/Math.sol\":13138:13241  if (value >= 10 ** 4) {... */\n    tag_304:\n        /* \"openzeppelin-contracts/contracts/utils/math/Math.sol\":13268:13275  10 ** 2 */\n      0x64\n        /* \"openzeppelin-contracts/contracts/utils/math/Math.sol\":13259:13264  value */\n      dup4\n        /* \"openzeppelin-contracts/contracts/utils/math/Math.sol\":13259:13275  value >= 10 ** 2 */\n      lt\n        /* \"openzeppelin-contracts/contracts/utils/math/Math.sol\":13255:13358  if (value >= 10 ** 2) {... */\n      tag_307\n      jumpi\n        /* \"openzeppelin-contracts/contracts/utils/math/Math.sol\":13305:13312  10 ** 2 */\n      0x64\n        /* \"openzeppelin-contracts/contracts/utils/math/Math.sol\":13296:13312  value /= 10 ** 2 */\n      dup4\n      dup2\n      tag_308\n      jumpi\n      tag_309\n      tag_269\n      jump\t// in\n    tag_309:\n    tag_308:\n      div\n      swap3\n      pop\n        /* \"openzeppelin-contracts/contracts/utils/math/Math.sol\":13341:13342  2 */\n      0x02\n        /* \"openzeppelin-contracts/contracts/utils/math/Math.sol\":13331:13342  result += 2 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"openzeppelin-contracts/contracts/utils/math/Math.sol\":13255:13358  if (value >= 10 ** 2) {... */\n    tag_307:\n        /* \"openzeppelin-contracts/contracts/utils/math/Math.sol\":13385:13392  10 ** 1 */\n      0x0a\n        /* \"openzeppelin-contracts/contracts/utils/math/Math.sol\":13376:13381  value */\n      dup4\n        /* \"openzeppelin-contracts/contracts/utils/math/Math.sol\":13376:13392  value >= 10 ** 1 */\n      lt\n        /* \"openzeppelin-contracts/contracts/utils/math/Math.sol\":13372:13440  if (value >= 10 ** 1) {... */\n      tag_310\n      jumpi\n        /* \"openzeppelin-contracts/contracts/utils/math/Math.sol\":13423:13424  1 */\n      0x01\n        /* \"openzeppelin-contracts/contracts/utils/math/Math.sol\":13413:13424  result += 1 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"openzeppelin-contracts/contracts/utils/math/Math.sol\":13372:13440  if (value >= 10 ** 1) {... */\n    tag_310:\n        /* \"openzeppelin-contracts/contracts/utils/math/Math.sol\":13468:13474  result */\n      dup1\n        /* \"openzeppelin-contracts/contracts/utils/math/Math.sol\":13461:13474  return result */\n      swap2\n      pop\n      pop\n        /* \"openzeppelin-contracts/contracts/utils/math/Math.sol\":12534:13482  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6565:6841  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_284:\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6668:6672  bool */\n      0x00\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6724:6725  0 */\n      dup1\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6705:6726  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6705:6712  spender */\n      dup4\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6705:6726  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6705:6833  spender != address(0) &&... */\n      dup1\n      iszero\n      tag_312\n      jumpi\n      pop\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6753:6760  spender */\n      dup3\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6744:6760  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6744:6749  owner */\n      dup5\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6744:6760  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6744:6796  owner == spender || isApprovedForAll(owner, spender) */\n      dup1\n      tag_313\n      jumpi\n      pop\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6764:6796  isApprovedForAll(owner, spender) */\n      tag_314\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6781:6786  owner */\n      dup5\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6788:6795  spender */\n      dup5\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6764:6780  isApprovedForAll */\n      tag_108\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6764:6796  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_314:\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6744:6796  owner == spender || isApprovedForAll(owner, spender) */\n    tag_313:\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6744:6832  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n      dup1\n      tag_315\n      jumpi\n      pop\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6825:6832  spender */\n      dup3\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6800:6832  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6800:6821  _getApproved(tokenId) */\n      tag_316\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6813:6820  tokenId */\n      dup4\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6800:6812  _getApproved */\n      tag_129\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6800:6821  _getApproved(tokenId) */\n      jump\t// in\n    tag_316:\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6800:6832  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6744:6832  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n    tag_315:\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6705:6833  spender != address(0) &&... */\n    tag_312:\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6685:6833  return... */\n      swap1\n      pop\n        /* \"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":6565:6841  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_165:\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      iszero(iszero(0x00))\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_317:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_318:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_319:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_320:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_321:\n        /* \"#utility.yul\":561:584   */\n      tag_371\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_320\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_372\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_372:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_322:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_374\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_321\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_31:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_376\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_377\n      tag_318\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":833:952   */\n    tag_376:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_378\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_322\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_323:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_324:\n        /* \"#utility.yul\":1268:1289   */\n      tag_381\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_323\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_34:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_383\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_324\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_325:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_326:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:2044   */\n    tag_327:\n        /* \"#utility.yul\":1879:1880   */\n      0x00\n        /* \"#utility.yul\":1889:2002   */\n    tag_387:\n        /* \"#utility.yul\":1903:1909   */\n      dup4\n        /* \"#utility.yul\":1900:1901   */\n      dup2\n        /* \"#utility.yul\":1897:1910   */\n      lt\n        /* \"#utility.yul\":1889:2002   */\n      iszero\n      tag_389\n      jumpi\n        /* \"#utility.yul\":1988:1989   */\n      dup1\n        /* \"#utility.yul\":1983:1986   */\n      dup3\n        /* \"#utility.yul\":1979:1990   */\n      add\n        /* \"#utility.yul\":1973:1991   */\n      mload\n        /* \"#utility.yul\":1969:1970   */\n      dup2\n        /* \"#utility.yul\":1964:1967   */\n      dup5\n        /* \"#utility.yul\":1960:1971   */\n      add\n        /* \"#utility.yul\":1953:1992   */\n      mstore\n        /* \"#utility.yul\":1925:1927   */\n      0x20\n        /* \"#utility.yul\":1922:1923   */\n      dup2\n        /* \"#utility.yul\":1918:1928   */\n      add\n        /* \"#utility.yul\":1913:1928   */\n      swap1\n      pop\n        /* \"#utility.yul\":1889:2002   */\n      jump(tag_387)\n    tag_389:\n        /* \"#utility.yul\":2036:2037   */\n      0x00\n        /* \"#utility.yul\":2027:2033   */\n      dup5\n        /* \"#utility.yul\":2022:2025   */\n      dup5\n        /* \"#utility.yul\":2018:2034   */\n      add\n        /* \"#utility.yul\":2011:2038   */\n      mstore\n        /* \"#utility.yul\":1860:2044   */\n      pop\n        /* \"#utility.yul\":1798:2044   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2050:2152   */\n    tag_328:\n        /* \"#utility.yul\":2091:2097   */\n      0x00\n        /* \"#utility.yul\":2142:2144   */\n      0x1f\n        /* \"#utility.yul\":2138:2145   */\n      not\n        /* \"#utility.yul\":2133:2135   */\n      0x1f\n        /* \"#utility.yul\":2126:2131   */\n      dup4\n        /* \"#utility.yul\":2122:2136   */\n      add\n        /* \"#utility.yul\":2118:2146   */\n      and\n        /* \"#utility.yul\":2108:2146   */\n      swap1\n      pop\n        /* \"#utility.yul\":2050:2152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2158:2535   */\n    tag_329:\n        /* \"#utility.yul\":2246:2249   */\n      0x00\n        /* \"#utility.yul\":2274:2313   */\n      tag_392\n        /* \"#utility.yul\":2307:2312   */\n      dup3\n        /* \"#utility.yul\":2274:2313   */\n      tag_325\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":2329:2400   */\n      tag_393\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2388:2391   */\n      dup6\n        /* \"#utility.yul\":2329:2400   */\n      tag_326\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":2322:2400   */\n      swap4\n      pop\n        /* \"#utility.yul\":2409:2474   */\n      tag_394\n        /* \"#utility.yul\":2467:2473   */\n      dup2\n        /* \"#utility.yul\":2462:2465   */\n      dup6\n        /* \"#utility.yul\":2455:2459   */\n      0x20\n        /* \"#utility.yul\":2448:2453   */\n      dup7\n        /* \"#utility.yul\":2444:2460   */\n      add\n        /* \"#utility.yul\":2409:2474   */\n      tag_327\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":2499:2528   */\n      tag_395\n        /* \"#utility.yul\":2521:2527   */\n      dup2\n        /* \"#utility.yul\":2499:2528   */\n      tag_328\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":2494:2497   */\n      dup5\n        /* \"#utility.yul\":2490:2529   */\n      add\n        /* \"#utility.yul\":2483:2529   */\n      swap2\n      pop\n        /* \"#utility.yul\":2250:2535   */\n      pop\n        /* \"#utility.yul\":2158:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:2854   */\n    tag_38:\n        /* \"#utility.yul\":2654:2658   */\n      0x00\n        /* \"#utility.yul\":2692:2694   */\n      0x20\n        /* \"#utility.yul\":2681:2690   */\n      dup3\n        /* \"#utility.yul\":2677:2695   */\n      add\n        /* \"#utility.yul\":2669:2695   */\n      swap1\n      pop\n        /* \"#utility.yul\":2741:2750   */\n      dup2\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2731:2751   */\n      sub\n        /* \"#utility.yul\":2727:2728   */\n      0x00\n        /* \"#utility.yul\":2716:2725   */\n      dup4\n        /* \"#utility.yul\":2712:2729   */\n      add\n        /* \"#utility.yul\":2705:2752   */\n      mstore\n        /* \"#utility.yul\":2769:2847   */\n      tag_397\n        /* \"#utility.yul\":2842:2846   */\n      dup2\n        /* \"#utility.yul\":2833:2839   */\n      dup5\n        /* \"#utility.yul\":2769:2847   */\n      tag_329\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":2761:2847   */\n      swap1\n      pop\n        /* \"#utility.yul\":2541:2854   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2860:2937   */\n    tag_330:\n        /* \"#utility.yul\":2897:2904   */\n      0x00\n        /* \"#utility.yul\":2926:2931   */\n      dup2\n        /* \"#utility.yul\":2915:2931   */\n      swap1\n      pop\n        /* \"#utility.yul\":2860:2937   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2943:3065   */\n    tag_331:\n        /* \"#utility.yul\":3016:3040   */\n      tag_400\n        /* \"#utility.yul\":3034:3039   */\n      dup2\n        /* \"#utility.yul\":3016:3040   */\n      tag_330\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":3009:3014   */\n      dup2\n        /* \"#utility.yul\":3006:3041   */\n      eq\n        /* \"#utility.yul\":2996:3059   */\n      tag_401\n      jumpi\n        /* \"#utility.yul\":3055:3056   */\n      0x00\n        /* \"#utility.yul\":3052:3053   */\n      dup1\n        /* \"#utility.yul\":3045:3057   */\n      revert\n        /* \"#utility.yul\":2996:3059   */\n    tag_401:\n        /* \"#utility.yul\":2943:3065   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3071:3210   */\n    tag_332:\n        /* \"#utility.yul\":3117:3122   */\n      0x00\n        /* \"#utility.yul\":3155:3161   */\n      dup2\n        /* \"#utility.yul\":3142:3162   */\n      calldataload\n        /* \"#utility.yul\":3133:3162   */\n      swap1\n      pop\n        /* \"#utility.yul\":3171:3204   */\n      tag_403\n        /* \"#utility.yul\":3198:3203   */\n      dup2\n        /* \"#utility.yul\":3171:3204   */\n      tag_331\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":3071:3210   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3216:3545   */\n    tag_41:\n        /* \"#utility.yul\":3275:3281   */\n      0x00\n        /* \"#utility.yul\":3324:3326   */\n      0x20\n        /* \"#utility.yul\":3312:3321   */\n      dup3\n        /* \"#utility.yul\":3303:3310   */\n      dup5\n        /* \"#utility.yul\":3299:3322   */\n      sub\n        /* \"#utility.yul\":3295:3327   */\n      slt\n        /* \"#utility.yul\":3292:3411   */\n      iszero\n      tag_405\n      jumpi\n        /* \"#utility.yul\":3330:3409   */\n      tag_406\n      tag_318\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":3292:3411   */\n    tag_405:\n        /* \"#utility.yul\":3450:3451   */\n      0x00\n        /* \"#utility.yul\":3475:3528   */\n      tag_407\n        /* \"#utility.yul\":3520:3527   */\n      dup5\n        /* \"#utility.yul\":3511:3517   */\n      dup3\n        /* \"#utility.yul\":3500:3509   */\n      dup6\n        /* \"#utility.yul\":3496:3518   */\n      add\n        /* \"#utility.yul\":3475:3528   */\n      tag_332\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":3465:3528   */\n      swap2\n      pop\n        /* \"#utility.yul\":3421:3538   */\n      pop\n        /* \"#utility.yul\":3216:3545   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3551:3677   */\n    tag_333:\n        /* \"#utility.yul\":3588:3595   */\n      0x00\n        /* \"#utility.yul\":3628:3670   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3621:3626   */\n      dup3\n        /* \"#utility.yul\":3617:3671   */\n      and\n        /* \"#utility.yul\":3606:3671   */\n      swap1\n      pop\n        /* \"#utility.yul\":3551:3677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3683:3779   */\n    tag_334:\n        /* \"#utility.yul\":3720:3727   */\n      0x00\n        /* \"#utility.yul\":3749:3773   */\n      tag_410\n        /* \"#utility.yul\":3767:3772   */\n      dup3\n        /* \"#utility.yul\":3749:3773   */\n      tag_333\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":3738:3773   */\n      swap1\n      pop\n        /* \"#utility.yul\":3683:3779   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3785:3903   */\n    tag_335:\n        /* \"#utility.yul\":3872:3896   */\n      tag_412\n        /* \"#utility.yul\":3890:3895   */\n      dup2\n        /* \"#utility.yul\":3872:3896   */\n      tag_334\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":3867:3870   */\n      dup3\n        /* \"#utility.yul\":3860:3897   */\n      mstore\n        /* \"#utility.yul\":3785:3903   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3909:4131   */\n    tag_44:\n        /* \"#utility.yul\":4002:4006   */\n      0x00\n        /* \"#utility.yul\":4040:4042   */\n      0x20\n        /* \"#utility.yul\":4029:4038   */\n      dup3\n        /* \"#utility.yul\":4025:4043   */\n      add\n        /* \"#utility.yul\":4017:4043   */\n      swap1\n      pop\n        /* \"#utility.yul\":4053:4124   */\n      tag_414\n        /* \"#utility.yul\":4121:4122   */\n      0x00\n        /* \"#utility.yul\":4110:4119   */\n      dup4\n        /* \"#utility.yul\":4106:4123   */\n      add\n        /* \"#utility.yul\":4097:4103   */\n      dup5\n        /* \"#utility.yul\":4053:4124   */\n      tag_335\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":3909:4131   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4137:4259   */\n    tag_336:\n        /* \"#utility.yul\":4210:4234   */\n      tag_416\n        /* \"#utility.yul\":4228:4233   */\n      dup2\n        /* \"#utility.yul\":4210:4234   */\n      tag_334\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":4203:4208   */\n      dup2\n        /* \"#utility.yul\":4200:4235   */\n      eq\n        /* \"#utility.yul\":4190:4253   */\n      tag_417\n      jumpi\n        /* \"#utility.yul\":4249:4250   */\n      0x00\n        /* \"#utility.yul\":4246:4247   */\n      dup1\n        /* \"#utility.yul\":4239:4251   */\n      revert\n        /* \"#utility.yul\":4190:4253   */\n    tag_417:\n        /* \"#utility.yul\":4137:4259   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4265:4404   */\n    tag_337:\n        /* \"#utility.yul\":4311:4316   */\n      0x00\n        /* \"#utility.yul\":4349:4355   */\n      dup2\n        /* \"#utility.yul\":4336:4356   */\n      calldataload\n        /* \"#utility.yul\":4327:4356   */\n      swap1\n      pop\n        /* \"#utility.yul\":4365:4398   */\n      tag_419\n        /* \"#utility.yul\":4392:4397   */\n      dup2\n        /* \"#utility.yul\":4365:4398   */\n      tag_336\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":4265:4404   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4410:4884   */\n    tag_47:\n        /* \"#utility.yul\":4478:4484   */\n      0x00\n        /* \"#utility.yul\":4486:4492   */\n      dup1\n        /* \"#utility.yul\":4535:4537   */\n      0x40\n        /* \"#utility.yul\":4523:4532   */\n      dup4\n        /* \"#utility.yul\":4514:4521   */\n      dup6\n        /* \"#utility.yul\":4510:4533   */\n      sub\n        /* \"#utility.yul\":4506:4538   */\n      slt\n        /* \"#utility.yul\":4503:4622   */\n      iszero\n      tag_421\n      jumpi\n        /* \"#utility.yul\":4541:4620   */\n      tag_422\n      tag_318\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":4503:4622   */\n    tag_421:\n        /* \"#utility.yul\":4661:4662   */\n      0x00\n        /* \"#utility.yul\":4686:4739   */\n      tag_423\n        /* \"#utility.yul\":4731:4738   */\n      dup6\n        /* \"#utility.yul\":4722:4728   */\n      dup3\n        /* \"#utility.yul\":4711:4720   */\n      dup7\n        /* \"#utility.yul\":4707:4729   */\n      add\n        /* \"#utility.yul\":4686:4739   */\n      tag_337\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":4676:4739   */\n      swap3\n      pop\n        /* \"#utility.yul\":4632:4749   */\n      pop\n        /* \"#utility.yul\":4788:4790   */\n      0x20\n        /* \"#utility.yul\":4814:4867   */\n      tag_424\n        /* \"#utility.yul\":4859:4866   */\n      dup6\n        /* \"#utility.yul\":4850:4856   */\n      dup3\n        /* \"#utility.yul\":4839:4848   */\n      dup7\n        /* \"#utility.yul\":4835:4857   */\n      add\n        /* \"#utility.yul\":4814:4867   */\n      tag_332\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":4804:4867   */\n      swap2\n      pop\n        /* \"#utility.yul\":4759:4877   */\n      pop\n        /* \"#utility.yul\":4410:4884   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4890:5509   */\n    tag_51:\n        /* \"#utility.yul\":4967:4973   */\n      0x00\n        /* \"#utility.yul\":4975:4981   */\n      dup1\n        /* \"#utility.yul\":4983:4989   */\n      0x00\n        /* \"#utility.yul\":5032:5034   */\n      0x60\n        /* \"#utility.yul\":5020:5029   */\n      dup5\n        /* \"#utility.yul\":5011:5018   */\n      dup7\n        /* \"#utility.yul\":5007:5030   */\n      sub\n        /* \"#utility.yul\":5003:5035   */\n      slt\n        /* \"#utility.yul\":5000:5119   */\n      iszero\n      tag_426\n      jumpi\n        /* \"#utility.yul\":5038:5117   */\n      tag_427\n      tag_318\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":5000:5119   */\n    tag_426:\n        /* \"#utility.yul\":5158:5159   */\n      0x00\n        /* \"#utility.yul\":5183:5236   */\n      tag_428\n        /* \"#utility.yul\":5228:5235   */\n      dup7\n        /* \"#utility.yul\":5219:5225   */\n      dup3\n        /* \"#utility.yul\":5208:5217   */\n      dup8\n        /* \"#utility.yul\":5204:5226   */\n      add\n        /* \"#utility.yul\":5183:5236   */\n      tag_337\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":5173:5236   */\n      swap4\n      pop\n        /* \"#utility.yul\":5129:5246   */\n      pop\n        /* \"#utility.yul\":5285:5287   */\n      0x20\n        /* \"#utility.yul\":5311:5364   */\n      tag_429\n        /* \"#utility.yul\":5356:5363   */\n      dup7\n        /* \"#utility.yul\":5347:5353   */\n      dup3\n        /* \"#utility.yul\":5336:5345   */\n      dup8\n        /* \"#utility.yul\":5332:5354   */\n      add\n        /* \"#utility.yul\":5311:5364   */\n      tag_337\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":5301:5364   */\n      swap3\n      pop\n        /* \"#utility.yul\":5256:5374   */\n      pop\n        /* \"#utility.yul\":5413:5415   */\n      0x40\n        /* \"#utility.yul\":5439:5492   */\n      tag_430\n        /* \"#utility.yul\":5484:5491   */\n      dup7\n        /* \"#utility.yul\":5475:5481   */\n      dup3\n        /* \"#utility.yul\":5464:5473   */\n      dup8\n        /* \"#utility.yul\":5460:5482   */\n      add\n        /* \"#utility.yul\":5439:5492   */\n      tag_332\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":5429:5492   */\n      swap2\n      pop\n        /* \"#utility.yul\":5384:5502   */\n      pop\n        /* \"#utility.yul\":4890:5509   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5515:5844   */\n    tag_66:\n        /* \"#utility.yul\":5574:5580   */\n      0x00\n        /* \"#utility.yul\":5623:5625   */\n      0x20\n        /* \"#utility.yul\":5611:5620   */\n      dup3\n        /* \"#utility.yul\":5602:5609   */\n      dup5\n        /* \"#utility.yul\":5598:5621   */\n      sub\n        /* \"#utility.yul\":5594:5626   */\n      slt\n        /* \"#utility.yul\":5591:5710   */\n      iszero\n      tag_432\n      jumpi\n        /* \"#utility.yul\":5629:5708   */\n      tag_433\n      tag_318\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":5591:5710   */\n    tag_432:\n        /* \"#utility.yul\":5749:5750   */\n      0x00\n        /* \"#utility.yul\":5774:5827   */\n      tag_434\n        /* \"#utility.yul\":5819:5826   */\n      dup5\n        /* \"#utility.yul\":5810:5816   */\n      dup3\n        /* \"#utility.yul\":5799:5808   */\n      dup6\n        /* \"#utility.yul\":5795:5817   */\n      add\n        /* \"#utility.yul\":5774:5827   */\n      tag_337\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":5764:5827   */\n      swap2\n      pop\n        /* \"#utility.yul\":5720:5837   */\n      pop\n        /* \"#utility.yul\":5515:5844   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5850:5968   */\n    tag_338:\n        /* \"#utility.yul\":5937:5961   */\n      tag_436\n        /* \"#utility.yul\":5955:5960   */\n      dup2\n        /* \"#utility.yul\":5937:5961   */\n      tag_330\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":5932:5935   */\n      dup3\n        /* \"#utility.yul\":5925:5962   */\n      mstore\n        /* \"#utility.yul\":5850:5968   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5974:6196   */\n    tag_69:\n        /* \"#utility.yul\":6067:6071   */\n      0x00\n        /* \"#utility.yul\":6105:6107   */\n      0x20\n        /* \"#utility.yul\":6094:6103   */\n      dup3\n        /* \"#utility.yul\":6090:6108   */\n      add\n        /* \"#utility.yul\":6082:6108   */\n      swap1\n      pop\n        /* \"#utility.yul\":6118:6189   */\n      tag_438\n        /* \"#utility.yul\":6186:6187   */\n      0x00\n        /* \"#utility.yul\":6175:6184   */\n      dup4\n        /* \"#utility.yul\":6171:6188   */\n      add\n        /* \"#utility.yul\":6162:6168   */\n      dup5\n        /* \"#utility.yul\":6118:6189   */\n      tag_338\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":5974:6196   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6202:6310   */\n    tag_339:\n        /* \"#utility.yul\":6279:6303   */\n      tag_440\n        /* \"#utility.yul\":6297:6302   */\n      dup2\n        /* \"#utility.yul\":6279:6303   */\n      tag_334\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":6274:6277   */\n      dup3\n        /* \"#utility.yul\":6267:6304   */\n      mstore\n        /* \"#utility.yul\":6202:6310   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6316:6376   */\n    tag_340:\n        /* \"#utility.yul\":6344:6347   */\n      0x00\n        /* \"#utility.yul\":6365:6370   */\n      dup2\n        /* \"#utility.yul\":6358:6370   */\n      swap1\n      pop\n        /* \"#utility.yul\":6316:6376   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6382:6524   */\n    tag_341:\n        /* \"#utility.yul\":6432:6441   */\n      0x00\n        /* \"#utility.yul\":6465:6518   */\n      tag_443\n        /* \"#utility.yul\":6483:6517   */\n      tag_444\n        /* \"#utility.yul\":6492:6516   */\n      tag_445\n        /* \"#utility.yul\":6510:6515   */\n      dup5\n        /* \"#utility.yul\":6492:6516   */\n      tag_333\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":6483:6517   */\n      tag_340\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":6465:6518   */\n      tag_333\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":6452:6518   */\n      swap1\n      pop\n        /* \"#utility.yul\":6382:6524   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6530:6656   */\n    tag_342:\n        /* \"#utility.yul\":6580:6589   */\n      0x00\n        /* \"#utility.yul\":6613:6650   */\n      tag_447\n        /* \"#utility.yul\":6644:6649   */\n      dup3\n        /* \"#utility.yul\":6613:6650   */\n      tag_341\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":6600:6650   */\n      swap1\n      pop\n        /* \"#utility.yul\":6530:6656   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6662:6802   */\n    tag_343:\n        /* \"#utility.yul\":6726:6735   */\n      0x00\n        /* \"#utility.yul\":6759:6796   */\n      tag_449\n        /* \"#utility.yul\":6790:6795   */\n      dup3\n        /* \"#utility.yul\":6759:6796   */\n      tag_342\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":6746:6796   */\n      swap1\n      pop\n        /* \"#utility.yul\":6662:6802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6808:6957   */\n    tag_344:\n        /* \"#utility.yul\":6899:6950   */\n      tag_451\n        /* \"#utility.yul\":6944:6949   */\n      dup2\n        /* \"#utility.yul\":6899:6950   */\n      tag_343\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":6894:6897   */\n      dup3\n        /* \"#utility.yul\":6887:6951   */\n      mstore\n        /* \"#utility.yul\":6808:6957   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6963:7071   */\n    tag_345:\n        /* \"#utility.yul\":7040:7064   */\n      tag_453\n        /* \"#utility.yul\":7058:7063   */\n      dup2\n        /* \"#utility.yul\":7040:7064   */\n      tag_330\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":7035:7038   */\n      dup3\n        /* \"#utility.yul\":7028:7065   */\n      mstore\n        /* \"#utility.yul\":6963:7071   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7077:7176   */\n    tag_346:\n        /* \"#utility.yul\":7148:7169   */\n      tag_455\n        /* \"#utility.yul\":7163:7168   */\n      dup2\n        /* \"#utility.yul\":7148:7169   */\n      tag_323\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":7143:7146   */\n      dup3\n        /* \"#utility.yul\":7136:7170   */\n      mstore\n        /* \"#utility.yul\":7077:7176   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7226:8103   */\n    tag_347:\n        /* \"#utility.yul\":7375:7379   */\n      0x80\n        /* \"#utility.yul\":7370:7373   */\n      dup3\n        /* \"#utility.yul\":7366:7380   */\n      add\n        /* \"#utility.yul\":7470:7474   */\n      0x00\n        /* \"#utility.yul\":7463:7468   */\n      dup3\n        /* \"#utility.yul\":7459:7475   */\n      add\n        /* \"#utility.yul\":7453:7476   */\n      mload\n        /* \"#utility.yul\":7489:7552   */\n      tag_457\n        /* \"#utility.yul\":7546:7550   */\n      0x00\n        /* \"#utility.yul\":7541:7544   */\n      dup6\n        /* \"#utility.yul\":7537:7551   */\n      add\n        /* \"#utility.yul\":7523:7535   */\n      dup3\n        /* \"#utility.yul\":7489:7552   */\n      tag_339\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":7390:7562   */\n      pop\n        /* \"#utility.yul\":7645:7649   */\n      0x20\n        /* \"#utility.yul\":7638:7643   */\n      dup3\n        /* \"#utility.yul\":7634:7650   */\n      add\n        /* \"#utility.yul\":7628:7651   */\n      mload\n        /* \"#utility.yul\":7664:7741   */\n      tag_458\n        /* \"#utility.yul\":7735:7739   */\n      0x20\n        /* \"#utility.yul\":7730:7733   */\n      dup6\n        /* \"#utility.yul\":7726:7740   */\n      add\n        /* \"#utility.yul\":7712:7724   */\n      dup3\n        /* \"#utility.yul\":7664:7741   */\n      tag_344\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":7572:7751   */\n      pop\n        /* \"#utility.yul\":7834:7838   */\n      0x40\n        /* \"#utility.yul\":7827:7832   */\n      dup3\n        /* \"#utility.yul\":7823:7839   */\n      add\n        /* \"#utility.yul\":7817:7840   */\n      mload\n        /* \"#utility.yul\":7853:7916   */\n      tag_459\n        /* \"#utility.yul\":7910:7914   */\n      0x40\n        /* \"#utility.yul\":7905:7908   */\n      dup6\n        /* \"#utility.yul\":7901:7915   */\n      add\n        /* \"#utility.yul\":7887:7899   */\n      dup3\n        /* \"#utility.yul\":7853:7916   */\n      tag_345\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":7761:7926   */\n      pop\n        /* \"#utility.yul\":8010:8014   */\n      0x60\n        /* \"#utility.yul\":8003:8008   */\n      dup3\n        /* \"#utility.yul\":7999:8015   */\n      add\n        /* \"#utility.yul\":7993:8016   */\n      mload\n        /* \"#utility.yul\":8029:8086   */\n      tag_460\n        /* \"#utility.yul\":8080:8084   */\n      0x60\n        /* \"#utility.yul\":8075:8078   */\n      dup6\n        /* \"#utility.yul\":8071:8085   */\n      add\n        /* \"#utility.yul\":8057:8069   */\n      dup3\n        /* \"#utility.yul\":8029:8086   */\n      tag_346\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":7936:8096   */\n      pop\n        /* \"#utility.yul\":7344:8103   */\n      pop\n        /* \"#utility.yul\":7226:8103   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8109:8436   */\n    tag_75:\n        /* \"#utility.yul\":8254:8258   */\n      0x00\n        /* \"#utility.yul\":8292:8295   */\n      0x80\n        /* \"#utility.yul\":8281:8290   */\n      dup3\n        /* \"#utility.yul\":8277:8296   */\n      add\n        /* \"#utility.yul\":8269:8296   */\n      swap1\n      pop\n        /* \"#utility.yul\":8306:8429   */\n      tag_462\n        /* \"#utility.yul\":8426:8427   */\n      0x00\n        /* \"#utility.yul\":8415:8424   */\n      dup4\n        /* \"#utility.yul\":8411:8428   */\n      add\n        /* \"#utility.yul\":8402:8408   */\n      dup5\n        /* \"#utility.yul\":8306:8429   */\n      tag_347\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":8109:8436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8442:8558   */\n    tag_348:\n        /* \"#utility.yul\":8512:8533   */\n      tag_464\n        /* \"#utility.yul\":8527:8532   */\n      dup2\n        /* \"#utility.yul\":8512:8533   */\n      tag_323\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":8505:8510   */\n      dup2\n        /* \"#utility.yul\":8502:8534   */\n      eq\n        /* \"#utility.yul\":8492:8552   */\n      tag_465\n      jumpi\n        /* \"#utility.yul\":8548:8549   */\n      0x00\n        /* \"#utility.yul\":8545:8546   */\n      dup1\n        /* \"#utility.yul\":8538:8550   */\n      revert\n        /* \"#utility.yul\":8492:8552   */\n    tag_465:\n        /* \"#utility.yul\":8442:8558   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8564:8697   */\n    tag_349:\n        /* \"#utility.yul\":8607:8612   */\n      0x00\n        /* \"#utility.yul\":8645:8651   */\n      dup2\n        /* \"#utility.yul\":8632:8652   */\n      calldataload\n        /* \"#utility.yul\":8623:8652   */\n      swap1\n      pop\n        /* \"#utility.yul\":8661:8691   */\n      tag_467\n        /* \"#utility.yul\":8685:8690   */\n      dup2\n        /* \"#utility.yul\":8661:8691   */\n      tag_348\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":8564:8697   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8703:9171   */\n    tag_95:\n        /* \"#utility.yul\":8768:8774   */\n      0x00\n        /* \"#utility.yul\":8776:8782   */\n      dup1\n        /* \"#utility.yul\":8825:8827   */\n      0x40\n        /* \"#utility.yul\":8813:8822   */\n      dup4\n        /* \"#utility.yul\":8804:8811   */\n      dup6\n        /* \"#utility.yul\":8800:8823   */\n      sub\n        /* \"#utility.yul\":8796:8828   */\n      slt\n        /* \"#utility.yul\":8793:8912   */\n      iszero\n      tag_469\n      jumpi\n        /* \"#utility.yul\":8831:8910   */\n      tag_470\n      tag_318\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":8793:8912   */\n    tag_469:\n        /* \"#utility.yul\":8951:8952   */\n      0x00\n        /* \"#utility.yul\":8976:9029   */\n      tag_471\n        /* \"#utility.yul\":9021:9028   */\n      dup6\n        /* \"#utility.yul\":9012:9018   */\n      dup3\n        /* \"#utility.yul\":9001:9010   */\n      dup7\n        /* \"#utility.yul\":8997:9019   */\n      add\n        /* \"#utility.yul\":8976:9029   */\n      tag_337\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":8966:9029   */\n      swap3\n      pop\n        /* \"#utility.yul\":8922:9039   */\n      pop\n        /* \"#utility.yul\":9078:9080   */\n      0x20\n        /* \"#utility.yul\":9104:9154   */\n      tag_472\n        /* \"#utility.yul\":9146:9153   */\n      dup6\n        /* \"#utility.yul\":9137:9143   */\n      dup3\n        /* \"#utility.yul\":9126:9135   */\n      dup7\n        /* \"#utility.yul\":9122:9144   */\n      add\n        /* \"#utility.yul\":9104:9154   */\n      tag_349\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":9094:9154   */\n      swap2\n      pop\n        /* \"#utility.yul\":9049:9164   */\n      pop\n        /* \"#utility.yul\":8703:9171   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9177:9294   */\n    tag_350:\n        /* \"#utility.yul\":9286:9287   */\n      0x00\n        /* \"#utility.yul\":9283:9284   */\n      dup1\n        /* \"#utility.yul\":9276:9288   */\n      revert\n        /* \"#utility.yul\":9300:9417   */\n    tag_351:\n        /* \"#utility.yul\":9409:9410   */\n      0x00\n        /* \"#utility.yul\":9406:9407   */\n      dup1\n        /* \"#utility.yul\":9399:9411   */\n      revert\n        /* \"#utility.yul\":9423:9603   */\n    tag_263:\n        /* \"#utility.yul\":9471:9548   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9468:9469   */\n      0x00\n        /* \"#utility.yul\":9461:9549   */\n      mstore\n        /* \"#utility.yul\":9568:9572   */\n      0x41\n        /* \"#utility.yul\":9565:9566   */\n      0x04\n        /* \"#utility.yul\":9558:9573   */\n      mstore\n        /* \"#utility.yul\":9592:9596   */\n      0x24\n        /* \"#utility.yul\":9589:9590   */\n      0x00\n        /* \"#utility.yul\":9582:9597   */\n      revert\n        /* \"#utility.yul\":9609:9890   */\n    tag_352:\n        /* \"#utility.yul\":9692:9719   */\n      tag_477\n        /* \"#utility.yul\":9714:9718   */\n      dup3\n        /* \"#utility.yul\":9692:9719   */\n      tag_328\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":9684:9690   */\n      dup2\n        /* \"#utility.yul\":9680:9720   */\n      add\n        /* \"#utility.yul\":9822:9828   */\n      dup2\n        /* \"#utility.yul\":9810:9820   */\n      dup2\n        /* \"#utility.yul\":9807:9829   */\n      lt\n        /* \"#utility.yul\":9786:9804   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9774:9784   */\n      dup3\n        /* \"#utility.yul\":9771:9805   */\n      gt\n        /* \"#utility.yul\":9768:9830   */\n      or\n        /* \"#utility.yul\":9765:9853   */\n      iszero\n      tag_478\n      jumpi\n        /* \"#utility.yul\":9833:9851   */\n      tag_479\n      tag_263\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":9765:9853   */\n    tag_478:\n        /* \"#utility.yul\":9873:9883   */\n      dup1\n        /* \"#utility.yul\":9869:9871   */\n      0x40\n        /* \"#utility.yul\":9862:9884   */\n      mstore\n        /* \"#utility.yul\":9652:9890   */\n      pop\n        /* \"#utility.yul\":9609:9890   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9896:10025   */\n    tag_353:\n        /* \"#utility.yul\":9930:9936   */\n      0x00\n        /* \"#utility.yul\":9957:9977   */\n      tag_481\n      tag_317\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":9947:9977   */\n      swap1\n      pop\n        /* \"#utility.yul\":9986:10019   */\n      tag_482\n        /* \"#utility.yul\":10014:10018   */\n      dup3\n        /* \"#utility.yul\":10006:10012   */\n      dup3\n        /* \"#utility.yul\":9986:10019   */\n      tag_352\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":9896:10025   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10031:10338   */\n    tag_354:\n        /* \"#utility.yul\":10092:10096   */\n      0x00\n        /* \"#utility.yul\":10182:10200   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10174:10180   */\n      dup3\n        /* \"#utility.yul\":10171:10201   */\n      gt\n        /* \"#utility.yul\":10168:10224   */\n      iszero\n      tag_484\n      jumpi\n        /* \"#utility.yul\":10204:10222   */\n      tag_485\n      tag_263\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":10168:10224   */\n    tag_484:\n        /* \"#utility.yul\":10242:10271   */\n      tag_486\n        /* \"#utility.yul\":10264:10270   */\n      dup3\n        /* \"#utility.yul\":10242:10271   */\n      tag_328\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":10234:10271   */\n      swap1\n      pop\n        /* \"#utility.yul\":10326:10330   */\n      0x20\n        /* \"#utility.yul\":10320:10324   */\n      dup2\n        /* \"#utility.yul\":10316:10331   */\n      add\n        /* \"#utility.yul\":10308:10331   */\n      swap1\n      pop\n        /* \"#utility.yul\":10031:10338   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10344:10490   */\n    tag_355:\n        /* \"#utility.yul\":10441:10447   */\n      dup3\n        /* \"#utility.yul\":10436:10439   */\n      dup2\n        /* \"#utility.yul\":10431:10434   */\n      dup4\n        /* \"#utility.yul\":10418:10448   */\n      calldatacopy\n        /* \"#utility.yul\":10482:10483   */\n      0x00\n        /* \"#utility.yul\":10473:10479   */\n      dup4\n        /* \"#utility.yul\":10468:10471   */\n      dup4\n        /* \"#utility.yul\":10464:10480   */\n      add\n        /* \"#utility.yul\":10457:10484   */\n      mstore\n        /* \"#utility.yul\":10344:10490   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10496:10919   */\n    tag_356:\n        /* \"#utility.yul\":10573:10578   */\n      0x00\n        /* \"#utility.yul\":10598:10663   */\n      tag_489\n        /* \"#utility.yul\":10614:10662   */\n      tag_490\n        /* \"#utility.yul\":10655:10661   */\n      dup5\n        /* \"#utility.yul\":10614:10662   */\n      tag_354\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":10598:10663   */\n      tag_353\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":10589:10663   */\n      swap1\n      pop\n        /* \"#utility.yul\":10686:10692   */\n      dup3\n        /* \"#utility.yul\":10679:10684   */\n      dup2\n        /* \"#utility.yul\":10672:10693   */\n      mstore\n        /* \"#utility.yul\":10724:10728   */\n      0x20\n        /* \"#utility.yul\":10717:10722   */\n      dup2\n        /* \"#utility.yul\":10713:10729   */\n      add\n        /* \"#utility.yul\":10762:10765   */\n      dup5\n        /* \"#utility.yul\":10753:10759   */\n      dup5\n        /* \"#utility.yul\":10748:10751   */\n      dup5\n        /* \"#utility.yul\":10744:10760   */\n      add\n        /* \"#utility.yul\":10741:10766   */\n      gt\n        /* \"#utility.yul\":10738:10850   */\n      iszero\n      tag_491\n      jumpi\n        /* \"#utility.yul\":10769:10848   */\n      tag_492\n      tag_351\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":10738:10850   */\n    tag_491:\n        /* \"#utility.yul\":10859:10913   */\n      tag_493\n        /* \"#utility.yul\":10906:10912   */\n      dup5\n        /* \"#utility.yul\":10901:10904   */\n      dup3\n        /* \"#utility.yul\":10896:10899   */\n      dup6\n        /* \"#utility.yul\":10859:10913   */\n      tag_355\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":10579:10919   */\n      pop\n        /* \"#utility.yul\":10496:10919   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10938:11276   */\n    tag_357:\n        /* \"#utility.yul\":10993:10998   */\n      0x00\n        /* \"#utility.yul\":11042:11045   */\n      dup3\n        /* \"#utility.yul\":11035:11039   */\n      0x1f\n        /* \"#utility.yul\":11027:11033   */\n      dup4\n        /* \"#utility.yul\":11023:11040   */\n      add\n        /* \"#utility.yul\":11019:11046   */\n      slt\n        /* \"#utility.yul\":11009:11131   */\n      tag_495\n      jumpi\n        /* \"#utility.yul\":11050:11129   */\n      tag_496\n      tag_350\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":11009:11131   */\n    tag_495:\n        /* \"#utility.yul\":11167:11173   */\n      dup2\n        /* \"#utility.yul\":11154:11174   */\n      calldataload\n        /* \"#utility.yul\":11192:11270   */\n      tag_497\n        /* \"#utility.yul\":11266:11269   */\n      dup5\n        /* \"#utility.yul\":11258:11264   */\n      dup3\n        /* \"#utility.yul\":11251:11255   */\n      0x20\n        /* \"#utility.yul\":11243:11249   */\n      dup7\n        /* \"#utility.yul\":11239:11256   */\n      add\n        /* \"#utility.yul\":11192:11270   */\n      tag_356\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":11183:11270   */\n      swap2\n      pop\n        /* \"#utility.yul\":10999:11276   */\n      pop\n        /* \"#utility.yul\":10938:11276   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11282:12225   */\n    tag_99:\n        /* \"#utility.yul\":11377:11383   */\n      0x00\n        /* \"#utility.yul\":11385:11391   */\n      dup1\n        /* \"#utility.yul\":11393:11399   */\n      0x00\n        /* \"#utility.yul\":11401:11407   */\n      dup1\n        /* \"#utility.yul\":11450:11453   */\n      0x80\n        /* \"#utility.yul\":11438:11447   */\n      dup6\n        /* \"#utility.yul\":11429:11436   */\n      dup8\n        /* \"#utility.yul\":11425:11448   */\n      sub\n        /* \"#utility.yul\":11421:11454   */\n      slt\n        /* \"#utility.yul\":11418:11538   */\n      iszero\n      tag_499\n      jumpi\n        /* \"#utility.yul\":11457:11536   */\n      tag_500\n      tag_318\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":11418:11538   */\n    tag_499:\n        /* \"#utility.yul\":11577:11578   */\n      0x00\n        /* \"#utility.yul\":11602:11655   */\n      tag_501\n        /* \"#utility.yul\":11647:11654   */\n      dup8\n        /* \"#utility.yul\":11638:11644   */\n      dup3\n        /* \"#utility.yul\":11627:11636   */\n      dup9\n        /* \"#utility.yul\":11623:11645   */\n      add\n        /* \"#utility.yul\":11602:11655   */\n      tag_337\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":11592:11655   */\n      swap5\n      pop\n        /* \"#utility.yul\":11548:11665   */\n      pop\n        /* \"#utility.yul\":11704:11706   */\n      0x20\n        /* \"#utility.yul\":11730:11783   */\n      tag_502\n        /* \"#utility.yul\":11775:11782   */\n      dup8\n        /* \"#utility.yul\":11766:11772   */\n      dup3\n        /* \"#utility.yul\":11755:11764   */\n      dup9\n        /* \"#utility.yul\":11751:11773   */\n      add\n        /* \"#utility.yul\":11730:11783   */\n      tag_337\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":11720:11783   */\n      swap4\n      pop\n        /* \"#utility.yul\":11675:11793   */\n      pop\n        /* \"#utility.yul\":11832:11834   */\n      0x40\n        /* \"#utility.yul\":11858:11911   */\n      tag_503\n        /* \"#utility.yul\":11903:11910   */\n      dup8\n        /* \"#utility.yul\":11894:11900   */\n      dup3\n        /* \"#utility.yul\":11883:11892   */\n      dup9\n        /* \"#utility.yul\":11879:11901   */\n      add\n        /* \"#utility.yul\":11858:11911   */\n      tag_332\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":11848:11911   */\n      swap3\n      pop\n        /* \"#utility.yul\":11803:11921   */\n      pop\n        /* \"#utility.yul\":11988:11990   */\n      0x60\n        /* \"#utility.yul\":11977:11986   */\n      dup6\n        /* \"#utility.yul\":11973:11991   */\n      add\n        /* \"#utility.yul\":11960:11992   */\n      calldataload\n        /* \"#utility.yul\":12019:12037   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12011:12017   */\n      dup2\n        /* \"#utility.yul\":12008:12038   */\n      gt\n        /* \"#utility.yul\":12005:12122   */\n      iszero\n      tag_504\n      jumpi\n        /* \"#utility.yul\":12041:12120   */\n      tag_505\n      tag_319\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":12005:12122   */\n    tag_504:\n        /* \"#utility.yul\":12146:12208   */\n      tag_506\n        /* \"#utility.yul\":12200:12207   */\n      dup8\n        /* \"#utility.yul\":12191:12197   */\n      dup3\n        /* \"#utility.yul\":12180:12189   */\n      dup9\n        /* \"#utility.yul\":12176:12198   */\n      add\n        /* \"#utility.yul\":12146:12208   */\n      tag_357\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":12136:12208   */\n      swap2\n      pop\n        /* \"#utility.yul\":11931:12218   */\n      pop\n        /* \"#utility.yul\":11282:12225   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12231:12705   */\n    tag_107:\n        /* \"#utility.yul\":12299:12305   */\n      0x00\n        /* \"#utility.yul\":12307:12313   */\n      dup1\n        /* \"#utility.yul\":12356:12358   */\n      0x40\n        /* \"#utility.yul\":12344:12353   */\n      dup4\n        /* \"#utility.yul\":12335:12342   */\n      dup6\n        /* \"#utility.yul\":12331:12354   */\n      sub\n        /* \"#utility.yul\":12327:12359   */\n      slt\n        /* \"#utility.yul\":12324:12443   */\n      iszero\n      tag_508\n      jumpi\n        /* \"#utility.yul\":12362:12441   */\n      tag_509\n      tag_318\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":12324:12443   */\n    tag_508:\n        /* \"#utility.yul\":12482:12483   */\n      0x00\n        /* \"#utility.yul\":12507:12560   */\n      tag_510\n        /* \"#utility.yul\":12552:12559   */\n      dup6\n        /* \"#utility.yul\":12543:12549   */\n      dup3\n        /* \"#utility.yul\":12532:12541   */\n      dup7\n        /* \"#utility.yul\":12528:12550   */\n      add\n        /* \"#utility.yul\":12507:12560   */\n      tag_337\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":12497:12560   */\n      swap3\n      pop\n        /* \"#utility.yul\":12453:12570   */\n      pop\n        /* \"#utility.yul\":12609:12611   */\n      0x20\n        /* \"#utility.yul\":12635:12688   */\n      tag_511\n        /* \"#utility.yul\":12680:12687   */\n      dup6\n        /* \"#utility.yul\":12671:12677   */\n      dup3\n        /* \"#utility.yul\":12660:12669   */\n      dup7\n        /* \"#utility.yul\":12656:12678   */\n      add\n        /* \"#utility.yul\":12635:12688   */\n      tag_337\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":12625:12688   */\n      swap2\n      pop\n        /* \"#utility.yul\":12580:12698   */\n      pop\n        /* \"#utility.yul\":12231:12705   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12711:12891   */\n    tag_358:\n        /* \"#utility.yul\":12759:12836   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12756:12757   */\n      0x00\n        /* \"#utility.yul\":12749:12837   */\n      mstore\n        /* \"#utility.yul\":12856:12860   */\n      0x22\n        /* \"#utility.yul\":12853:12854   */\n      0x04\n        /* \"#utility.yul\":12846:12861   */\n      mstore\n        /* \"#utility.yul\":12880:12884   */\n      0x24\n        /* \"#utility.yul\":12877:12878   */\n      0x00\n        /* \"#utility.yul\":12870:12885   */\n      revert\n        /* \"#utility.yul\":12897:13217   */\n    tag_120:\n        /* \"#utility.yul\":12941:12947   */\n      0x00\n        /* \"#utility.yul\":12978:12979   */\n      0x02\n        /* \"#utility.yul\":12972:12976   */\n      dup3\n        /* \"#utility.yul\":12968:12980   */\n      div\n        /* \"#utility.yul\":12958:12980   */\n      swap1\n      pop\n        /* \"#utility.yul\":13025:13026   */\n      0x01\n        /* \"#utility.yul\":13019:13023   */\n      dup3\n        /* \"#utility.yul\":13015:13027   */\n      and\n        /* \"#utility.yul\":13046:13064   */\n      dup1\n        /* \"#utility.yul\":13036:13117   */\n      tag_514\n      jumpi\n        /* \"#utility.yul\":13102:13106   */\n      0x7f\n        /* \"#utility.yul\":13094:13100   */\n      dup3\n        /* \"#utility.yul\":13090:13107   */\n      and\n        /* \"#utility.yul\":13080:13107   */\n      swap2\n      pop\n        /* \"#utility.yul\":13036:13117   */\n    tag_514:\n        /* \"#utility.yul\":13164:13166   */\n      0x20\n        /* \"#utility.yul\":13156:13162   */\n      dup3\n        /* \"#utility.yul\":13153:13167   */\n      lt\n        /* \"#utility.yul\":13133:13151   */\n      dup2\n        /* \"#utility.yul\":13130:13168   */\n      sub\n        /* \"#utility.yul\":13127:13211   */\n      tag_515\n      jumpi\n        /* \"#utility.yul\":13183:13201   */\n      tag_516\n      tag_358\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":13127:13211   */\n    tag_515:\n        /* \"#utility.yul\":12948:13217   */\n      pop\n        /* \"#utility.yul\":12897:13217   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13223:13665   */\n    tag_143:\n        /* \"#utility.yul\":13372:13376   */\n      0x00\n        /* \"#utility.yul\":13410:13412   */\n      0x60\n        /* \"#utility.yul\":13399:13408   */\n      dup3\n        /* \"#utility.yul\":13395:13413   */\n      add\n        /* \"#utility.yul\":13387:13413   */\n      swap1\n      pop\n        /* \"#utility.yul\":13423:13494   */\n      tag_518\n        /* \"#utility.yul\":13491:13492   */\n      0x00\n        /* \"#utility.yul\":13480:13489   */\n      dup4\n        /* \"#utility.yul\":13476:13493   */\n      add\n        /* \"#utility.yul\":13467:13473   */\n      dup7\n        /* \"#utility.yul\":13423:13494   */\n      tag_335\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":13504:13576   */\n      tag_519\n        /* \"#utility.yul\":13572:13574   */\n      0x20\n        /* \"#utility.yul\":13561:13570   */\n      dup4\n        /* \"#utility.yul\":13557:13575   */\n      add\n        /* \"#utility.yul\":13548:13554   */\n      dup6\n        /* \"#utility.yul\":13504:13576   */\n      tag_338\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":13586:13658   */\n      tag_520\n        /* \"#utility.yul\":13654:13656   */\n      0x40\n        /* \"#utility.yul\":13643:13652   */\n      dup4\n        /* \"#utility.yul\":13639:13657   */\n      add\n        /* \"#utility.yul\":13630:13636   */\n      dup5\n        /* \"#utility.yul\":13586:13658   */\n      tag_335\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":13223:13665   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13671:13819   */\n    tag_359:\n        /* \"#utility.yul\":13773:13784   */\n      0x00\n        /* \"#utility.yul\":13810:13813   */\n      dup2\n        /* \"#utility.yul\":13795:13813   */\n      swap1\n      pop\n        /* \"#utility.yul\":13671:13819   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13825:14215   */\n    tag_360:\n        /* \"#utility.yul\":13931:13934   */\n      0x00\n        /* \"#utility.yul\":13959:13998   */\n      tag_523\n        /* \"#utility.yul\":13992:13997   */\n      dup3\n        /* \"#utility.yul\":13959:13998   */\n      tag_325\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":14014:14103   */\n      tag_524\n        /* \"#utility.yul\":14096:14102   */\n      dup2\n        /* \"#utility.yul\":14091:14094   */\n      dup6\n        /* \"#utility.yul\":14014:14103   */\n      tag_359\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":14007:14103   */\n      swap4\n      pop\n        /* \"#utility.yul\":14112:14177   */\n      tag_525\n        /* \"#utility.yul\":14170:14176   */\n      dup2\n        /* \"#utility.yul\":14165:14168   */\n      dup6\n        /* \"#utility.yul\":14158:14162   */\n      0x20\n        /* \"#utility.yul\":14151:14156   */\n      dup7\n        /* \"#utility.yul\":14147:14163   */\n      add\n        /* \"#utility.yul\":14112:14177   */\n      tag_327\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":14202:14208   */\n      dup1\n        /* \"#utility.yul\":14197:14200   */\n      dup5\n        /* \"#utility.yul\":14193:14209   */\n      add\n        /* \"#utility.yul\":14186:14209   */\n      swap2\n      pop\n        /* \"#utility.yul\":13935:14215   */\n      pop\n        /* \"#utility.yul\":13825:14215   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14221:14656   */\n    tag_199:\n        /* \"#utility.yul\":14401:14404   */\n      0x00\n        /* \"#utility.yul\":14423:14518   */\n      tag_527\n        /* \"#utility.yul\":14514:14517   */\n      dup3\n        /* \"#utility.yul\":14505:14511   */\n      dup6\n        /* \"#utility.yul\":14423:14518   */\n      tag_360\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":14416:14518   */\n      swap2\n      pop\n        /* \"#utility.yul\":14535:14630   */\n      tag_528\n        /* \"#utility.yul\":14626:14629   */\n      dup3\n        /* \"#utility.yul\":14617:14623   */\n      dup5\n        /* \"#utility.yul\":14535:14630   */\n      tag_360\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":14528:14630   */\n      swap2\n      pop\n        /* \"#utility.yul\":14647:14650   */\n      dup2\n        /* \"#utility.yul\":14640:14650   */\n      swap1\n      pop\n        /* \"#utility.yul\":14221:14656   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14662:14760   */\n    tag_361:\n        /* \"#utility.yul\":14713:14719   */\n      0x00\n        /* \"#utility.yul\":14747:14752   */\n      dup2\n        /* \"#utility.yul\":14741:14753   */\n      mload\n        /* \"#utility.yul\":14731:14753   */\n      swap1\n      pop\n        /* \"#utility.yul\":14662:14760   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14766:14934   */\n    tag_362:\n        /* \"#utility.yul\":14849:14860   */\n      0x00\n        /* \"#utility.yul\":14883:14889   */\n      dup3\n        /* \"#utility.yul\":14878:14881   */\n      dup3\n        /* \"#utility.yul\":14871:14890   */\n      mstore\n        /* \"#utility.yul\":14923:14927   */\n      0x20\n        /* \"#utility.yul\":14918:14921   */\n      dup3\n        /* \"#utility.yul\":14914:14928   */\n      add\n        /* \"#utility.yul\":14899:14928   */\n      swap1\n      pop\n        /* \"#utility.yul\":14766:14934   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14940:15313   */\n    tag_363:\n        /* \"#utility.yul\":15026:15029   */\n      0x00\n        /* \"#utility.yul\":15054:15092   */\n      tag_532\n        /* \"#utility.yul\":15086:15091   */\n      dup3\n        /* \"#utility.yul\":15054:15092   */\n      tag_361\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":15108:15178   */\n      tag_533\n        /* \"#utility.yul\":15171:15177   */\n      dup2\n        /* \"#utility.yul\":15166:15169   */\n      dup6\n        /* \"#utility.yul\":15108:15178   */\n      tag_362\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":15101:15178   */\n      swap4\n      pop\n        /* \"#utility.yul\":15187:15252   */\n      tag_534\n        /* \"#utility.yul\":15245:15251   */\n      dup2\n        /* \"#utility.yul\":15240:15243   */\n      dup6\n        /* \"#utility.yul\":15233:15237   */\n      0x20\n        /* \"#utility.yul\":15226:15231   */\n      dup7\n        /* \"#utility.yul\":15222:15238   */\n      add\n        /* \"#utility.yul\":15187:15252   */\n      tag_327\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":15277:15306   */\n      tag_535\n        /* \"#utility.yul\":15299:15305   */\n      dup2\n        /* \"#utility.yul\":15277:15306   */\n      tag_328\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":15272:15275   */\n      dup5\n        /* \"#utility.yul\":15268:15307   */\n      add\n        /* \"#utility.yul\":15261:15307   */\n      swap2\n      pop\n        /* \"#utility.yul\":15030:15313   */\n      pop\n        /* \"#utility.yul\":14940:15313   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15319:15959   */\n    tag_241:\n        /* \"#utility.yul\":15514:15518   */\n      0x00\n        /* \"#utility.yul\":15552:15555   */\n      0x80\n        /* \"#utility.yul\":15541:15550   */\n      dup3\n        /* \"#utility.yul\":15537:15556   */\n      add\n        /* \"#utility.yul\":15529:15556   */\n      swap1\n      pop\n        /* \"#utility.yul\":15566:15637   */\n      tag_537\n        /* \"#utility.yul\":15634:15635   */\n      0x00\n        /* \"#utility.yul\":15623:15632   */\n      dup4\n        /* \"#utility.yul\":15619:15636   */\n      add\n        /* \"#utility.yul\":15610:15616   */\n      dup8\n        /* \"#utility.yul\":15566:15637   */\n      tag_335\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":15647:15719   */\n      tag_538\n        /* \"#utility.yul\":15715:15717   */\n      0x20\n        /* \"#utility.yul\":15704:15713   */\n      dup4\n        /* \"#utility.yul\":15700:15718   */\n      add\n        /* \"#utility.yul\":15691:15697   */\n      dup7\n        /* \"#utility.yul\":15647:15719   */\n      tag_335\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":15729:15801   */\n      tag_539\n        /* \"#utility.yul\":15797:15799   */\n      0x40\n        /* \"#utility.yul\":15786:15795   */\n      dup4\n        /* \"#utility.yul\":15782:15800   */\n      add\n        /* \"#utility.yul\":15773:15779   */\n      dup6\n        /* \"#utility.yul\":15729:15801   */\n      tag_338\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":15848:15857   */\n      dup2\n        /* \"#utility.yul\":15842:15846   */\n      dup2\n        /* \"#utility.yul\":15838:15858   */\n      sub\n        /* \"#utility.yul\":15833:15835   */\n      0x60\n        /* \"#utility.yul\":15822:15831   */\n      dup4\n        /* \"#utility.yul\":15818:15836   */\n      add\n        /* \"#utility.yul\":15811:15859   */\n      mstore\n        /* \"#utility.yul\":15876:15952   */\n      tag_540\n        /* \"#utility.yul\":15947:15951   */\n      dup2\n        /* \"#utility.yul\":15938:15944   */\n      dup5\n        /* \"#utility.yul\":15876:15952   */\n      tag_363\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":15868:15952   */\n      swap1\n      pop\n        /* \"#utility.yul\":15319:15959   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15965:16106   */\n    tag_364:\n        /* \"#utility.yul\":16021:16026   */\n      0x00\n        /* \"#utility.yul\":16052:16058   */\n      dup2\n        /* \"#utility.yul\":16046:16059   */\n      mload\n        /* \"#utility.yul\":16037:16059   */\n      swap1\n      pop\n        /* \"#utility.yul\":16068:16100   */\n      tag_542\n        /* \"#utility.yul\":16094:16099   */\n      dup2\n        /* \"#utility.yul\":16068:16100   */\n      tag_321\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":15965:16106   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16112:16461   */\n    tag_244:\n        /* \"#utility.yul\":16181:16187   */\n      0x00\n        /* \"#utility.yul\":16230:16232   */\n      0x20\n        /* \"#utility.yul\":16218:16227   */\n      dup3\n        /* \"#utility.yul\":16209:16216   */\n      dup5\n        /* \"#utility.yul\":16205:16228   */\n      sub\n        /* \"#utility.yul\":16201:16233   */\n      slt\n        /* \"#utility.yul\":16198:16317   */\n      iszero\n      tag_544\n      jumpi\n        /* \"#utility.yul\":16236:16315   */\n      tag_545\n      tag_318\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":16198:16317   */\n    tag_544:\n        /* \"#utility.yul\":16356:16357   */\n      0x00\n        /* \"#utility.yul\":16381:16444   */\n      tag_546\n        /* \"#utility.yul\":16436:16443   */\n      dup5\n        /* \"#utility.yul\":16427:16433   */\n      dup3\n        /* \"#utility.yul\":16416:16425   */\n      dup6\n        /* \"#utility.yul\":16412:16434   */\n      add\n        /* \"#utility.yul\":16381:16444   */\n      tag_364\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":16371:16444   */\n      swap2\n      pop\n        /* \"#utility.yul\":16327:16454   */\n      pop\n        /* \"#utility.yul\":16112:16461   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16467:16647   */\n    tag_269:\n        /* \"#utility.yul\":16515:16592   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16512:16513   */\n      0x00\n        /* \"#utility.yul\":16505:16593   */\n      mstore\n        /* \"#utility.yul\":16612:16616   */\n      0x12\n        /* \"#utility.yul\":16609:16610   */\n      0x04\n        /* \"#utility.yul\":16602:16617   */\n      mstore\n        /* \"#utility.yul\":16636:16640   */\n      0x24\n        /* \"#utility.yul\":16633:16634   */\n      0x00\n        /* \"#utility.yul\":16626:16641   */\n      revert\n        /* \"#utility.yul\":16653:16985   */\n    tag_290:\n        /* \"#utility.yul\":16774:16778   */\n      0x00\n        /* \"#utility.yul\":16812:16814   */\n      0x40\n        /* \"#utility.yul\":16801:16810   */\n      dup3\n        /* \"#utility.yul\":16797:16815   */\n      add\n        /* \"#utility.yul\":16789:16815   */\n      swap1\n      pop\n        /* \"#utility.yul\":16825:16896   */\n      tag_549\n        /* \"#utility.yul\":16893:16894   */\n      0x00\n        /* \"#utility.yul\":16882:16891   */\n      dup4\n        /* \"#utility.yul\":16878:16895   */\n      add\n        /* \"#utility.yul\":16869:16875   */\n      dup6\n        /* \"#utility.yul\":16825:16896   */\n      tag_335\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":16906:16978   */\n      tag_550\n        /* \"#utility.yul\":16974:16976   */\n      0x20\n        /* \"#utility.yul\":16963:16972   */\n      dup4\n        /* \"#utility.yul\":16959:16977   */\n      add\n        /* \"#utility.yul\":16950:16956   */\n      dup5\n        /* \"#utility.yul\":16906:16978   */\n      tag_338\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":16653:16985   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220038e326ee7ea47c0d58867f51e45bfa898c556b0a05c25707ca4d4572479c82f64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_219": {
									"entryPoint": null,
									"id": 219,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_523": {
									"entryPoint": null,
									"id": 523,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_66": {
									"entryPoint": null,
									"id": 66,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_315": {
									"entryPoint": 437,
									"id": 315,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 711,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_Picture_$22_fromMemory": {
									"entryPoint": 777,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_contract$_Picture_$22_fromMemory": {
									"entryPoint": 799,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1708,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1725,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1020,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 868,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1329,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 667,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_Picture_$22": {
									"entryPoint": 733,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 636,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1150,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1291,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1168,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1480,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1038,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 968,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1451,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1159,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1421,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 923,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 878,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1207,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 632,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 1053,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1409,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1263,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1065,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1216,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 686,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_Picture_$22": {
									"entryPoint": 752,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1259,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7411:14",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:14"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:14",
														"type": ""
													}
												],
												"src": "7:75:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:14"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:14"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:14",
														"type": ""
													}
												],
												"src": "334:126:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:14",
														"type": ""
													}
												],
												"src": "466:96:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:14"
															},
															"nodeType": "YulIf",
															"src": "621:63:14"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:14",
														"type": ""
													}
												],
												"src": "568:122:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:14"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:14",
														"type": ""
													}
												],
												"src": "696:143:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "904:51:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "914:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "943:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "925:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "925:24:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "914:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_Picture_$22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "886:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "896:7:14",
														"type": ""
													}
												],
												"src": "845:110:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1018:93:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1089:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1098:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1101:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1091:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1091:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1091:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1041:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1080:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_Picture_$22",
																					"nodeType": "YulIdentifier",
																					"src": "1048:31:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1048:38:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1038:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1038:49:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1031:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1031:57:14"
															},
															"nodeType": "YulIf",
															"src": "1028:77:14"
														}
													]
												},
												"name": "validator_revert_t_contract$_Picture_$22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1011:5:14",
														"type": ""
													}
												],
												"src": "961:150:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1194:94:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1204:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1219:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1213:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1213:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1204:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1276:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_Picture_$22",
																	"nodeType": "YulIdentifier",
																	"src": "1235:40:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1235:47:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1235:47:14"
														}
													]
												},
												"name": "abi_decode_t_contract$_Picture_$22_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1172:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1180:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1188:5:14",
														"type": ""
													}
												],
												"src": "1117:171:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1402:427:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1448:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1450:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1450:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1450:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1423:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1432:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1419:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1419:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1444:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1415:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1415:32:14"
															},
															"nodeType": "YulIf",
															"src": "1412:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "1541:128:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1556:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1570:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1560:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1585:74:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1631:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1642:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1627:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1627:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1651:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1595:31:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1595:64:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1585:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1679:143:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1694:16:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1708:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1698:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1724:88:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1784:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1795:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1780:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1780:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1804:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_Picture_$22_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1734:45:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1734:78:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1724:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_contract$_Picture_$22_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1364:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1375:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1387:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1395:6:14",
														"type": ""
													}
												],
												"src": "1294:535:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1894:40:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1905:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1921:5:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1915:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1915:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1905:6:14"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1877:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1887:6:14",
														"type": ""
													}
												],
												"src": "1835:99:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1968:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1985:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1988:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1978:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1978:88:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1978:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2082:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2085:4:14",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2075:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2075:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2075:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2106:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2109:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2099:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2099:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2099:15:14"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1940:180:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2154:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2171:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2174:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2164:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2164:88:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2164:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2268:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2271:4:14",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2261:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2261:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2261:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2292:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2295:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2285:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2285:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2285:15:14"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "2126:180:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2363:269:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2373:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2387:4:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2393:1:14",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2383:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2383:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2373:6:14"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2404:38:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2434:4:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2440:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2430:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2430:12:14"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2408:18:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2481:51:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2495:27:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2509:6:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2517:4:14",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2505:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2505:17:14"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2495:6:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2461:18:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2454:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2454:26:14"
															},
															"nodeType": "YulIf",
															"src": "2451:81:14"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2584:42:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "2598:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2598:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2598:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2548:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2571:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2579:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2568:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2568:14:14"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2545:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2545:38:14"
															},
															"nodeType": "YulIf",
															"src": "2542:84:14"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2347:4:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2356:6:14",
														"type": ""
													}
												],
												"src": "2312:320:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2692:87:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2702:11:14",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "2710:3:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2702:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2730:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2733:3:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2723:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2723:14:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2723:14:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2746:26:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2764:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2767:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "2754:9:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2754:18:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2746:4:14"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "2679:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2687:4:14",
														"type": ""
													}
												],
												"src": "2638:141:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2829:49:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2839:33:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2857:5:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2864:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2853:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2853:14:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2869:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2849:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2849:23:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2839:6:14"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2812:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2822:6:14",
														"type": ""
													}
												],
												"src": "2785:93:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2937:54:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2947:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "2972:4:14"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2978:5:14"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "2968:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2968:16:14"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "2947:8:14"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "2912:4:14",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2918:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "2928:8:14",
														"type": ""
													}
												],
												"src": "2884:107:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3073:317:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3083:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "3104:10:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3116:1:14",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "3100:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3100:18:14"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "3087:9:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3127:109:14",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "3158:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3169:66:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "3139:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3139:97:14"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "3131:4:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3245:51:14",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "3276:9:14"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "3287:8:14"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "3257:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3257:39:14"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "3245:8:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3305:30:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3318:5:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "3329:4:14"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3325:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3325:9:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3314:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3314:21:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3305:5:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3344:40:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3357:5:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "3368:8:14"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "3378:4:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3364:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3364:19:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3354:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3354:30:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "3344:6:14"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3034:5:14",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "3041:10:14",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "3053:8:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "3066:6:14",
														"type": ""
													}
												],
												"src": "2997:393:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3441:32:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3451:16:14",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3462:5:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3451:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3423:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3433:7:14",
														"type": ""
													}
												],
												"src": "3396:77:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3511:28:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3521:12:14",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3528:5:14"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "3521:3:14"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3497:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "3507:3:14",
														"type": ""
													}
												],
												"src": "3479:60:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3605:82:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3615:66:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3673:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3655:17:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3655:24:14"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "3646:8:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3646:34:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3628:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3628:53:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "3615:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3585:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "3595:9:14",
														"type": ""
													}
												],
												"src": "3545:142:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3740:28:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3750:12:14",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3757:5:14"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "3750:3:14"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3726:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "3736:3:14",
														"type": ""
													}
												],
												"src": "3693:75:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3850:193:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3860:63:14",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "3915:7:14"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3884:30:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3884:39:14"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "3864:16:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3939:4:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "3979:4:14"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "3973:5:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3973:11:14"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3986:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "4018:16:14"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3994:23:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3994:41:14"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "3945:27:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3945:91:14"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "3932:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3932:105:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3932:105:14"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "3827:4:14",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3833:6:14",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "3841:7:14",
														"type": ""
													}
												],
												"src": "3774:269:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4098:24:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4108:8:14",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4115:1:14",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "4108:3:14"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "4094:3:14",
														"type": ""
													}
												],
												"src": "4049:73:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4181:136:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4191:46:14",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4205:30:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4205:32:14"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "4195:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "4290:4:14"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4296:6:14"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "4304:6:14"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4246:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4246:65:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4246:65:14"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "4167:4:14",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4173:6:14",
														"type": ""
													}
												],
												"src": "4128:189:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4373:136:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4440:63:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "4484:5:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4491:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "4454:29:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4454:39:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4454:39:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "4393:5:14"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4400:3:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4390:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4390:14:14"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4405:26:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4407:22:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "4420:5:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4427:1:14",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4416:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4416:13:14"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "4407:5:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4387:2:14",
																"statements": []
															},
															"src": "4383:120:14"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "4361:5:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4368:3:14",
														"type": ""
													}
												],
												"src": "4323:186:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4594:464:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4620:431:14",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4634:54:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "4682:5:14"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "4650:31:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4650:38:14"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "4638:8:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4701:63:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "4724:8:14"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "4752:10:14"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "4734:17:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4734:29:14"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4720:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4720:44:14"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "4705:11:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "4921:27:14",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "4923:23:14",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "4938:8:14"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "4923:11:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "4905:10:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4917:2:14",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "4902:2:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4902:18:14"
																		},
																		"nodeType": "YulIf",
																		"src": "4899:49:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "4990:11:14"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "5007:8:14"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "5035:3:14"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "5017:17:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5017:22:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "5003:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5003:37:14"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "4961:28:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4961:80:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4961:80:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "4611:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4616:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4608:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4608:11:14"
															},
															"nodeType": "YulIf",
															"src": "4605:446:14"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "4570:5:14",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "4577:3:14",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "4582:10:14",
														"type": ""
													}
												],
												"src": "4515:543:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5127:54:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5137:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "5162:4:14"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5168:5:14"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5158:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5158:16:14"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "5137:8:14"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "5102:4:14",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5108:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "5118:8:14",
														"type": ""
													}
												],
												"src": "5064:117:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5238:118:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5248:68:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5297:1:14",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "5300:5:14"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "5293:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5293:13:14"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5312:1:14",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "5308:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5308:6:14"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "5264:28:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5264:51:14"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "5260:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5260:56:14"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "5252:4:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5325:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5339:4:14"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "5345:4:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5335:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5335:15:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "5325:6:14"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5215:4:14",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "5221:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "5231:6:14",
														"type": ""
													}
												],
												"src": "5187:169:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5442:214:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5575:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5602:4:14"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "5608:3:14"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "5583:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5583:29:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "5575:4:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5621:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5632:4:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5642:1:14",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "5645:3:14"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "5638:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5638:11:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5629:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5629:21:14"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "5621:4:14"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5423:4:14",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "5429:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "5437:4:14",
														"type": ""
													}
												],
												"src": "5361:295:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5753:1303:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5764:51:14",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "5811:3:14"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "5778:32:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5778:37:14"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "5768:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5900:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "5902:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5902:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5902:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "5872:6:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5880:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5869:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5869:30:14"
															},
															"nodeType": "YulIf",
															"src": "5866:56:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5932:52:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "5978:4:14"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "5972:5:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5972:11:14"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "5946:25:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5946:38:14"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "5936:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "6077:4:14"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "6083:6:14"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "6091:6:14"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "6031:45:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6031:67:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6031:67:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6108:18:14",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6125:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "6112:9:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6136:17:14",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6149:4:14",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "6136:9:14"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "6200:611:14",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "6214:37:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "6233:6:14"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "6245:4:14",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "6241:3:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6241:9:14"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "6229:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6229:22:14"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "6218:7:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "6265:51:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "6311:4:14"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "6279:31:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6279:37:14"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "6269:6:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "6329:10:14",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6338:1:14",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "6333:1:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "6397:163:14",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "6422:6:14"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "6440:3:14"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "6445:9:14"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "6436:3:14"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "6436:19:14"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "6430:5:14"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "6430:26:14"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "6415:6:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6415:42:14"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "6415:42:14"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "6474:24:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "6488:6:14"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "6496:1:14",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "6484:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6484:14:14"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "6474:6:14"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "6515:31:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "6532:9:14"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "6543:2:14",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "6528:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6528:18:14"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "6515:9:14"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "6363:1:14"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "6366:7:14"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "6360:2:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6360:14:14"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "6375:21:14",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "6377:17:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "6386:1:14"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "6389:4:14",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "6382:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6382:12:14"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "6377:1:14"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "6356:3:14",
																					"statements": []
																				},
																				"src": "6352:208:14"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "6596:156:14",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "6614:43:14",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "6641:3:14"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "6646:9:14"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "6637:3:14"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "6637:19:14"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "6631:5:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6631:26:14"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "6618:9:14",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "6681:6:14"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "6708:9:14"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "6723:6:14"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "6731:4:14",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "6719:3:14"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "6719:17:14"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "6689:18:14"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "6689:48:14"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "6674:6:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6674:64:14"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "6674:64:14"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "6579:7:14"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "6588:6:14"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "6576:2:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6576:19:14"
																				},
																				"nodeType": "YulIf",
																				"src": "6573:179:14"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "6772:4:14"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "6786:6:14"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "6794:1:14",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "6782:3:14"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "6782:14:14"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "6798:1:14",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "6778:3:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6778:22:14"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "6765:6:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6765:36:14"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "6765:36:14"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "6193:618:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6198:1:14",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "6828:222:14",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "6842:14:14",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6855:1:14",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "6846:5:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "6879:67:14",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "6897:35:14",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "6916:3:14"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "6921:9:14"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "6912:3:14"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "6912:19:14"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "6906:5:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6906:26:14"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "6897:5:14"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "6872:6:14"
																				},
																				"nodeType": "YulIf",
																				"src": "6869:77:14"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "6966:4:14"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "7025:5:14"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "7032:6:14"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "6972:52:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6972:67:14"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "6959:6:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6959:81:14"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "6959:81:14"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "6820:230:14",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "6173:6:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6181:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6170:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6170:14:14"
															},
															"nodeType": "YulSwitch",
															"src": "6163:887:14"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5742:4:14",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "5748:3:14",
														"type": ""
													}
												],
												"src": "5661:1395:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7127:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7144:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7167:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7149:17:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7149:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7137:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7137:37:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7137:37:14"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7115:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7122:3:14",
														"type": ""
													}
												],
												"src": "7062:118:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7284:124:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7294:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7306:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7317:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7302:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7302:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7294:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7374:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7387:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7398:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7383:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7383:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7330:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7330:71:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7330:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7256:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7268:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7279:4:14",
														"type": ""
													}
												],
												"src": "7186:222:14"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_contract$_Picture_$22(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_Picture_$22(value) {\n        if iszero(eq(value, cleanup_t_contract$_Picture_$22(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_Picture_$22_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_Picture_$22(value)\n    }\n\n    function abi_decode_tuple_t_addresst_contract$_Picture_$22_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_Picture_$22_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b50604051620028fd380380620028fd83398181016040528101906200003691906200031f565b816040518060400160405280600c81526020017f50696374757265546f6b656e00000000000000000000000000000000000000008152506040518060400160405280600281526020017f5054000000000000000000000000000000000000000000000000000000000000815250815f9081620000b39190620005c8565b508060019081620000c59190620005c8565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200013b575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620001329190620006bd565b60405180910390fd5b6200014c81620001b560201b60201c565b508060075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f6008819055505f60095f6101000a81548160ff0219169083151502179055505050620006d8565b5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620002a7826200027c565b9050919050565b620002b9816200029b565b8114620002c4575f80fd5b50565b5f81519050620002d781620002ae565b92915050565b5f620002e9826200029b565b9050919050565b620002fb81620002dd565b811462000306575f80fd5b50565b5f815190506200031981620002f0565b92915050565b5f806040838503121562000338576200033762000278565b5b5f6200034785828601620002c7565b92505060206200035a8582860162000309565b9150509250929050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680620003e057607f821691505b602082108103620003f657620003f56200039b565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026200045a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200041d565b6200046686836200041d565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f620004b0620004aa620004a4846200047e565b62000487565b6200047e565b9050919050565b5f819050919050565b620004cb8362000490565b620004e3620004da82620004b7565b84845462000429565b825550505050565b5f90565b620004f9620004eb565b62000506818484620004c0565b505050565b5b818110156200052d57620005215f82620004ef565b6001810190506200050c565b5050565b601f8211156200057c576200054681620003fc565b62000551846200040e565b8101602085101562000561578190505b6200057962000570856200040e565b8301826200050b565b50505b505050565b5f82821c905092915050565b5f6200059e5f198460080262000581565b1980831691505092915050565b5f620005b883836200058d565b9150826002028217905092915050565b620005d38262000364565b67ffffffffffffffff811115620005ef57620005ee6200036e565b5b620005fb8254620003c8565b6200060882828562000531565b5f60209050601f8311600181146200063e575f841562000629578287015190505b620006358582620005ab565b865550620006a4565b601f1984166200064e86620003fc565b5f5b82811015620006775784890151825560018201915060208501945060208101905062000650565b8683101562000697578489015162000693601f8916826200058d565b8355505b6001600288020188555050505b505050505050565b620006b7816200029b565b82525050565b5f602082019050620006d25f830184620006ac565b92915050565b61221780620006e65f395ff3fe608060405234801561000f575f80fd5b506004361061014b575f3560e01c8063854cbb4a116100c1578063a035b1fe1161007a578063a035b1fe1461033d578063a22cb4651461035b578063b88d4fde14610377578063c87b56dd14610393578063e985e9c5146103c3578063f2fde38b146103f35761014b565b8063854cbb4a1461029f5780638c2a5bc8146102bd5780638da5cb5b146102c757806391b7f5ed146102e557806395d89b411461030157806398d5fdca1461031f5761014b565b806342842e0e1161011357806342842e0e146102055780635987cc19146102215780636352211e1461022b57806364edfbf01461025b57806370a0823114610265578063715018a6146102955761014b565b806301ffc9a71461014f57806306fdde031461017f578063081812fc1461019d578063095ea7b3146101cd57806323b872dd146101e9575b5f80fd5b610169600480360381019061016491906119b4565b61040f565b60405161017691906119f9565b60405180910390f35b6101876104f0565b6040516101949190611a9c565b60405180910390f35b6101b760048036038101906101b29190611aef565b61057f565b6040516101c49190611b59565b60405180910390f35b6101e760048036038101906101e29190611b9c565b61059a565b005b61020360048036038101906101fe9190611bda565b6105b0565b005b61021f600480360381019061021a9190611bda565b6106af565b005b6102296106ce565b005b61024560048036038101906102409190611aef565b6106f2565b6040516102529190611b59565b60405180910390f35b610263610703565b005b61027f600480360381019061027a9190611c2a565b610774565b60405161028c9190611c64565b60405180910390f35b61029d61082a565b005b6102a761083d565b6040516102b49190611d58565b60405180910390f35b6102c56108d1565b005b6102cf6108f4565b6040516102dc9190611b59565b60405180910390f35b6102ff60048036038101906102fa9190611aef565b61091c565b005b61030961092e565b6040516103169190611a9c565b60405180910390f35b6103276109be565b6040516103349190611c64565b60405180910390f35b6103456109c7565b6040516103529190611c64565b60405180910390f35b61037560048036038101906103709190611d9b565b6109cd565b005b610391600480360381019061038c9190611f05565b6109e3565b005b6103ad60048036038101906103a89190611aef565b610a00565b6040516103ba9190611a9c565b60405180910390f35b6103dd60048036038101906103d89190611f85565b610a66565b6040516103ea91906119f9565b60405180910390f35b61040d60048036038101906104089190611c2a565b610af4565b005b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806104d957507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806104e957506104e882610b78565b5b9050919050565b60605f80546104fe90611ff0565b80601f016020809104026020016040519081016040528092919081815260200182805461052a90611ff0565b80156105755780601f1061054c57610100808354040283529160200191610575565b820191905f5260205f20905b81548152906001019060200180831161055857829003601f168201915b5050505050905090565b5f61058982610be1565b5061059382610c67565b9050919050565b6105ac82826105a7610ca0565b610ca7565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610620575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016106179190611b59565b60405180910390fd5b5f610633838361062e610ca0565b610cb9565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146106a9578382826040517f64283d7b0000000000000000000000000000000000000000000000000000000081526004016106a093929190612020565b60405180910390fd5b50505050565b6106c983838360405180602001604052805f8152506109e3565b505050565b6106d6610ec4565b600160095f6101000a81548160ff021916908315150217905550565b5f6106fc82610be1565b9050919050565b3373ffffffffffffffffffffffffffffffffffffffff166108fc60085490811502906040515f60405180830381858888f19350505050158015610748573d5f803e3d5ffd5b5061075233610af4565b5f6008819055505f60095f6101000a81548160ff021916908315150217905550565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107e5575f6040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016107dc9190611b59565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610832610ec4565b61083b5f610f4b565b565b6108456118fc565b60405180608001604052806108586108f4565b73ffffffffffffffffffffffffffffffffffffffff16815260200160075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600854815260200160095f9054906101000a900460ff161515815250905090565b6108d9610ec4565b5f60095f6101000a81548160ff021916908315150217905550565b5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610924610ec4565b8060088190555050565b60606001805461093d90611ff0565b80601f016020809104026020016040519081016040528092919081815260200182805461096990611ff0565b80156109b45780601f1061098b576101008083540402835291602001916109b4565b820191905f5260205f20905b81548152906001019060200180831161099757829003601f168201915b5050505050905090565b5f600854905090565b60085481565b6109df6109d8610ca0565b838361100e565b5050565b6109ee8484846105b0565b6109fa84848484611177565b50505050565b6060610a0b82610be1565b505f610a15611329565b90505f815111610a335760405180602001604052805f815250610a5e565b80610a3d84611366565b604051602001610a4e92919061208f565b6040516020818303038152906040525b915050919050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b610afc610ec4565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b6c575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610b639190611b59565b60405180910390fd5b610b7581610f4b565b50565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f80610bec83611430565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610c5e57826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610c559190611c64565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b610cb48383836001611469565b505050565b5f80610cc484611430565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610d0557610d04818486611628565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610d9057610d445f855f80611469565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610e0f57600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b610ecc610ca0565b73ffffffffffffffffffffffffffffffffffffffff16610eea6108f4565b73ffffffffffffffffffffffffffffffffffffffff1614610f4957610f0d610ca0565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610f409190611b59565b60405180910390fd5b565b5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361107e57816040517f5b08ba180000000000000000000000000000000000000000000000000000000081526004016110759190611b59565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161116a91906119f9565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b1115611323578273ffffffffffffffffffffffffffffffffffffffff1663150b7a026111ba610ca0565b8685856040518563ffffffff1660e01b81526004016111dc9493929190612104565b6020604051808303815f875af192505050801561121757506040513d601f19601f820116820180604052508101906112149190612162565b60015b611298573d805f8114611245576040519150601f19603f3d011682016040523d82523d5f602084013e61124a565b606091505b505f81510361129057836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016112879190611b59565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461132157836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016113189190611b59565b60405180910390fd5b505b50505050565b60606040518060400160405280601881526020017f697066733a2f2f7069656365546f6b656e426173655552490000000000000000815250905090565b60605f6001611374846116eb565b0190505f8167ffffffffffffffff81111561139257611391611de1565b5b6040519080825280601f01601f1916602001820160405280156113c45781602001600182028036833780820191505090505b5090505f82602001820190505b600115611425578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161141a5761141961218d565b5b0494505f85036113d1575b819350505050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80806114a157505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b156115d3575f6114b084610be1565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561151a57508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b801561152d575061152b8184610a66565b155b1561156f57826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016115669190611b59565b60405180910390fd5b81156115d157838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b61163383838361183c565b6116e6575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036116a757806040517f7e27328900000000000000000000000000000000000000000000000000000000815260040161169e9190611c64565b60405180910390fd5b81816040517f177e802f0000000000000000000000000000000000000000000000000000000081526004016116dd9291906121ba565b60405180910390fd5b505050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611747577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161173d5761173c61218d565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611784576d04ee2d6d415b85acef8100000000838161177a5761177961218d565b5b0492506020810190505b662386f26fc1000083106117b357662386f26fc1000083816117a9576117a861218d565b5b0492506010810190505b6305f5e10083106117dc576305f5e10083816117d2576117d161218d565b5b0492506008810190505b61271083106118015761271083816117f7576117f661218d565b5b0492506004810190505b60648310611824576064838161181a5761181961218d565b5b0492506002810190505b600a8310611833576001810190505b80915050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156118f357508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806118b457506118b38484610a66565b5b806118f257508273ffffffffffffffffffffffffffffffffffffffff166118da83610c67565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b60405180608001604052805f73ffffffffffffffffffffffffffffffffffffffff1681526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81526020015f151581525090565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6119938161195f565b811461199d575f80fd5b50565b5f813590506119ae8161198a565b92915050565b5f602082840312156119c9576119c8611957565b5b5f6119d6848285016119a0565b91505092915050565b5f8115159050919050565b6119f3816119df565b82525050565b5f602082019050611a0c5f8301846119ea565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611a49578082015181840152602081019050611a2e565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611a6e82611a12565b611a788185611a1c565b9350611a88818560208601611a2c565b611a9181611a54565b840191505092915050565b5f6020820190508181035f830152611ab48184611a64565b905092915050565b5f819050919050565b611ace81611abc565b8114611ad8575f80fd5b50565b5f81359050611ae981611ac5565b92915050565b5f60208284031215611b0457611b03611957565b5b5f611b1184828501611adb565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611b4382611b1a565b9050919050565b611b5381611b39565b82525050565b5f602082019050611b6c5f830184611b4a565b92915050565b611b7b81611b39565b8114611b85575f80fd5b50565b5f81359050611b9681611b72565b92915050565b5f8060408385031215611bb257611bb1611957565b5b5f611bbf85828601611b88565b9250506020611bd085828601611adb565b9150509250929050565b5f805f60608486031215611bf157611bf0611957565b5b5f611bfe86828701611b88565b9350506020611c0f86828701611b88565b9250506040611c2086828701611adb565b9150509250925092565b5f60208284031215611c3f57611c3e611957565b5b5f611c4c84828501611b88565b91505092915050565b611c5e81611abc565b82525050565b5f602082019050611c775f830184611c55565b92915050565b611c8681611b39565b82525050565b5f819050919050565b5f611caf611caa611ca584611b1a565b611c8c565b611b1a565b9050919050565b5f611cc082611c95565b9050919050565b5f611cd182611cb6565b9050919050565b611ce181611cc7565b82525050565b611cf081611abc565b82525050565b611cff816119df565b82525050565b608082015f820151611d195f850182611c7d565b506020820151611d2c6020850182611cd8565b506040820151611d3f6040850182611ce7565b506060820151611d526060850182611cf6565b50505050565b5f608082019050611d6b5f830184611d05565b92915050565b611d7a816119df565b8114611d84575f80fd5b50565b5f81359050611d9581611d71565b92915050565b5f8060408385031215611db157611db0611957565b5b5f611dbe85828601611b88565b9250506020611dcf85828601611d87565b9150509250929050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611e1782611a54565b810181811067ffffffffffffffff82111715611e3657611e35611de1565b5b80604052505050565b5f611e4861194e565b9050611e548282611e0e565b919050565b5f67ffffffffffffffff821115611e7357611e72611de1565b5b611e7c82611a54565b9050602081019050919050565b828183375f83830152505050565b5f611ea9611ea484611e59565b611e3f565b905082815260208101848484011115611ec557611ec4611ddd565b5b611ed0848285611e89565b509392505050565b5f82601f830112611eec57611eeb611dd9565b5b8135611efc848260208601611e97565b91505092915050565b5f805f8060808587031215611f1d57611f1c611957565b5b5f611f2a87828801611b88565b9450506020611f3b87828801611b88565b9350506040611f4c87828801611adb565b925050606085013567ffffffffffffffff811115611f6d57611f6c61195b565b5b611f7987828801611ed8565b91505092959194509250565b5f8060408385031215611f9b57611f9a611957565b5b5f611fa885828601611b88565b9250506020611fb985828601611b88565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061200757607f821691505b60208210810361201a57612019611fc3565b5b50919050565b5f6060820190506120335f830186611b4a565b6120406020830185611c55565b61204d6040830184611b4a565b949350505050565b5f81905092915050565b5f61206982611a12565b6120738185612055565b9350612083818560208601611a2c565b80840191505092915050565b5f61209a828561205f565b91506120a6828461205f565b91508190509392505050565b5f81519050919050565b5f82825260208201905092915050565b5f6120d6826120b2565b6120e081856120bc565b93506120f0818560208601611a2c565b6120f981611a54565b840191505092915050565b5f6080820190506121175f830187611b4a565b6121246020830186611b4a565b6121316040830185611c55565b818103606083015261214381846120cc565b905095945050505050565b5f8151905061215c8161198a565b92915050565b5f6020828403121561217757612176611957565b5b5f6121848482850161214e565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6040820190506121cd5f830185611b4a565b6121da6020830184611c55565b939250505056fea2646970667358221220038e326ee7ea47c0d58867f51e45bfa898c556b0a05c25707ca4d4572479c82f64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x28FD CODESIZE SUB DUP1 PUSH3 0x28FD DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x31F JUMP JUMPDEST DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x50696374757265546F6B656E0000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5054000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH0 SWAP1 DUP2 PUSH3 0xB3 SWAP2 SWAP1 PUSH3 0x5C8 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH3 0xC5 SWAP2 SWAP1 PUSH3 0x5C8 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x13B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x132 SWAP2 SWAP1 PUSH3 0x6BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x14C DUP2 PUSH3 0x1B5 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP1 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP PUSH3 0x6D8 JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x2A7 DUP3 PUSH3 0x27C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2B9 DUP2 PUSH3 0x29B JUMP JUMPDEST DUP2 EQ PUSH3 0x2C4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x2D7 DUP2 PUSH3 0x2AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x2E9 DUP3 PUSH3 0x29B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2FB DUP2 PUSH3 0x2DD JUMP JUMPDEST DUP2 EQ PUSH3 0x306 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x319 DUP2 PUSH3 0x2F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x338 JUMPI PUSH3 0x337 PUSH3 0x278 JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x347 DUP6 DUP3 DUP7 ADD PUSH3 0x2C7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x35A DUP6 DUP3 DUP7 ADD PUSH3 0x309 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x3E0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x3F6 JUMPI PUSH3 0x3F5 PUSH3 0x39B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x45A PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x41D JUMP JUMPDEST PUSH3 0x466 DUP7 DUP4 PUSH3 0x41D JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x4B0 PUSH3 0x4AA PUSH3 0x4A4 DUP5 PUSH3 0x47E JUMP JUMPDEST PUSH3 0x487 JUMP JUMPDEST PUSH3 0x47E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x4CB DUP4 PUSH3 0x490 JUMP JUMPDEST PUSH3 0x4E3 PUSH3 0x4DA DUP3 PUSH3 0x4B7 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x429 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x4F9 PUSH3 0x4EB JUMP JUMPDEST PUSH3 0x506 DUP2 DUP5 DUP5 PUSH3 0x4C0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x52D JUMPI PUSH3 0x521 PUSH0 DUP3 PUSH3 0x4EF JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x50C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x57C JUMPI PUSH3 0x546 DUP2 PUSH3 0x3FC JUMP JUMPDEST PUSH3 0x551 DUP5 PUSH3 0x40E JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x561 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x579 PUSH3 0x570 DUP6 PUSH3 0x40E JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x50B JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x59E PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x581 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x5B8 DUP4 DUP4 PUSH3 0x58D JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x5D3 DUP3 PUSH3 0x364 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x5EF JUMPI PUSH3 0x5EE PUSH3 0x36E JUMP JUMPDEST JUMPDEST PUSH3 0x5FB DUP3 SLOAD PUSH3 0x3C8 JUMP JUMPDEST PUSH3 0x608 DUP3 DUP3 DUP6 PUSH3 0x531 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x63E JUMPI PUSH0 DUP5 ISZERO PUSH3 0x629 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x635 DUP6 DUP3 PUSH3 0x5AB JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x6A4 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x64E DUP7 PUSH3 0x3FC JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x677 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x650 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x697 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x693 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x58D JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0x6B7 DUP2 PUSH3 0x29B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x6D2 PUSH0 DUP4 ADD DUP5 PUSH3 0x6AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2217 DUP1 PUSH3 0x6E6 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x854CBB4A GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xA035B1FE GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xA035B1FE EQ PUSH2 0x33D JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x35B JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x377 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x393 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x3C3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3F3 JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x854CBB4A EQ PUSH2 0x29F JUMPI DUP1 PUSH4 0x8C2A5BC8 EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0x91B7F5ED EQ PUSH2 0x2E5 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0x98D5FDCA EQ PUSH2 0x31F JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x42842E0E GT PUSH2 0x113 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x5987CC19 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x64EDFBF0 EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x295 JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1E9 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x19B4 JUMP JUMPDEST PUSH2 0x40F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x19F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x194 SWAP2 SWAP1 PUSH2 0x1A9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x1AEF JUMP JUMPDEST PUSH2 0x57F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0x1B59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST PUSH2 0x59A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x203 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0x1BDA JUMP JUMPDEST PUSH2 0x5B0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21A SWAP2 SWAP1 PUSH2 0x1BDA JUMP JUMPDEST PUSH2 0x6AF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x229 PUSH2 0x6CE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x245 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x240 SWAP2 SWAP1 PUSH2 0x1AEF JUMP JUMPDEST PUSH2 0x6F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x252 SWAP2 SWAP1 PUSH2 0x1B59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x263 PUSH2 0x703 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x27F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27A SWAP2 SWAP1 PUSH2 0x1C2A JUMP JUMPDEST PUSH2 0x774 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28C SWAP2 SWAP1 PUSH2 0x1C64 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29D PUSH2 0x82A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A7 PUSH2 0x83D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B4 SWAP2 SWAP1 PUSH2 0x1D58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C5 PUSH2 0x8D1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2CF PUSH2 0x8F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DC SWAP2 SWAP1 PUSH2 0x1B59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FA SWAP2 SWAP1 PUSH2 0x1AEF JUMP JUMPDEST PUSH2 0x91C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x309 PUSH2 0x92E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x316 SWAP2 SWAP1 PUSH2 0x1A9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x327 PUSH2 0x9BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x334 SWAP2 SWAP1 PUSH2 0x1C64 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x345 PUSH2 0x9C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x352 SWAP2 SWAP1 PUSH2 0x1C64 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x375 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x370 SWAP2 SWAP1 PUSH2 0x1D9B JUMP JUMPDEST PUSH2 0x9CD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x391 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38C SWAP2 SWAP1 PUSH2 0x1F05 JUMP JUMPDEST PUSH2 0x9E3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A8 SWAP2 SWAP1 PUSH2 0x1AEF JUMP JUMPDEST PUSH2 0xA00 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BA SWAP2 SWAP1 PUSH2 0x1A9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D8 SWAP2 SWAP1 PUSH2 0x1F85 JUMP JUMPDEST PUSH2 0xA66 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EA SWAP2 SWAP1 PUSH2 0x19F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x40D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x408 SWAP2 SWAP1 PUSH2 0x1C2A JUMP JUMPDEST PUSH2 0xAF4 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x4D9 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x4E9 JUMPI POP PUSH2 0x4E8 DUP3 PUSH2 0xB78 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x4FE SWAP1 PUSH2 0x1FF0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x52A SWAP1 PUSH2 0x1FF0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x575 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x54C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x575 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x558 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x589 DUP3 PUSH2 0xBE1 JUMP JUMPDEST POP PUSH2 0x593 DUP3 PUSH2 0xC67 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5AC DUP3 DUP3 PUSH2 0x5A7 PUSH2 0xCA0 JUMP JUMPDEST PUSH2 0xCA7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x620 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x617 SWAP2 SWAP1 PUSH2 0x1B59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x633 DUP4 DUP4 PUSH2 0x62E PUSH2 0xCA0 JUMP JUMPDEST PUSH2 0xCB9 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6A9 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2020 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x6C9 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x9E3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x6D6 PUSH2 0xEC4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x6FC DUP3 PUSH2 0xBE1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x8 SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x748 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH2 0x752 CALLER PUSH2 0xAF4 JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7E5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DC SWAP2 SWAP1 PUSH2 0x1B59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x832 PUSH2 0xEC4 JUMP JUMPDEST PUSH2 0x83B PUSH0 PUSH2 0xF4B JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x845 PUSH2 0x18FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x858 PUSH2 0x8F4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x8D9 PUSH2 0xEC4 JUMP JUMPDEST PUSH0 PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x924 PUSH2 0xEC4 JUMP JUMPDEST DUP1 PUSH1 0x8 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x93D SWAP1 PUSH2 0x1FF0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x969 SWAP1 PUSH2 0x1FF0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9B4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x98B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9B4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x997 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x8 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x9DF PUSH2 0x9D8 PUSH2 0xCA0 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x100E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x9EE DUP5 DUP5 DUP5 PUSH2 0x5B0 JUMP JUMPDEST PUSH2 0x9FA DUP5 DUP5 DUP5 DUP5 PUSH2 0x1177 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA0B DUP3 PUSH2 0xBE1 JUMP JUMPDEST POP PUSH0 PUSH2 0xA15 PUSH2 0x1329 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0xA33 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xA5E JUMP JUMPDEST DUP1 PUSH2 0xA3D DUP5 PUSH2 0x1366 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA4E SWAP3 SWAP2 SWAP1 PUSH2 0x208F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAFC PUSH2 0xEC4 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB6C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB63 SWAP2 SWAP1 PUSH2 0x1B59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB75 DUP2 PUSH2 0xF4B JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xBEC DUP4 PUSH2 0x1430 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC5E JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC55 SWAP2 SWAP1 PUSH2 0x1C64 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xCB4 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1469 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xCC4 DUP5 PUSH2 0x1430 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD05 JUMPI PUSH2 0xD04 DUP2 DUP5 DUP7 PUSH2 0x1628 JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD90 JUMPI PUSH2 0xD44 PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x1469 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE0F JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xECC PUSH2 0xCA0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEEA PUSH2 0x8F4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF49 JUMPI PUSH2 0xF0D PUSH2 0xCA0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF40 SWAP2 SWAP1 PUSH2 0x1B59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x107E JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1075 SWAP2 SWAP1 PUSH2 0x1B59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x116A SWAP2 SWAP1 PUSH2 0x19F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1323 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x11BA PUSH2 0xCA0 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11DC SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2104 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1217 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1214 SWAP2 SWAP1 PUSH2 0x2162 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1298 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1245 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x124A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1290 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1287 SWAP2 SWAP1 PUSH2 0x1B59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1321 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1318 SWAP2 SWAP1 PUSH2 0x1B59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x697066733A2F2F7069656365546F6B656E426173655552490000000000000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x1374 DUP5 PUSH2 0x16EB JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1392 JUMPI PUSH2 0x1391 PUSH2 0x1DE1 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x13C4 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1425 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x141A JUMPI PUSH2 0x1419 PUSH2 0x218D JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x13D1 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x14A1 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x15D3 JUMPI PUSH0 PUSH2 0x14B0 DUP5 PUSH2 0xBE1 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x151A JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x152D JUMPI POP PUSH2 0x152B DUP2 DUP5 PUSH2 0xA66 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x156F JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1566 SWAP2 SWAP1 PUSH2 0x1B59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x15D1 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1633 DUP4 DUP4 DUP4 PUSH2 0x183C JUMP JUMPDEST PUSH2 0x16E6 JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x16A7 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x169E SWAP2 SWAP1 PUSH2 0x1C64 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16DD SWAP3 SWAP2 SWAP1 PUSH2 0x21BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1747 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x173D JUMPI PUSH2 0x173C PUSH2 0x218D JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1784 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x177A JUMPI PUSH2 0x1779 PUSH2 0x218D JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x17B3 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x17A9 JUMPI PUSH2 0x17A8 PUSH2 0x218D JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x17DC JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x17D2 JUMPI PUSH2 0x17D1 PUSH2 0x218D JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1801 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x17F7 JUMPI PUSH2 0x17F6 PUSH2 0x218D JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1824 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x181A JUMPI PUSH2 0x1819 PUSH2 0x218D JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1833 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x18F3 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x18B4 JUMPI POP PUSH2 0x18B3 DUP5 DUP5 PUSH2 0xA66 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x18F2 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x18DA DUP4 PUSH2 0xC67 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1993 DUP2 PUSH2 0x195F JUMP JUMPDEST DUP2 EQ PUSH2 0x199D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19AE DUP2 PUSH2 0x198A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19C9 JUMPI PUSH2 0x19C8 PUSH2 0x1957 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19D6 DUP5 DUP3 DUP6 ADD PUSH2 0x19A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19F3 DUP2 PUSH2 0x19DF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A0C PUSH0 DUP4 ADD DUP5 PUSH2 0x19EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A49 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1A2E JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A6E DUP3 PUSH2 0x1A12 JUMP JUMPDEST PUSH2 0x1A78 DUP2 DUP6 PUSH2 0x1A1C JUMP JUMPDEST SWAP4 POP PUSH2 0x1A88 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A2C JUMP JUMPDEST PUSH2 0x1A91 DUP2 PUSH2 0x1A54 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AB4 DUP2 DUP5 PUSH2 0x1A64 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1ACE DUP2 PUSH2 0x1ABC JUMP JUMPDEST DUP2 EQ PUSH2 0x1AD8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AE9 DUP2 PUSH2 0x1AC5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B04 JUMPI PUSH2 0x1B03 PUSH2 0x1957 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B11 DUP5 DUP3 DUP6 ADD PUSH2 0x1ADB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B43 DUP3 PUSH2 0x1B1A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B53 DUP2 PUSH2 0x1B39 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B6C PUSH0 DUP4 ADD DUP5 PUSH2 0x1B4A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B7B DUP2 PUSH2 0x1B39 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B85 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B96 DUP2 PUSH2 0x1B72 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BB2 JUMPI PUSH2 0x1BB1 PUSH2 0x1957 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BBF DUP6 DUP3 DUP7 ADD PUSH2 0x1B88 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1BD0 DUP6 DUP3 DUP7 ADD PUSH2 0x1ADB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1BF1 JUMPI PUSH2 0x1BF0 PUSH2 0x1957 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BFE DUP7 DUP3 DUP8 ADD PUSH2 0x1B88 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1C0F DUP7 DUP3 DUP8 ADD PUSH2 0x1B88 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1C20 DUP7 DUP3 DUP8 ADD PUSH2 0x1ADB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C3F JUMPI PUSH2 0x1C3E PUSH2 0x1957 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C4C DUP5 DUP3 DUP6 ADD PUSH2 0x1B88 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C5E DUP2 PUSH2 0x1ABC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C77 PUSH0 DUP4 ADD DUP5 PUSH2 0x1C55 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C86 DUP2 PUSH2 0x1B39 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1CAF PUSH2 0x1CAA PUSH2 0x1CA5 DUP5 PUSH2 0x1B1A JUMP JUMPDEST PUSH2 0x1C8C JUMP JUMPDEST PUSH2 0x1B1A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1CC0 DUP3 PUSH2 0x1C95 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1CD1 DUP3 PUSH2 0x1CB6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CE1 DUP2 PUSH2 0x1CC7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1CF0 DUP2 PUSH2 0x1ABC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1CFF DUP2 PUSH2 0x19DF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x80 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x1D19 PUSH0 DUP6 ADD DUP3 PUSH2 0x1C7D JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1D2C PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x1CD8 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x1D3F PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x1CE7 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x1D52 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x1CF6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1D6B PUSH0 DUP4 ADD DUP5 PUSH2 0x1D05 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D7A DUP2 PUSH2 0x19DF JUMP JUMPDEST DUP2 EQ PUSH2 0x1D84 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D95 DUP2 PUSH2 0x1D71 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DB1 JUMPI PUSH2 0x1DB0 PUSH2 0x1957 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DBE DUP6 DUP3 DUP7 ADD PUSH2 0x1B88 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1DCF DUP6 DUP3 DUP7 ADD PUSH2 0x1D87 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1E17 DUP3 PUSH2 0x1A54 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1E36 JUMPI PUSH2 0x1E35 PUSH2 0x1DE1 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E48 PUSH2 0x194E JUMP JUMPDEST SWAP1 POP PUSH2 0x1E54 DUP3 DUP3 PUSH2 0x1E0E JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1E73 JUMPI PUSH2 0x1E72 PUSH2 0x1DE1 JUMP JUMPDEST JUMPDEST PUSH2 0x1E7C DUP3 PUSH2 0x1A54 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1EA9 PUSH2 0x1EA4 DUP5 PUSH2 0x1E59 JUMP JUMPDEST PUSH2 0x1E3F JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1EC5 JUMPI PUSH2 0x1EC4 PUSH2 0x1DDD JUMP JUMPDEST JUMPDEST PUSH2 0x1ED0 DUP5 DUP3 DUP6 PUSH2 0x1E89 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1EEC JUMPI PUSH2 0x1EEB PUSH2 0x1DD9 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1EFC DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1E97 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1F1D JUMPI PUSH2 0x1F1C PUSH2 0x1957 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F2A DUP8 DUP3 DUP9 ADD PUSH2 0x1B88 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1F3B DUP8 DUP3 DUP9 ADD PUSH2 0x1B88 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1F4C DUP8 DUP3 DUP9 ADD PUSH2 0x1ADB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F6D JUMPI PUSH2 0x1F6C PUSH2 0x195B JUMP JUMPDEST JUMPDEST PUSH2 0x1F79 DUP8 DUP3 DUP9 ADD PUSH2 0x1ED8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F9B JUMPI PUSH2 0x1F9A PUSH2 0x1957 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FA8 DUP6 DUP3 DUP7 ADD PUSH2 0x1B88 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1FB9 DUP6 DUP3 DUP7 ADD PUSH2 0x1B88 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2007 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x201A JUMPI PUSH2 0x2019 PUSH2 0x1FC3 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2033 PUSH0 DUP4 ADD DUP7 PUSH2 0x1B4A JUMP JUMPDEST PUSH2 0x2040 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1C55 JUMP JUMPDEST PUSH2 0x204D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1B4A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2069 DUP3 PUSH2 0x1A12 JUMP JUMPDEST PUSH2 0x2073 DUP2 DUP6 PUSH2 0x2055 JUMP JUMPDEST SWAP4 POP PUSH2 0x2083 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A2C JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x209A DUP3 DUP6 PUSH2 0x205F JUMP JUMPDEST SWAP2 POP PUSH2 0x20A6 DUP3 DUP5 PUSH2 0x205F JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x20D6 DUP3 PUSH2 0x20B2 JUMP JUMPDEST PUSH2 0x20E0 DUP2 DUP6 PUSH2 0x20BC JUMP JUMPDEST SWAP4 POP PUSH2 0x20F0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A2C JUMP JUMPDEST PUSH2 0x20F9 DUP2 PUSH2 0x1A54 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2117 PUSH0 DUP4 ADD DUP8 PUSH2 0x1B4A JUMP JUMPDEST PUSH2 0x2124 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1B4A JUMP JUMPDEST PUSH2 0x2131 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1C55 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2143 DUP2 DUP5 PUSH2 0x20CC JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x215C DUP2 PUSH2 0x198A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2177 JUMPI PUSH2 0x2176 PUSH2 0x1957 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2184 DUP5 DUP3 DUP6 ADD PUSH2 0x214E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x21CD PUSH0 DUP4 ADD DUP6 PUSH2 0x1B4A JUMP JUMPDEST PUSH2 0x21DA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1C55 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB DUP15 ORIGIN PUSH15 0xE7EA47C0D58867F51E45BFA898C556 0xB0 LOG0 0x5C 0x25 PUSH17 0x7CA4D4572479C82F64736F6C6343000814 STOP CALLER ",
							"sourceMap": "223:1110:1:-:0;;;340:194;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;437:12;1419:116:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1494:5;1486;:13;;;;;;:::i;:::-;;1520:7;1510;:17;;;;;;:::i;:::-;;1419:116;;1335:1:2;1311:26;;:12;:26;;;1307:97;;1389:1;1361:31;;;;;;;;;;;:::i;:::-;;;;;;;;1307:97;1414:32;1433:12;1414:18;;;:32;;:::i;:::-;1262:192;475:6:1::2;467:5;;:14;;;;;;;;;;;;;;;;;;500:1;492:5;:9;;;;521:5;512:6;;:14;;;;;;;;;;;;;;;;;;340:194:::0;;223:1110;;3006:191:2;3080:16;3099:6;;;;;;;;;;;3080:25;;3125:8;3116:6;;:17;;;;;;;;;;;;;;;;;;3180:8;3149:40;;3170:8;3149:40;;;;;;;;;;;;3069:128;3006:191;:::o;88:117:14:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:110::-;896:7;925:24;943:5;925:24;:::i;:::-;914:35;;845:110;;;:::o;961:150::-;1048:38;1080:5;1048:38;:::i;:::-;1041:5;1038:49;1028:77;;1101:1;1098;1091:12;1028:77;961:150;:::o;1117:171::-;1188:5;1219:6;1213:13;1204:22;;1235:47;1276:5;1235:47;:::i;:::-;1117:171;;;;:::o;1294:535::-;1387:6;1395;1444:2;1432:9;1423:7;1419:23;1415:32;1412:119;;;1450:79;;:::i;:::-;1412:119;1570:1;1595:64;1651:7;1642:6;1631:9;1627:22;1595:64;:::i;:::-;1585:74;;1541:128;1708:2;1734:78;1804:7;1795:6;1784:9;1780:22;1734:78;:::i;:::-;1724:88;;1679:143;1294:535;;;;;:::o;1835:99::-;1887:6;1921:5;1915:12;1905:22;;1835:99;;;:::o;1940:180::-;1988:77;1985:1;1978:88;2085:4;2082:1;2075:15;2109:4;2106:1;2099:15;2126:180;2174:77;2171:1;2164:88;2271:4;2268:1;2261:15;2295:4;2292:1;2285:15;2312:320;2356:6;2393:1;2387:4;2383:12;2373:22;;2440:1;2434:4;2430:12;2461:18;2451:81;;2517:4;2509:6;2505:17;2495:27;;2451:81;2579:2;2571:6;2568:14;2548:18;2545:38;2542:84;;2598:18;;:::i;:::-;2542:84;2363:269;2312:320;;;:::o;2638:141::-;2687:4;2710:3;2702:11;;2733:3;2730:1;2723:14;2767:4;2764:1;2754:18;2746:26;;2638:141;;;:::o;2785:93::-;2822:6;2869:2;2864;2857:5;2853:14;2849:23;2839:33;;2785:93;;;:::o;2884:107::-;2928:8;2978:5;2972:4;2968:16;2947:37;;2884:107;;;;:::o;2997:393::-;3066:6;3116:1;3104:10;3100:18;3139:97;3169:66;3158:9;3139:97;:::i;:::-;3257:39;3287:8;3276:9;3257:39;:::i;:::-;3245:51;;3329:4;3325:9;3318:5;3314:21;3305:30;;3378:4;3368:8;3364:19;3357:5;3354:30;3344:40;;3073:317;;2997:393;;;;;:::o;3396:77::-;3433:7;3462:5;3451:16;;3396:77;;;:::o;3479:60::-;3507:3;3528:5;3521:12;;3479:60;;;:::o;3545:142::-;3595:9;3628:53;3646:34;3655:24;3673:5;3655:24;:::i;:::-;3646:34;:::i;:::-;3628:53;:::i;:::-;3615:66;;3545:142;;;:::o;3693:75::-;3736:3;3757:5;3750:12;;3693:75;;;:::o;3774:269::-;3884:39;3915:7;3884:39;:::i;:::-;3945:91;3994:41;4018:16;3994:41;:::i;:::-;3986:6;3979:4;3973:11;3945:91;:::i;:::-;3939:4;3932:105;3850:193;3774:269;;;:::o;4049:73::-;4094:3;4049:73;:::o;4128:189::-;4205:32;;:::i;:::-;4246:65;4304:6;4296;4290:4;4246:65;:::i;:::-;4181:136;4128:189;;:::o;4323:186::-;4383:120;4400:3;4393:5;4390:14;4383:120;;;4454:39;4491:1;4484:5;4454:39;:::i;:::-;4427:1;4420:5;4416:13;4407:22;;4383:120;;;4323:186;;:::o;4515:543::-;4616:2;4611:3;4608:11;4605:446;;;4650:38;4682:5;4650:38;:::i;:::-;4734:29;4752:10;4734:29;:::i;:::-;4724:8;4720:44;4917:2;4905:10;4902:18;4899:49;;;4938:8;4923:23;;4899:49;4961:80;5017:22;5035:3;5017:22;:::i;:::-;5007:8;5003:37;4990:11;4961:80;:::i;:::-;4620:431;;4605:446;4515:543;;;:::o;5064:117::-;5118:8;5168:5;5162:4;5158:16;5137:37;;5064:117;;;;:::o;5187:169::-;5231:6;5264:51;5312:1;5308:6;5300:5;5297:1;5293:13;5264:51;:::i;:::-;5260:56;5345:4;5339;5335:15;5325:25;;5238:118;5187:169;;;;:::o;5361:295::-;5437:4;5583:29;5608:3;5602:4;5583:29;:::i;:::-;5575:37;;5645:3;5642:1;5638:11;5632:4;5629:21;5621:29;;5361:295;;;;:::o;5661:1395::-;5778:37;5811:3;5778:37;:::i;:::-;5880:18;5872:6;5869:30;5866:56;;;5902:18;;:::i;:::-;5866:56;5946:38;5978:4;5972:11;5946:38;:::i;:::-;6031:67;6091:6;6083;6077:4;6031:67;:::i;:::-;6125:1;6149:4;6136:17;;6181:2;6173:6;6170:14;6198:1;6193:618;;;;6855:1;6872:6;6869:77;;;6921:9;6916:3;6912:19;6906:26;6897:35;;6869:77;6972:67;7032:6;7025:5;6972:67;:::i;:::-;6966:4;6959:81;6828:222;6163:887;;6193:618;6245:4;6241:9;6233:6;6229:22;6279:37;6311:4;6279:37;:::i;:::-;6338:1;6352:208;6366:7;6363:1;6360:14;6352:208;;;6445:9;6440:3;6436:19;6430:26;6422:6;6415:42;6496:1;6488:6;6484:14;6474:24;;6543:2;6532:9;6528:18;6515:31;;6389:4;6386:1;6382:12;6377:17;;6352:208;;;6588:6;6579:7;6576:19;6573:179;;;6646:9;6641:3;6637:19;6631:26;6689:48;6731:4;6723:6;6719:17;6708:9;6689:48;:::i;:::-;6681:6;6674:64;6596:156;6573:179;6798:1;6794;6786:6;6782:14;6778:22;6772:4;6765:36;6200:611;;;6163:887;;5753:1303;;;5661:1395;;:::o;7062:118::-;7149:24;7167:5;7149:24;:::i;:::-;7144:3;7137:37;7062:118;;:::o;7186:222::-;7279:4;7317:2;7306:9;7302:18;7294:26;;7330:71;7398:1;7387:9;7383:17;7374:6;7330:71;:::i;:::-;7186:222;;;;:::o;223:1110:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_1265": {
									"entryPoint": 3239,
									"id": 1265,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1331": {
									"entryPoint": 5225,
									"id": 1331,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_baseURI_75": {
									"entryPoint": 4905,
									"id": 75,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_checkAuthorized_913": {
									"entryPoint": 5672,
									"id": 913,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1461": {
									"entryPoint": 4471,
									"id": 1461,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_253": {
									"entryPoint": 3780,
									"id": 253,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getApproved_840": {
									"entryPoint": 3175,
									"id": 840,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isAuthorized_876": {
									"entryPoint": 6204,
									"id": 876,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_msgSender_1637": {
									"entryPoint": 3232,
									"id": 1637,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_827": {
									"entryPoint": 5168,
									"id": 827,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireOwned_1397": {
									"entryPoint": 3041,
									"id": 1397,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_setApprovalForAll_1368": {
									"entryPoint": 4110,
									"id": 1368,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_315": {
									"entryPoint": 3915,
									"id": 315,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_1019": {
									"entryPoint": 3257,
									"id": 1019,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@approve_674": {
									"entryPoint": 1434,
									"id": 674,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_582": {
									"entryPoint": 1908,
									"id": 582,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_691": {
									"entryPoint": 1407,
									"id": 691,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getPrice_99": {
									"entryPoint": 2494,
									"id": 99,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getSinglePictureToken_91": {
									"entryPoint": 2109,
									"id": 91,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isApprovedForAll_724": {
									"entryPoint": 2662,
									"id": 724,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@log10_2812": {
									"entryPoint": 5867,
									"id": 2812,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_604": {
									"entryPoint": 1264,
									"id": 604,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@notPutOnSale_131": {
									"entryPoint": 2257,
									"id": 131,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ownerOf_595": {
									"entryPoint": 1778,
									"id": 595,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_236": {
									"entryPoint": 2292,
									"id": 236,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@price_36": {
									"entryPoint": 2503,
									"id": 36,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@purchase_157": {
									"entryPoint": 1795,
									"id": 157,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@putOnSale_121": {
									"entryPoint": 1742,
									"id": 121,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_267": {
									"entryPoint": 2090,
									"id": 267,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_788": {
									"entryPoint": 1711,
									"id": 788,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_814": {
									"entryPoint": 2531,
									"id": 814,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_707": {
									"entryPoint": 2509,
									"id": 707,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setPrice_111": {
									"entryPoint": 2332,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@supportsInterface_1925": {
									"entryPoint": 2936,
									"id": 1925,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_554": {
									"entryPoint": 1039,
									"id": 554,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_613": {
									"entryPoint": 2350,
									"id": 613,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_1715": {
									"entryPoint": 4966,
									"id": 1715,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_649": {
									"entryPoint": 2560,
									"id": 649,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_770": {
									"entryPoint": 1456,
									"id": 770,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_295": {
									"entryPoint": 2804,
									"id": 295,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 7831,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 7048,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 7559,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 6560,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 8526,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 7896,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6875,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7210,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 8069,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 7130,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 7941,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 7579,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7068,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 6580,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 8546,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6895,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 7293,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6986,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool": {
									"entryPoint": 7414,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6634,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8396,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_Picture_$22_to_t_address": {
									"entryPoint": 7384,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6756,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8287,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_tokenData_$168_memory_ptr_to_t_struct$_tokenData_$168_memory_ptr_fromStack": {
									"entryPoint": 7429,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 7399,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7253,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 8335,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7001,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 8452,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8634,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 8224,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6649,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6812,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_tokenData_$168_memory_ptr__to_t_struct$_tokenData_$168_memory_ptr__fromStack_reversed": {
									"entryPoint": 7512,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7268,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 7743,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 6478,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 7769,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 8370,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6674,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8380,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6684,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8277,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6969,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6623,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 6495,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6938,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6844,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_Picture_$22_to_t_address": {
									"entryPoint": 7367,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 7350,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 7317,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 7817,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6700,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 8176,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 7694,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 7308,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x12": {
									"entryPoint": 8589,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 8131,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7649,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 7641,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 7645,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 6491,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6487,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6740,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 7026,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 7537,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 6538,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6853,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:16988:14",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:14"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:14",
														"type": ""
													}
												],
												"src": "7:75:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:14"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:14"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "378:105:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "388:89:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "410:66:14",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:78:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "360:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "370:7:14",
														"type": ""
													}
												],
												"src": "334:149:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "531:78:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "587:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "596:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "599:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:42:14"
															},
															"nodeType": "YulIf",
															"src": "541:62:14"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "524:5:14",
														"type": ""
													}
												],
												"src": "489:120:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "666:86:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "676:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "685:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "714:32:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "714:32:14"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "652:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "660:5:14",
														"type": ""
													}
												],
												"src": "615:137:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "823:262:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "865:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "836:32:14"
															},
															"nodeType": "YulIf",
															"src": "833:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "962:116:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "991:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "981:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1006:62:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "793:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "804:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "816:6:14",
														"type": ""
													}
												],
												"src": "758:327:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1133:48:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1143:32:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:14"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1154:21:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1115:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1125:7:14",
														"type": ""
													}
												],
												"src": "1091:90:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1246:50:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1256:34:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:14"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1234:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1241:3:14",
														"type": ""
													}
												],
												"src": "1187:109:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1394:118:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1404:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1412:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:65:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1366:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1378:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1389:4:14",
														"type": ""
													}
												],
												"src": "1302:210:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1577:40:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1588:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1598:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:14"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1560:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1570:6:14",
														"type": ""
													}
												],
												"src": "1518:99:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1719:73:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1729:19:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1757:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1772:14:14"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:14"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1691:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1696:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1707:11:14",
														"type": ""
													}
												],
												"src": "1623:169:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1860:184:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1870:10:14",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1879:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1874:1:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1939:63:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1964:3:14"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1969:1:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1960:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1960:11:14"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1983:3:14"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1988:1:14"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1979:3:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1979:11:14"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1973:5:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1973:18:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1953:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1953:39:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1953:39:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1900:1:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1903:6:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1897:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1897:13:14"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1911:19:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1913:15:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1922:1:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1925:2:14",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1918:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1918:10:14"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1913:1:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1893:3:14",
																"statements": []
															},
															"src": "1889:113:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "2022:3:14"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2027:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2018:16:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2036:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2011:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2011:27:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2011:27:14"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1842:3:14",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1847:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1852:6:14",
														"type": ""
													}
												],
												"src": "1798:246:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2098:54:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2108:38:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2126:5:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2133:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2122:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2122:14:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2142:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2138:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2138:7:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2118:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2118:28:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2108:6:14"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2081:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2091:6:14",
														"type": ""
													}
												],
												"src": "2050:102:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2250:285:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2260:53:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2307:5:14"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2274:32:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2274:39:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2264:6:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2322:78:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2388:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2329:58:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2329:71:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2322:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2448:5:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2455:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2444:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2444:16:14"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2462:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2467:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2409:34:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2409:65:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2409:65:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2483:46:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2494:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2521:6:14"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2499:21:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2499:29:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2490:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2490:39:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2483:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2231:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2238:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2246:3:14",
														"type": ""
													}
												],
												"src": "2158:377:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2659:195:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2669:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2692:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2677:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2677:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2669:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2716:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2727:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2712:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2712:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2735:4:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2741:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2731:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2705:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2705:47:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2705:47:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2761:86:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2833:6:14"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2842:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2769:63:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2769:78:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2761:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2631:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2643:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2654:4:14",
														"type": ""
													}
												],
												"src": "2541:313:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2905:32:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2915:16:14",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2926:5:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2915:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2887:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2897:7:14",
														"type": ""
													}
												],
												"src": "2860:77:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2986:79:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3043:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3052:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3055:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3045:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3045:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3045:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3009:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3034:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3016:17:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3016:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3006:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3006:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2999:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2999:43:14"
															},
															"nodeType": "YulIf",
															"src": "2996:63:14"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2979:5:14",
														"type": ""
													}
												],
												"src": "2943:122:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3123:87:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3133:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3155:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3142:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3142:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3133:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3198:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3171:26:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3171:33:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3171:33:14"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3101:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3109:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3117:5:14",
														"type": ""
													}
												],
												"src": "3071:139:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3282:263:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3328:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3330:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3330:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3330:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3303:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3299:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3299:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3324:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3295:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3295:32:14"
															},
															"nodeType": "YulIf",
															"src": "3292:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "3421:117:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3436:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3450:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3440:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3465:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3500:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3511:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3496:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3496:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3520:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3475:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3475:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3465:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3252:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3263:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3275:6:14",
														"type": ""
													}
												],
												"src": "3216:329:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3596:81:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3606:65:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3621:5:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3628:42:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3617:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3617:54:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3606:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3578:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3588:7:14",
														"type": ""
													}
												],
												"src": "3551:126:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3728:51:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3738:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3767:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3749:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3749:24:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3738:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3710:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3720:7:14",
														"type": ""
													}
												],
												"src": "3683:96:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3850:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3867:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3890:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3872:17:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3872:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3860:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3860:37:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3860:37:14"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3838:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3845:3:14",
														"type": ""
													}
												],
												"src": "3785:118:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4007:124:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4017:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4029:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4040:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4025:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4025:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4017:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4097:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4110:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4121:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4106:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4106:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4053:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4053:71:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4053:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3979:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3991:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4002:4:14",
														"type": ""
													}
												],
												"src": "3909:222:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4180:79:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4237:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4246:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4249:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4239:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4239:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4239:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4203:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4228:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "4210:17:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4210:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4200:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4200:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4193:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4193:43:14"
															},
															"nodeType": "YulIf",
															"src": "4190:63:14"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4173:5:14",
														"type": ""
													}
												],
												"src": "4137:122:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4317:87:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4327:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4349:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4336:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4336:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4327:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4392:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4365:26:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4365:33:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4365:33:14"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4295:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4303:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4311:5:14",
														"type": ""
													}
												],
												"src": "4265:139:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4493:391:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4539:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4541:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4541:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4541:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4514:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4523:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4510:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4510:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4535:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4506:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4506:32:14"
															},
															"nodeType": "YulIf",
															"src": "4503:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "4632:117:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4647:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4661:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4651:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4676:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4711:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4722:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4707:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4707:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4731:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4686:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4686:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4676:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4759:118:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4774:16:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4788:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4778:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4804:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4839:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4850:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4835:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4835:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4859:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4814:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4814:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4804:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4455:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4466:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4478:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4486:6:14",
														"type": ""
													}
												],
												"src": "4410:474:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4990:519:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5036:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5038:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5038:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5038:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5011:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5020:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5007:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5007:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5032:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5003:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5003:32:14"
															},
															"nodeType": "YulIf",
															"src": "5000:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "5129:117:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5144:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5158:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5148:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5173:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5208:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5219:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5204:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5204:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5228:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5183:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5183:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5173:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5256:118:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5271:16:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5285:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5275:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5301:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5336:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5347:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5332:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5332:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5356:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5311:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5311:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5301:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5384:118:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5399:16:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5413:2:14",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5403:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5429:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5464:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5475:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5460:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5460:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5484:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5439:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5439:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "5429:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4944:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4955:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4967:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4975:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4983:6:14",
														"type": ""
													}
												],
												"src": "4890:619:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5581:263:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5627:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5629:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5629:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5629:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5602:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5611:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5598:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5598:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5623:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5594:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5594:32:14"
															},
															"nodeType": "YulIf",
															"src": "5591:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "5720:117:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5735:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5749:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5739:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5764:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5799:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5810:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5795:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5795:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5819:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5774:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5774:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5764:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5551:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5562:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5574:6:14",
														"type": ""
													}
												],
												"src": "5515:329:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5915:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5932:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5955:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5937:17:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5937:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5925:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5925:37:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5925:37:14"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5903:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5910:3:14",
														"type": ""
													}
												],
												"src": "5850:118:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6072:124:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6082:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6094:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6105:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6090:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6090:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6082:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6162:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6175:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6186:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6171:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6171:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6118:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6118:71:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6118:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6044:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6056:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6067:4:14",
														"type": ""
													}
												],
												"src": "5974:222:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6257:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6274:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6297:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6279:17:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6279:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6267:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6267:37:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6267:37:14"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6245:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6252:3:14",
														"type": ""
													}
												],
												"src": "6202:108:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6348:28:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6358:12:14",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6365:5:14"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "6358:3:14"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6334:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "6344:3:14",
														"type": ""
													}
												],
												"src": "6316:60:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6442:82:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6452:66:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6510:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "6492:17:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6492:24:14"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "6483:8:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6483:34:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "6465:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6465:53:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "6452:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6422:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "6432:9:14",
														"type": ""
													}
												],
												"src": "6382:142:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6590:66:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6600:50:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6644:5:14"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "6613:30:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6613:37:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "6600:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6570:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "6580:9:14",
														"type": ""
													}
												],
												"src": "6530:126:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6736:66:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6746:50:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6790:5:14"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "6759:30:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6759:37:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "6746:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_Picture_$22_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6716:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "6726:9:14",
														"type": ""
													}
												],
												"src": "6662:140:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6877:80:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6894:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6944:5:14"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_Picture_$22_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6899:44:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6899:51:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6887:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6887:64:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6887:64:14"
														}
													]
												},
												"name": "abi_encode_t_contract$_Picture_$22_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6865:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6872:3:14",
														"type": ""
													}
												],
												"src": "6808:149:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7018:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7035:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7058:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "7040:17:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7040:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7028:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7028:37:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7028:37:14"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7006:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7013:3:14",
														"type": ""
													}
												],
												"src": "6963:108:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7126:50:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7143:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7163:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "7148:14:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7148:21:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7136:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7136:34:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7136:34:14"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7114:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7121:3:14",
														"type": ""
													}
												],
												"src": "7077:99:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7344:759:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7354:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7370:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7375:4:14",
																		"type": "",
																		"value": "0x80"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7366:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7366:14:14"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "7358:4:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7390:172:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7433:43:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7463:5:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7470:4:14",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7459:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7459:16:14"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "7453:5:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7453:23:14"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "7437:12:14",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "7523:12:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "7541:3:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7546:4:14",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7537:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7537:14:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7489:33:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7489:63:14"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "7489:63:14"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7572:179:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7608:43:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7638:5:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7645:4:14",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7634:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7634:16:14"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "7628:5:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7628:23:14"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "7612:12:14",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "7712:12:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "7730:3:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7735:4:14",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7726:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7726:14:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_contract$_Picture_$22_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7664:47:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7664:77:14"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "7664:77:14"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7761:165:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7797:43:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7827:5:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7834:4:14",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7823:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7823:16:14"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "7817:5:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7817:23:14"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "7801:12:14",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "7887:12:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "7905:3:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7910:4:14",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7901:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7901:14:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "7853:33:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7853:63:14"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "7853:63:14"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7936:160:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7973:43:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8003:5:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8010:4:14",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7999:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7999:16:14"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "7993:5:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7993:23:14"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "7977:12:14",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "8057:12:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "8075:3:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8080:4:14",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8071:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8071:14:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_bool_to_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "8029:27:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8029:57:14"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "8029:57:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_tokenData_$168_memory_ptr_to_t_struct$_tokenData_$168_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7331:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7338:3:14",
														"type": ""
													}
												],
												"src": "7226:877:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8259:177:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8269:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8281:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8292:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8277:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8277:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8269:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8402:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8415:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8426:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8411:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8411:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_tokenData_$168_memory_ptr_to_t_struct$_tokenData_$168_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8306:95:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8306:123:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8306:123:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_tokenData_$168_memory_ptr__to_t_struct$_tokenData_$168_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8231:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8243:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8254:4:14",
														"type": ""
													}
												],
												"src": "8109:327:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8482:76:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8536:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8545:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8548:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8538:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8538:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8538:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8505:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8527:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "8512:14:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8512:21:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "8502:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8502:32:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8495:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8495:40:14"
															},
															"nodeType": "YulIf",
															"src": "8492:60:14"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8475:5:14",
														"type": ""
													}
												],
												"src": "8442:116:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8613:84:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8623:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8645:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8632:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8632:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "8623:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8685:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "8661:23:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8661:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8661:30:14"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8591:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8599:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8607:5:14",
														"type": ""
													}
												],
												"src": "8564:133:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8783:388:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8829:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8831:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8831:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8831:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8804:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8813:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8800:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8800:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8825:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8796:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8796:32:14"
															},
															"nodeType": "YulIf",
															"src": "8793:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "8922:117:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8937:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8951:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8941:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8966:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9001:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9012:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8997:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8997:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9021:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8976:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8976:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8966:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9049:115:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9064:16:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9078:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9068:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9094:60:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9126:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9137:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9122:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9122:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9146:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "9104:17:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9104:50:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "9094:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8745:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8756:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8768:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8776:6:14",
														"type": ""
													}
												],
												"src": "8703:468:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9266:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9283:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9286:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9276:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9276:12:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9276:12:14"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "9177:117:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9389:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9406:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9409:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9399:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9399:12:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9399:12:14"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "9300:117:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9451:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9468:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9471:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9461:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9461:88:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9461:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9565:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9568:4:14",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9558:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9558:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9558:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9589:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9592:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9582:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9582:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9582:15:14"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "9423:180:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9652:238:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9662:58:14",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "9684:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "9714:4:14"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "9692:21:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9692:27:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9680:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9680:40:14"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "9666:10:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9831:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "9833:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9833:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9833:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "9774:10:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9786:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9771:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9771:34:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "9810:10:14"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9822:6:14"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "9807:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9807:22:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "9768:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9768:62:14"
															},
															"nodeType": "YulIf",
															"src": "9765:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9869:2:14",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "9873:10:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9862:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9862:22:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9862:22:14"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9638:6:14",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "9646:4:14",
														"type": ""
													}
												],
												"src": "9609:281:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9937:88:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9947:30:14",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "9957:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9957:20:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "9947:6:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "10006:6:14"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "10014:4:14"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "9986:19:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9986:33:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9986:33:14"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "9921:4:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9930:6:14",
														"type": ""
													}
												],
												"src": "9896:129:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10097:241:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10202:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "10204:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10204:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10204:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10174:6:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10182:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10171:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10171:30:14"
															},
															"nodeType": "YulIf",
															"src": "10168:56:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10234:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10264:6:14"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "10242:21:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10242:29:14"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "10234:4:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10308:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "10320:4:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10326:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10316:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10316:15:14"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "10308:4:14"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10081:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "10092:4:14",
														"type": ""
													}
												],
												"src": "10031:307:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10408:82:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "10431:3:14"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "10436:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10441:6:14"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "10418:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10418:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10418:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "10468:3:14"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10473:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10464:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10464:16:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10482:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10457:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10457:27:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10457:27:14"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "10390:3:14",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "10395:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10400:6:14",
														"type": ""
													}
												],
												"src": "10344:146:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10579:340:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10589:74:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10655:6:14"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "10614:40:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10614:48:14"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "10598:15:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10598:65:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "10589:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "10679:5:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10686:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10672:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10672:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10672:21:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10702:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "10717:5:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10724:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10713:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10713:16:14"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "10706:3:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10767:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "10769:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10769:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10769:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "10748:3:14"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10753:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10744:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10744:16:14"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "10762:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10741:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10741:25:14"
															},
															"nodeType": "YulIf",
															"src": "10738:112:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "10896:3:14"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "10901:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10906:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "10859:36:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10859:54:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10859:54:14"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "10552:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10557:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10565:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "10573:5:14",
														"type": ""
													}
												],
												"src": "10496:423:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10999:277:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11048:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "11050:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11050:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11050:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11027:6:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11035:4:14",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11023:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11023:17:14"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "11042:3:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "11019:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11019:27:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11012:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11012:35:14"
															},
															"nodeType": "YulIf",
															"src": "11009:122:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11140:34:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "11167:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "11154:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11154:20:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "11144:6:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11183:87:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "11243:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11251:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11239:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11239:17:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11258:6:14"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "11266:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "11192:46:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11192:78:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "11183:5:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "10977:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10985:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "10993:5:14",
														"type": ""
													}
												],
												"src": "10938:338:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11408:817:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11455:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "11457:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11457:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11457:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11429:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11438:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11425:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11425:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11450:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "11421:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11421:33:14"
															},
															"nodeType": "YulIf",
															"src": "11418:120:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "11548:117:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11563:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11577:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11567:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11592:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11627:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11638:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11623:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11623:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11647:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "11602:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11602:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "11592:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "11675:118:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11690:16:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11704:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11694:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11720:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11755:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11766:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11751:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11751:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11775:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "11730:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11730:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "11720:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "11803:118:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11818:16:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11832:2:14",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11822:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11848:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11883:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11894:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11879:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11879:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11903:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "11858:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11858:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "11848:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "11931:287:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11946:46:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11977:9:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11988:2:14",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11973:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11973:18:14"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "11960:12:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11960:32:14"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11950:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "12039:83:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "12041:77:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12041:79:14"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "12041:79:14"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "12011:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12019:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "12008:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12008:30:14"
																	},
																	"nodeType": "YulIf",
																	"src": "12005:117:14"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "12136:72:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12180:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12191:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12176:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12176:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12200:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "12146:29:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12146:62:14"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "12136:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11354:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "11365:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11377:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11385:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "11393:6:14",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "11401:6:14",
														"type": ""
													}
												],
												"src": "11282:943:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12314:391:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12360:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "12362:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12362:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12362:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12335:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12344:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12331:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12331:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12356:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "12327:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12327:32:14"
															},
															"nodeType": "YulIf",
															"src": "12324:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "12453:117:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12468:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12482:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "12472:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "12497:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12532:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12543:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12528:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12528:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12552:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "12507:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12507:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "12497:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "12580:118:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12595:16:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12609:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "12599:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "12625:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12660:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12671:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12656:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12656:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12680:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "12635:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12635:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "12625:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12276:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "12287:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12299:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12307:6:14",
														"type": ""
													}
												],
												"src": "12231:474:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12739:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12756:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12759:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12749:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12749:88:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12749:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12853:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12856:4:14",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12846:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12846:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12846:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12877:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12880:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12870:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12870:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12870:15:14"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "12711:180:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12948:269:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12958:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "12972:4:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12978:1:14",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "12968:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12968:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "12958:6:14"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12989:38:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "13019:4:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13025:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "13015:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13015:12:14"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "12993:18:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13066:51:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "13080:27:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "13094:6:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13102:4:14",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "13090:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13090:17:14"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "13080:6:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "13046:18:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13039:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13039:26:14"
															},
															"nodeType": "YulIf",
															"src": "13036:81:14"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13169:42:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "13183:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13183:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13183:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "13133:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "13156:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13164:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "13153:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13153:14:14"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "13130:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13130:38:14"
															},
															"nodeType": "YulIf",
															"src": "13127:84:14"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "12932:4:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12941:6:14",
														"type": ""
													}
												],
												"src": "12897:320:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13377:288:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13387:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13399:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13410:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13395:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13395:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13387:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13467:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13480:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13491:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13476:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13476:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13423:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13423:71:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13423:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "13548:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13561:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13572:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13557:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13557:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13504:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13504:72:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13504:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "13630:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13643:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13654:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13639:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13639:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13586:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13586:72:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13586:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13333:9:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "13345:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13353:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13361:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13372:4:14",
														"type": ""
													}
												],
												"src": "13223:442:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13785:34:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13795:18:14",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "13810:3:14"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "13795:11:14"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13757:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13762:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "13773:11:14",
														"type": ""
													}
												],
												"src": "13671:148:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13935:280:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13945:53:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13992:5:14"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "13959:32:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13959:39:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "13949:6:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14007:96:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14091:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14096:6:14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14014:76:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14014:89:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14007:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14151:5:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14158:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14147:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14147:16:14"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14165:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14170:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "14112:34:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14112:65:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14112:65:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14186:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14197:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14202:6:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14193:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14193:16:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14186:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13916:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13923:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13931:3:14",
														"type": ""
													}
												],
												"src": "13825:390:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14405:251:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14416:102:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14505:6:14"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14514:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14423:81:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14423:95:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14416:3:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14528:102:14",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "14617:6:14"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14626:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14535:81:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14535:95:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14528:3:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14640:10:14",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "14647:3:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14640:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14376:3:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14382:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14390:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14401:3:14",
														"type": ""
													}
												],
												"src": "14221:435:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14720:40:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14731:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14747:5:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14741:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14741:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "14731:6:14"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14703:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14713:6:14",
														"type": ""
													}
												],
												"src": "14662:98:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14861:73:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14878:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14883:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14871:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14871:19:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14871:19:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14899:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14918:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14923:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14914:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14914:14:14"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "14899:11:14"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14833:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14838:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "14849:11:14",
														"type": ""
													}
												],
												"src": "14766:168:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15030:283:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15040:52:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15086:5:14"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "15054:31:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15054:38:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "15044:6:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15101:77:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15166:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15171:6:14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15108:57:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15108:70:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15101:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15226:5:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15233:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15222:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15222:16:14"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15240:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15245:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "15187:34:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15187:65:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15187:65:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15261:46:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15272:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "15299:6:14"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "15277:21:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15277:29:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15268:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15268:39:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15261:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15011:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15018:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15026:3:14",
														"type": ""
													}
												],
												"src": "14940:373:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15519:440:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15529:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15541:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15552:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15537:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15537:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15529:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15610:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15623:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15634:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15619:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15619:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15566:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15566:71:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15566:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "15691:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15704:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15715:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15700:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15700:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15647:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15647:72:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15647:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "15773:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15786:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15797:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15782:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15782:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15729:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15729:72:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15729:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15822:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15833:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15818:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15818:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15842:4:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15848:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15838:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15838:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15811:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15811:48:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15811:48:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15868:84:14",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "15938:6:14"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15947:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15876:61:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15876:76:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15868:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15467:9:14",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "15479:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "15487:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15495:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15503:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15514:4:14",
														"type": ""
													}
												],
												"src": "15319:640:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16027:79:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16037:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "16052:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "16046:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16046:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "16037:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16094:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "16068:25:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16068:32:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16068:32:14"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "16005:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16013:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16021:5:14",
														"type": ""
													}
												],
												"src": "15965:141:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16188:273:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16234:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "16236:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16236:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16236:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16209:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16218:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16205:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16205:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16230:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "16201:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16201:32:14"
															},
															"nodeType": "YulIf",
															"src": "16198:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "16327:127:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "16342:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16356:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "16346:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "16371:73:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16416:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16427:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16412:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16412:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16436:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "16381:30:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16381:63:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "16371:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16158:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "16169:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16181:6:14",
														"type": ""
													}
												],
												"src": "16112:349:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16495:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16512:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16515:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16505:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16505:88:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16505:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16609:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16612:4:14",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16602:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16602:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16602:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16633:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16636:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "16626:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16626:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16626:15:14"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "16467:180:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16779:206:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16789:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16801:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16812:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16797:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16797:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16789:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16869:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16882:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16893:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16878:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16878:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16825:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16825:71:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16825:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "16950:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16963:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16974:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16959:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16959:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16906:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16906:72:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16906:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16743:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "16755:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16763:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16774:4:14",
														"type": ""
													}
												],
												"src": "16653:332:14"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_Picture_$22_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_Picture_$22_to_t_address(value, pos) {\n        mstore(pos, convert_t_contract$_Picture_$22_to_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    // struct tokenData -> struct tokenData\n    function abi_encode_t_struct$_tokenData_$168_memory_ptr_to_t_struct$_tokenData_$168_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x80)\n\n        {\n            // ownerAddress\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // props\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_contract$_Picture_$22_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // price\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // onSale\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x60))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_tokenData_$168_memory_ptr__to_t_struct$_tokenData_$168_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_struct$_tokenData_$168_memory_ptr_to_t_struct$_tokenData_$168_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x854CBB4A GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xA035B1FE GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xA035B1FE EQ PUSH2 0x33D JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x35B JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x377 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x393 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x3C3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3F3 JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x854CBB4A EQ PUSH2 0x29F JUMPI DUP1 PUSH4 0x8C2A5BC8 EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0x91B7F5ED EQ PUSH2 0x2E5 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0x98D5FDCA EQ PUSH2 0x31F JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x42842E0E GT PUSH2 0x113 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x5987CC19 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x64EDFBF0 EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x295 JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1E9 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x19B4 JUMP JUMPDEST PUSH2 0x40F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x19F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x194 SWAP2 SWAP1 PUSH2 0x1A9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x1AEF JUMP JUMPDEST PUSH2 0x57F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0x1B59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x1B9C JUMP JUMPDEST PUSH2 0x59A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x203 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0x1BDA JUMP JUMPDEST PUSH2 0x5B0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21A SWAP2 SWAP1 PUSH2 0x1BDA JUMP JUMPDEST PUSH2 0x6AF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x229 PUSH2 0x6CE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x245 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x240 SWAP2 SWAP1 PUSH2 0x1AEF JUMP JUMPDEST PUSH2 0x6F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x252 SWAP2 SWAP1 PUSH2 0x1B59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x263 PUSH2 0x703 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x27F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27A SWAP2 SWAP1 PUSH2 0x1C2A JUMP JUMPDEST PUSH2 0x774 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28C SWAP2 SWAP1 PUSH2 0x1C64 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29D PUSH2 0x82A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A7 PUSH2 0x83D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B4 SWAP2 SWAP1 PUSH2 0x1D58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C5 PUSH2 0x8D1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2CF PUSH2 0x8F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DC SWAP2 SWAP1 PUSH2 0x1B59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FA SWAP2 SWAP1 PUSH2 0x1AEF JUMP JUMPDEST PUSH2 0x91C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x309 PUSH2 0x92E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x316 SWAP2 SWAP1 PUSH2 0x1A9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x327 PUSH2 0x9BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x334 SWAP2 SWAP1 PUSH2 0x1C64 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x345 PUSH2 0x9C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x352 SWAP2 SWAP1 PUSH2 0x1C64 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x375 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x370 SWAP2 SWAP1 PUSH2 0x1D9B JUMP JUMPDEST PUSH2 0x9CD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x391 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38C SWAP2 SWAP1 PUSH2 0x1F05 JUMP JUMPDEST PUSH2 0x9E3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A8 SWAP2 SWAP1 PUSH2 0x1AEF JUMP JUMPDEST PUSH2 0xA00 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BA SWAP2 SWAP1 PUSH2 0x1A9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D8 SWAP2 SWAP1 PUSH2 0x1F85 JUMP JUMPDEST PUSH2 0xA66 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EA SWAP2 SWAP1 PUSH2 0x19F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x40D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x408 SWAP2 SWAP1 PUSH2 0x1C2A JUMP JUMPDEST PUSH2 0xAF4 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x4D9 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x4E9 JUMPI POP PUSH2 0x4E8 DUP3 PUSH2 0xB78 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x4FE SWAP1 PUSH2 0x1FF0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x52A SWAP1 PUSH2 0x1FF0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x575 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x54C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x575 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x558 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x589 DUP3 PUSH2 0xBE1 JUMP JUMPDEST POP PUSH2 0x593 DUP3 PUSH2 0xC67 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5AC DUP3 DUP3 PUSH2 0x5A7 PUSH2 0xCA0 JUMP JUMPDEST PUSH2 0xCA7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x620 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x617 SWAP2 SWAP1 PUSH2 0x1B59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x633 DUP4 DUP4 PUSH2 0x62E PUSH2 0xCA0 JUMP JUMPDEST PUSH2 0xCB9 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6A9 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2020 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x6C9 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x9E3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x6D6 PUSH2 0xEC4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x6FC DUP3 PUSH2 0xBE1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x8 SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x748 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH2 0x752 CALLER PUSH2 0xAF4 JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7E5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DC SWAP2 SWAP1 PUSH2 0x1B59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x832 PUSH2 0xEC4 JUMP JUMPDEST PUSH2 0x83B PUSH0 PUSH2 0xF4B JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x845 PUSH2 0x18FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x858 PUSH2 0x8F4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x8D9 PUSH2 0xEC4 JUMP JUMPDEST PUSH0 PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x924 PUSH2 0xEC4 JUMP JUMPDEST DUP1 PUSH1 0x8 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x93D SWAP1 PUSH2 0x1FF0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x969 SWAP1 PUSH2 0x1FF0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9B4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x98B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9B4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x997 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x8 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x9DF PUSH2 0x9D8 PUSH2 0xCA0 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x100E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x9EE DUP5 DUP5 DUP5 PUSH2 0x5B0 JUMP JUMPDEST PUSH2 0x9FA DUP5 DUP5 DUP5 DUP5 PUSH2 0x1177 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA0B DUP3 PUSH2 0xBE1 JUMP JUMPDEST POP PUSH0 PUSH2 0xA15 PUSH2 0x1329 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0xA33 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xA5E JUMP JUMPDEST DUP1 PUSH2 0xA3D DUP5 PUSH2 0x1366 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA4E SWAP3 SWAP2 SWAP1 PUSH2 0x208F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAFC PUSH2 0xEC4 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB6C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB63 SWAP2 SWAP1 PUSH2 0x1B59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB75 DUP2 PUSH2 0xF4B JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xBEC DUP4 PUSH2 0x1430 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC5E JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC55 SWAP2 SWAP1 PUSH2 0x1C64 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xCB4 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1469 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xCC4 DUP5 PUSH2 0x1430 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD05 JUMPI PUSH2 0xD04 DUP2 DUP5 DUP7 PUSH2 0x1628 JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD90 JUMPI PUSH2 0xD44 PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x1469 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE0F JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xECC PUSH2 0xCA0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEEA PUSH2 0x8F4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF49 JUMPI PUSH2 0xF0D PUSH2 0xCA0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF40 SWAP2 SWAP1 PUSH2 0x1B59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x107E JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1075 SWAP2 SWAP1 PUSH2 0x1B59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x116A SWAP2 SWAP1 PUSH2 0x19F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1323 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x11BA PUSH2 0xCA0 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11DC SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2104 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1217 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1214 SWAP2 SWAP1 PUSH2 0x2162 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1298 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1245 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x124A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1290 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1287 SWAP2 SWAP1 PUSH2 0x1B59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1321 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1318 SWAP2 SWAP1 PUSH2 0x1B59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x697066733A2F2F7069656365546F6B656E426173655552490000000000000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x1374 DUP5 PUSH2 0x16EB JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1392 JUMPI PUSH2 0x1391 PUSH2 0x1DE1 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x13C4 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1425 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x141A JUMPI PUSH2 0x1419 PUSH2 0x218D JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x13D1 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x14A1 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x15D3 JUMPI PUSH0 PUSH2 0x14B0 DUP5 PUSH2 0xBE1 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x151A JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x152D JUMPI POP PUSH2 0x152B DUP2 DUP5 PUSH2 0xA66 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x156F JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1566 SWAP2 SWAP1 PUSH2 0x1B59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x15D1 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1633 DUP4 DUP4 DUP4 PUSH2 0x183C JUMP JUMPDEST PUSH2 0x16E6 JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x16A7 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x169E SWAP2 SWAP1 PUSH2 0x1C64 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16DD SWAP3 SWAP2 SWAP1 PUSH2 0x21BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1747 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x173D JUMPI PUSH2 0x173C PUSH2 0x218D JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1784 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x177A JUMPI PUSH2 0x1779 PUSH2 0x218D JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x17B3 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x17A9 JUMPI PUSH2 0x17A8 PUSH2 0x218D JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x17DC JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x17D2 JUMPI PUSH2 0x17D1 PUSH2 0x218D JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1801 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x17F7 JUMPI PUSH2 0x17F6 PUSH2 0x218D JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1824 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x181A JUMPI PUSH2 0x1819 PUSH2 0x218D JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1833 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x18F3 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x18B4 JUMPI POP PUSH2 0x18B3 DUP5 DUP5 PUSH2 0xA66 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x18F2 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x18DA DUP4 PUSH2 0xC67 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1993 DUP2 PUSH2 0x195F JUMP JUMPDEST DUP2 EQ PUSH2 0x199D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19AE DUP2 PUSH2 0x198A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19C9 JUMPI PUSH2 0x19C8 PUSH2 0x1957 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19D6 DUP5 DUP3 DUP6 ADD PUSH2 0x19A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19F3 DUP2 PUSH2 0x19DF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A0C PUSH0 DUP4 ADD DUP5 PUSH2 0x19EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A49 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1A2E JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A6E DUP3 PUSH2 0x1A12 JUMP JUMPDEST PUSH2 0x1A78 DUP2 DUP6 PUSH2 0x1A1C JUMP JUMPDEST SWAP4 POP PUSH2 0x1A88 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A2C JUMP JUMPDEST PUSH2 0x1A91 DUP2 PUSH2 0x1A54 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AB4 DUP2 DUP5 PUSH2 0x1A64 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1ACE DUP2 PUSH2 0x1ABC JUMP JUMPDEST DUP2 EQ PUSH2 0x1AD8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AE9 DUP2 PUSH2 0x1AC5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B04 JUMPI PUSH2 0x1B03 PUSH2 0x1957 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B11 DUP5 DUP3 DUP6 ADD PUSH2 0x1ADB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B43 DUP3 PUSH2 0x1B1A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B53 DUP2 PUSH2 0x1B39 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B6C PUSH0 DUP4 ADD DUP5 PUSH2 0x1B4A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B7B DUP2 PUSH2 0x1B39 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B85 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B96 DUP2 PUSH2 0x1B72 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BB2 JUMPI PUSH2 0x1BB1 PUSH2 0x1957 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BBF DUP6 DUP3 DUP7 ADD PUSH2 0x1B88 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1BD0 DUP6 DUP3 DUP7 ADD PUSH2 0x1ADB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1BF1 JUMPI PUSH2 0x1BF0 PUSH2 0x1957 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BFE DUP7 DUP3 DUP8 ADD PUSH2 0x1B88 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1C0F DUP7 DUP3 DUP8 ADD PUSH2 0x1B88 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1C20 DUP7 DUP3 DUP8 ADD PUSH2 0x1ADB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C3F JUMPI PUSH2 0x1C3E PUSH2 0x1957 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C4C DUP5 DUP3 DUP6 ADD PUSH2 0x1B88 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C5E DUP2 PUSH2 0x1ABC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C77 PUSH0 DUP4 ADD DUP5 PUSH2 0x1C55 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C86 DUP2 PUSH2 0x1B39 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1CAF PUSH2 0x1CAA PUSH2 0x1CA5 DUP5 PUSH2 0x1B1A JUMP JUMPDEST PUSH2 0x1C8C JUMP JUMPDEST PUSH2 0x1B1A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1CC0 DUP3 PUSH2 0x1C95 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1CD1 DUP3 PUSH2 0x1CB6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CE1 DUP2 PUSH2 0x1CC7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1CF0 DUP2 PUSH2 0x1ABC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1CFF DUP2 PUSH2 0x19DF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x80 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x1D19 PUSH0 DUP6 ADD DUP3 PUSH2 0x1C7D JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1D2C PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x1CD8 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x1D3F PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x1CE7 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x1D52 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x1CF6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1D6B PUSH0 DUP4 ADD DUP5 PUSH2 0x1D05 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D7A DUP2 PUSH2 0x19DF JUMP JUMPDEST DUP2 EQ PUSH2 0x1D84 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D95 DUP2 PUSH2 0x1D71 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DB1 JUMPI PUSH2 0x1DB0 PUSH2 0x1957 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DBE DUP6 DUP3 DUP7 ADD PUSH2 0x1B88 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1DCF DUP6 DUP3 DUP7 ADD PUSH2 0x1D87 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1E17 DUP3 PUSH2 0x1A54 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1E36 JUMPI PUSH2 0x1E35 PUSH2 0x1DE1 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E48 PUSH2 0x194E JUMP JUMPDEST SWAP1 POP PUSH2 0x1E54 DUP3 DUP3 PUSH2 0x1E0E JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1E73 JUMPI PUSH2 0x1E72 PUSH2 0x1DE1 JUMP JUMPDEST JUMPDEST PUSH2 0x1E7C DUP3 PUSH2 0x1A54 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1EA9 PUSH2 0x1EA4 DUP5 PUSH2 0x1E59 JUMP JUMPDEST PUSH2 0x1E3F JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1EC5 JUMPI PUSH2 0x1EC4 PUSH2 0x1DDD JUMP JUMPDEST JUMPDEST PUSH2 0x1ED0 DUP5 DUP3 DUP6 PUSH2 0x1E89 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1EEC JUMPI PUSH2 0x1EEB PUSH2 0x1DD9 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1EFC DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1E97 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1F1D JUMPI PUSH2 0x1F1C PUSH2 0x1957 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F2A DUP8 DUP3 DUP9 ADD PUSH2 0x1B88 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1F3B DUP8 DUP3 DUP9 ADD PUSH2 0x1B88 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1F4C DUP8 DUP3 DUP9 ADD PUSH2 0x1ADB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F6D JUMPI PUSH2 0x1F6C PUSH2 0x195B JUMP JUMPDEST JUMPDEST PUSH2 0x1F79 DUP8 DUP3 DUP9 ADD PUSH2 0x1ED8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F9B JUMPI PUSH2 0x1F9A PUSH2 0x1957 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FA8 DUP6 DUP3 DUP7 ADD PUSH2 0x1B88 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1FB9 DUP6 DUP3 DUP7 ADD PUSH2 0x1B88 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2007 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x201A JUMPI PUSH2 0x2019 PUSH2 0x1FC3 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2033 PUSH0 DUP4 ADD DUP7 PUSH2 0x1B4A JUMP JUMPDEST PUSH2 0x2040 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1C55 JUMP JUMPDEST PUSH2 0x204D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1B4A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2069 DUP3 PUSH2 0x1A12 JUMP JUMPDEST PUSH2 0x2073 DUP2 DUP6 PUSH2 0x2055 JUMP JUMPDEST SWAP4 POP PUSH2 0x2083 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A2C JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x209A DUP3 DUP6 PUSH2 0x205F JUMP JUMPDEST SWAP2 POP PUSH2 0x20A6 DUP3 DUP5 PUSH2 0x205F JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x20D6 DUP3 PUSH2 0x20B2 JUMP JUMPDEST PUSH2 0x20E0 DUP2 DUP6 PUSH2 0x20BC JUMP JUMPDEST SWAP4 POP PUSH2 0x20F0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A2C JUMP JUMPDEST PUSH2 0x20F9 DUP2 PUSH2 0x1A54 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2117 PUSH0 DUP4 ADD DUP8 PUSH2 0x1B4A JUMP JUMPDEST PUSH2 0x2124 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1B4A JUMP JUMPDEST PUSH2 0x2131 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1C55 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2143 DUP2 DUP5 PUSH2 0x20CC JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x215C DUP2 PUSH2 0x198A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2177 JUMPI PUSH2 0x2176 PUSH2 0x1957 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2184 DUP5 DUP3 DUP6 ADD PUSH2 0x214E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x21CD PUSH0 DUP4 ADD DUP6 PUSH2 0x1B4A JUMP JUMPDEST PUSH2 0x21DA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1C55 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB DUP15 ORIGIN PUSH15 0xE7EA47C0D58867F51E45BFA898C556 0xB0 LOG0 0x5C 0x25 PUSH17 0x7CA4D4572479C82F64736F6C6343000814 STOP CALLER ",
							"sourceMap": "223:1110:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1607:305:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2438:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3610:158;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3429:115;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4279:588;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4938:134;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1002:70:1;;;:::i;:::-;;2251:120:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1162:166:1;;;:::i;:::-;;1976:213:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2368:103:2;;;:::i;:::-;;669:145:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1080:74;;;:::i;:::-;;1693:87:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;910:84:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2598:95:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;822:80:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;293:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3840:146:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5143:211;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2764:260;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4057:155;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2626:220:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1607:305:4;1709:4;1761:25;1746:40;;;:11;:40;;;;:105;;;;1818:33;1803:48;;;:11;:48;;;;1746:105;:158;;;;1868:36;1892:11;1868:23;:36::i;:::-;1746:158;1726:178;;1607:305;;;:::o;2438:91::-;2483:13;2516:5;2509:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2438:91;:::o;3610:158::-;3677:7;3697:22;3711:7;3697:13;:22::i;:::-;;3739:21;3752:7;3739:12;:21::i;:::-;3732:28;;3610:158;;;:::o;3429:115::-;3501:35;3510:2;3514:7;3523:12;:10;:12::i;:::-;3501:8;:35::i;:::-;3429:115;;:::o;4279:588::-;4388:1;4374:16;;:2;:16;;;4370:89;;4444:1;4414:33;;;;;;;;;;;:::i;:::-;;;;;;;;4370:89;4680:21;4704:34;4712:2;4716:7;4725:12;:10;:12::i;:::-;4704:7;:34::i;:::-;4680:58;;4770:4;4753:21;;:13;:21;;;4749:111;;4819:4;4825:7;4834:13;4798:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;4749:111;4359:508;4279:588;;;:::o;4938:134::-;5025:39;5042:4;5048:2;5052:7;5025:39;;;;;;;;;;;;:16;:39::i;:::-;4938:134;;;:::o;1002:70:1:-;1579:13:2;:11;:13::i;:::-;1060:4:1::1;1051:6;;:13;;;;;;;;;;;;;;;;;;1002:70::o:0;2251:120:4:-;2314:7;2341:22;2355:7;2341:13;:22::i;:::-;2334:29;;2251:120;;;:::o;1162:166:1:-;1208:10;1200:28;;:35;1229:5;;1200:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1246:29;1264:10;1246:17;:29::i;:::-;1294:1;1286:5;:9;;;;1315:5;1306:6;;:14;;;;;;;;;;;;;;;;;;1162:166::o;1976:213:4:-;2039:7;2080:1;2063:19;;:5;:19;;;2059:89;;2133:1;2106:30;;;;;;;;;;;:::i;:::-;;;;;;;;2059:89;2165:9;:16;2175:5;2165:16;;;;;;;;;;;;;;;;2158:23;;1976:213;;;:::o;2368:103:2:-;1579:13;:11;:13::i;:::-;2433:30:::1;2460:1;2433:18;:30::i;:::-;2368:103::o:0;669:145:1:-;722:16;;:::i;:::-;758:48;;;;;;;;768:15;:13;:15::i;:::-;758:48;;;;;;785:5;;;;;;;;;;;758:48;;;;;;792:5;;758:48;;;;799:6;;;;;;;;;;;758:48;;;;;751:55;;669:145;:::o;1080:74::-;1579:13:2;:11;:13::i;:::-;1141:5:1::1;1132:6;;:14;;;;;;;;;;;;;;;;;;1080:74::o:0;1693:87:2:-;1739:7;1766:6;;;;;;;;;;;1759:13;;1693:87;:::o;910:84:1:-;1579:13:2;:11;:13::i;:::-;980:6:1::1;972:5;:14;;;;910:84:::0;:::o;2598:95:4:-;2645:13;2678:7;2671:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2598:95;:::o;822:80:1:-;862:7;889:5;;882:12;;822:80;:::o;293:20::-;;;;:::o;3840:146:4:-;3926:52;3945:12;:10;:12::i;:::-;3959:8;3969;3926:18;:52::i;:::-;3840:146;;:::o;5143:211::-;5257:31;5270:4;5276:2;5280:7;5257:12;:31::i;:::-;5299:47;5322:4;5328:2;5332:7;5341:4;5299:22;:47::i;:::-;5143:211;;;;:::o;2764:260::-;2828:13;2854:22;2868:7;2854:13;:22::i;:::-;;2889:21;2913:10;:8;:10::i;:::-;2889:34;;2965:1;2947:7;2941:21;:25;:75;;;;;;;;;;;;;;;;;2983:7;2992:18;:7;:16;:18::i;:::-;2969:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2941:75;2934:82;;;2764:260;;;:::o;4057:155::-;4145:4;4169:18;:25;4188:5;4169:25;;;;;;;;;;;;;;;:35;4195:8;4169:35;;;;;;;;;;;;;;;;;;;;;;;;;4162:42;;4057:155;;;;:::o;2626:220:2:-;1579:13;:11;:13::i;:::-;2731:1:::1;2711:22;;:8;:22;;::::0;2707:93:::1;;2785:1;2757:31;;;;;;;;;;;:::i;:::-;;;;;;;;2707:93;2810:28;2829:8;2810:18;:28::i;:::-;2626:220:::0;:::o;785:148:10:-;861:4;900:25;885:40;;;:11;:40;;;;878:47;;785:148;;;:::o;16585:247:4:-;16648:7;16668:13;16684:17;16693:7;16684:8;:17::i;:::-;16668:33;;16733:1;16716:19;;:5;:19;;;16712:90;;16782:7;16759:31;;;;;;;;;;;:::i;:::-;;;;;;;;16712:90;16819:5;16812:12;;;16585:247;;;:::o;6116:129::-;6186:7;6213:15;:24;6229:7;6213:24;;;;;;;;;;;;;;;;;;;;;6206:31;;6116:129;;;:::o;672:98:8:-;725:7;752:10;745:17;;672:98;:::o;14817:122:4:-;14898:33;14907:2;14911:7;14920:4;14926;14898:8;:33::i;:::-;14817:122;;;:::o;9078:824::-;9164:7;9184:12;9199:17;9208:7;9199:8;:17::i;:::-;9184:32;;9295:1;9279:18;;:4;:18;;;9275:88;;9314:37;9331:4;9337;9343:7;9314:16;:37::i;:::-;9275:88;9426:1;9410:18;;:4;:18;;;9406:263;;9528:48;9545:1;9549:7;9566:1;9570:5;9528:8;:48::i;:::-;9641:1;9622:9;:15;9632:4;9622:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;9406:263;9699:1;9685:16;;:2;:16;;;9681:111;;9764:1;9747:9;:13;9757:2;9747:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9681:111;9823:2;9804:7;:16;9812:7;9804:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9862:7;9858:2;9843:27;;9852:4;9843:27;;;;;;;;;;;;9890:4;9883:11;;;9078:824;;;;;:::o;1858:166:2:-;1929:12;:10;:12::i;:::-;1918:23;;:7;:5;:7::i;:::-;:23;;;1914:103;;1992:12;:10;:12::i;:::-;1965:40;;;;;;;;;;;:::i;:::-;;;;;;;;1914:103;1858:166::o;3006:191::-;3080:16;3099:6;;;;;;;;;;;3080:25;;3125:8;3116:6;;:17;;;;;;;;;;;;;;;;;;3180:8;3149:40;;3170:8;3149:40;;;;;;;;;;;;3069:128;3006:191;:::o;16024:318:4:-;16152:1;16132:22;;:8;:22;;;16128:93;;16200:8;16178:31;;;;;;;;;;;:::i;:::-;;;;;;;;16128:93;16269:8;16231:18;:25;16250:5;16231:25;;;;;;;;;;;;;;;:35;16257:8;16231:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;16315:8;16293:41;;16308:5;16293:41;;;16325:8;16293:41;;;;;;:::i;:::-;;;;;;;;16024:318;;;:::o;17382:799::-;17516:1;17499:2;:14;;;:18;17495:679;;;17554:2;17538:36;;;17575:12;:10;:12::i;:::-;17589:4;17595:7;17604:4;17538:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;17534:629;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17869:1;17852:6;:13;:18;17848:300;;17924:2;17902:25;;;;;;;;;;;:::i;:::-;;;;;;;;17848:300;18098:6;18092:13;18083:6;18079:2;18075:15;18068:38;17534:629;17667:41;;;17657:51;;;:6;:51;;;;17653:132;;17762:2;17740:25;;;;;;;;;;;:::i;:::-;;;;;;;;17653:132;17610:190;17495:679;17382:799;;;;:::o;542:119:1:-;594:13;620:33;;;;;;;;;;;;;;;;;;;542:119;:::o;660:718:9:-;716:13;767:14;804:1;784:17;795:5;784:10;:17::i;:::-;:21;767:38;;820:20;854:6;843:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;820:41;;876:11;1005:6;1001:2;997:15;989:6;985:28;978:35;;1042:290;1049:4;1042:290;;;1074:5;;;;;;;;1216:10;1211:2;1204:5;1200:14;1195:32;1190:3;1182:46;1274:2;1265:11;;;;;;:::i;:::-;;;;;1308:1;1299:5;:10;1042:290;1295:21;1042:290;1353:6;1346:13;;;;;660:718;;;:::o;5878:117:4:-;5944:7;5971;:16;5979:7;5971:16;;;;;;;;;;;;;;;;;;;;;5964:23;;5878:117;;;:::o;15127:678::-;15289:9;:31;;;;15318:1;15302:18;;:4;:18;;;;15289:31;15285:471;;;15337:13;15353:22;15367:7;15353:13;:22::i;:::-;15337:38;;15522:1;15506:18;;:4;:18;;;;:35;;;;;15537:4;15528:13;;:5;:13;;;;15506:35;:69;;;;;15546:29;15563:5;15570:4;15546:16;:29::i;:::-;15545:30;15506:69;15502:144;;;15625:4;15603:27;;;;;;;;;;;:::i;:::-;;;;;;;;15502:144;15666:9;15662:83;;;15721:7;15717:2;15701:28;;15710:5;15701:28;;;;;;;;;;;;15662:83;15322:434;15285:471;15795:2;15768:15;:24;15784:7;15768:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;15127:678;;;;:::o;7285:376::-;7398:38;7412:5;7419:7;7428;7398:13;:38::i;:::-;7393:261;;7474:1;7457:19;;:5;:19;;;7453:190;;7527:7;7504:31;;;;;;;;;;;:::i;:::-;;;;;;;;7453:190;7610:7;7619;7583:44;;;;;;;;;;;;:::i;:::-;;;;;;;;7393:261;7285:376;;;:::o;12534:948:12:-;12587:7;12607:14;12624:1;12607:18;;12674:8;12665:5;:17;12661:106;;12712:8;12703:17;;;;;;:::i;:::-;;;;;12749:2;12739:12;;;;12661:106;12794:8;12785:5;:17;12781:106;;12832:8;12823:17;;;;;;:::i;:::-;;;;;12869:2;12859:12;;;;12781:106;12914:8;12905:5;:17;12901:106;;12952:8;12943:17;;;;;;:::i;:::-;;;;;12989:2;12979:12;;;;12901:106;13034:7;13025:5;:16;13021:103;;13071:7;13062:16;;;;;;:::i;:::-;;;;;13107:1;13097:11;;;;13021:103;13151:7;13142:5;:16;13138:103;;13188:7;13179:16;;;;;;:::i;:::-;;;;;13224:1;13214:11;;;;13138:103;13268:7;13259:5;:16;13255:103;;13305:7;13296:16;;;;;;:::i;:::-;;;;;13341:1;13331:11;;;;13255:103;13385:7;13376:5;:16;13372:68;;13423:1;13413:11;;;;13372:68;13468:6;13461:13;;;12534:948;;;:::o;6565:276:4:-;6668:4;6724:1;6705:21;;:7;:21;;;;:128;;;;;6753:7;6744:16;;:5;:16;;;:52;;;;6764:32;6781:5;6788:7;6764:16;:32::i;:::-;6744:52;:88;;;;6825:7;6800:32;;:21;6813:7;6800:12;:21::i;:::-;:32;;;6744:88;6705:128;6685:148;;6565:276;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:75:14:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:77::-;2897:7;2926:5;2915:16;;2860:77;;;:::o;2943:122::-;3016:24;3034:5;3016:24;:::i;:::-;3009:5;3006:35;2996:63;;3055:1;3052;3045:12;2996:63;2943:122;:::o;3071:139::-;3117:5;3155:6;3142:20;3133:29;;3171:33;3198:5;3171:33;:::i;:::-;3071:139;;;;:::o;3216:329::-;3275:6;3324:2;3312:9;3303:7;3299:23;3295:32;3292:119;;;3330:79;;:::i;:::-;3292:119;3450:1;3475:53;3520:7;3511:6;3500:9;3496:22;3475:53;:::i;:::-;3465:63;;3421:117;3216:329;;;;:::o;3551:126::-;3588:7;3628:42;3621:5;3617:54;3606:65;;3551:126;;;:::o;3683:96::-;3720:7;3749:24;3767:5;3749:24;:::i;:::-;3738:35;;3683:96;;;:::o;3785:118::-;3872:24;3890:5;3872:24;:::i;:::-;3867:3;3860:37;3785:118;;:::o;3909:222::-;4002:4;4040:2;4029:9;4025:18;4017:26;;4053:71;4121:1;4110:9;4106:17;4097:6;4053:71;:::i;:::-;3909:222;;;;:::o;4137:122::-;4210:24;4228:5;4210:24;:::i;:::-;4203:5;4200:35;4190:63;;4249:1;4246;4239:12;4190:63;4137:122;:::o;4265:139::-;4311:5;4349:6;4336:20;4327:29;;4365:33;4392:5;4365:33;:::i;:::-;4265:139;;;;:::o;4410:474::-;4478:6;4486;4535:2;4523:9;4514:7;4510:23;4506:32;4503:119;;;4541:79;;:::i;:::-;4503:119;4661:1;4686:53;4731:7;4722:6;4711:9;4707:22;4686:53;:::i;:::-;4676:63;;4632:117;4788:2;4814:53;4859:7;4850:6;4839:9;4835:22;4814:53;:::i;:::-;4804:63;;4759:118;4410:474;;;;;:::o;4890:619::-;4967:6;4975;4983;5032:2;5020:9;5011:7;5007:23;5003:32;5000:119;;;5038:79;;:::i;:::-;5000:119;5158:1;5183:53;5228:7;5219:6;5208:9;5204:22;5183:53;:::i;:::-;5173:63;;5129:117;5285:2;5311:53;5356:7;5347:6;5336:9;5332:22;5311:53;:::i;:::-;5301:63;;5256:118;5413:2;5439:53;5484:7;5475:6;5464:9;5460:22;5439:53;:::i;:::-;5429:63;;5384:118;4890:619;;;;;:::o;5515:329::-;5574:6;5623:2;5611:9;5602:7;5598:23;5594:32;5591:119;;;5629:79;;:::i;:::-;5591:119;5749:1;5774:53;5819:7;5810:6;5799:9;5795:22;5774:53;:::i;:::-;5764:63;;5720:117;5515:329;;;;:::o;5850:118::-;5937:24;5955:5;5937:24;:::i;:::-;5932:3;5925:37;5850:118;;:::o;5974:222::-;6067:4;6105:2;6094:9;6090:18;6082:26;;6118:71;6186:1;6175:9;6171:17;6162:6;6118:71;:::i;:::-;5974:222;;;;:::o;6202:108::-;6279:24;6297:5;6279:24;:::i;:::-;6274:3;6267:37;6202:108;;:::o;6316:60::-;6344:3;6365:5;6358:12;;6316:60;;;:::o;6382:142::-;6432:9;6465:53;6483:34;6492:24;6510:5;6492:24;:::i;:::-;6483:34;:::i;:::-;6465:53;:::i;:::-;6452:66;;6382:142;;;:::o;6530:126::-;6580:9;6613:37;6644:5;6613:37;:::i;:::-;6600:50;;6530:126;;;:::o;6662:140::-;6726:9;6759:37;6790:5;6759:37;:::i;:::-;6746:50;;6662:140;;;:::o;6808:149::-;6899:51;6944:5;6899:51;:::i;:::-;6894:3;6887:64;6808:149;;:::o;6963:108::-;7040:24;7058:5;7040:24;:::i;:::-;7035:3;7028:37;6963:108;;:::o;7077:99::-;7148:21;7163:5;7148:21;:::i;:::-;7143:3;7136:34;7077:99;;:::o;7226:877::-;7375:4;7370:3;7366:14;7470:4;7463:5;7459:16;7453:23;7489:63;7546:4;7541:3;7537:14;7523:12;7489:63;:::i;:::-;7390:172;7645:4;7638:5;7634:16;7628:23;7664:77;7735:4;7730:3;7726:14;7712:12;7664:77;:::i;:::-;7572:179;7834:4;7827:5;7823:16;7817:23;7853:63;7910:4;7905:3;7901:14;7887:12;7853:63;:::i;:::-;7761:165;8010:4;8003:5;7999:16;7993:23;8029:57;8080:4;8075:3;8071:14;8057:12;8029:57;:::i;:::-;7936:160;7344:759;7226:877;;:::o;8109:327::-;8254:4;8292:3;8281:9;8277:19;8269:27;;8306:123;8426:1;8415:9;8411:17;8402:6;8306:123;:::i;:::-;8109:327;;;;:::o;8442:116::-;8512:21;8527:5;8512:21;:::i;:::-;8505:5;8502:32;8492:60;;8548:1;8545;8538:12;8492:60;8442:116;:::o;8564:133::-;8607:5;8645:6;8632:20;8623:29;;8661:30;8685:5;8661:30;:::i;:::-;8564:133;;;;:::o;8703:468::-;8768:6;8776;8825:2;8813:9;8804:7;8800:23;8796:32;8793:119;;;8831:79;;:::i;:::-;8793:119;8951:1;8976:53;9021:7;9012:6;9001:9;8997:22;8976:53;:::i;:::-;8966:63;;8922:117;9078:2;9104:50;9146:7;9137:6;9126:9;9122:22;9104:50;:::i;:::-;9094:60;;9049:115;8703:468;;;;;:::o;9177:117::-;9286:1;9283;9276:12;9300:117;9409:1;9406;9399:12;9423:180;9471:77;9468:1;9461:88;9568:4;9565:1;9558:15;9592:4;9589:1;9582:15;9609:281;9692:27;9714:4;9692:27;:::i;:::-;9684:6;9680:40;9822:6;9810:10;9807:22;9786:18;9774:10;9771:34;9768:62;9765:88;;;9833:18;;:::i;:::-;9765:88;9873:10;9869:2;9862:22;9652:238;9609:281;;:::o;9896:129::-;9930:6;9957:20;;:::i;:::-;9947:30;;9986:33;10014:4;10006:6;9986:33;:::i;:::-;9896:129;;;:::o;10031:307::-;10092:4;10182:18;10174:6;10171:30;10168:56;;;10204:18;;:::i;:::-;10168:56;10242:29;10264:6;10242:29;:::i;:::-;10234:37;;10326:4;10320;10316:15;10308:23;;10031:307;;;:::o;10344:146::-;10441:6;10436:3;10431;10418:30;10482:1;10473:6;10468:3;10464:16;10457:27;10344:146;;;:::o;10496:423::-;10573:5;10598:65;10614:48;10655:6;10614:48;:::i;:::-;10598:65;:::i;:::-;10589:74;;10686:6;10679:5;10672:21;10724:4;10717:5;10713:16;10762:3;10753:6;10748:3;10744:16;10741:25;10738:112;;;10769:79;;:::i;:::-;10738:112;10859:54;10906:6;10901:3;10896;10859:54;:::i;:::-;10579:340;10496:423;;;;;:::o;10938:338::-;10993:5;11042:3;11035:4;11027:6;11023:17;11019:27;11009:122;;11050:79;;:::i;:::-;11009:122;11167:6;11154:20;11192:78;11266:3;11258:6;11251:4;11243:6;11239:17;11192:78;:::i;:::-;11183:87;;10999:277;10938:338;;;;:::o;11282:943::-;11377:6;11385;11393;11401;11450:3;11438:9;11429:7;11425:23;11421:33;11418:120;;;11457:79;;:::i;:::-;11418:120;11577:1;11602:53;11647:7;11638:6;11627:9;11623:22;11602:53;:::i;:::-;11592:63;;11548:117;11704:2;11730:53;11775:7;11766:6;11755:9;11751:22;11730:53;:::i;:::-;11720:63;;11675:118;11832:2;11858:53;11903:7;11894:6;11883:9;11879:22;11858:53;:::i;:::-;11848:63;;11803:118;11988:2;11977:9;11973:18;11960:32;12019:18;12011:6;12008:30;12005:117;;;12041:79;;:::i;:::-;12005:117;12146:62;12200:7;12191:6;12180:9;12176:22;12146:62;:::i;:::-;12136:72;;11931:287;11282:943;;;;;;;:::o;12231:474::-;12299:6;12307;12356:2;12344:9;12335:7;12331:23;12327:32;12324:119;;;12362:79;;:::i;:::-;12324:119;12482:1;12507:53;12552:7;12543:6;12532:9;12528:22;12507:53;:::i;:::-;12497:63;;12453:117;12609:2;12635:53;12680:7;12671:6;12660:9;12656:22;12635:53;:::i;:::-;12625:63;;12580:118;12231:474;;;;;:::o;12711:180::-;12759:77;12756:1;12749:88;12856:4;12853:1;12846:15;12880:4;12877:1;12870:15;12897:320;12941:6;12978:1;12972:4;12968:12;12958:22;;13025:1;13019:4;13015:12;13046:18;13036:81;;13102:4;13094:6;13090:17;13080:27;;13036:81;13164:2;13156:6;13153:14;13133:18;13130:38;13127:84;;13183:18;;:::i;:::-;13127:84;12948:269;12897:320;;;:::o;13223:442::-;13372:4;13410:2;13399:9;13395:18;13387:26;;13423:71;13491:1;13480:9;13476:17;13467:6;13423:71;:::i;:::-;13504:72;13572:2;13561:9;13557:18;13548:6;13504:72;:::i;:::-;13586;13654:2;13643:9;13639:18;13630:6;13586:72;:::i;:::-;13223:442;;;;;;:::o;13671:148::-;13773:11;13810:3;13795:18;;13671:148;;;;:::o;13825:390::-;13931:3;13959:39;13992:5;13959:39;:::i;:::-;14014:89;14096:6;14091:3;14014:89;:::i;:::-;14007:96;;14112:65;14170:6;14165:3;14158:4;14151:5;14147:16;14112:65;:::i;:::-;14202:6;14197:3;14193:16;14186:23;;13935:280;13825:390;;;;:::o;14221:435::-;14401:3;14423:95;14514:3;14505:6;14423:95;:::i;:::-;14416:102;;14535:95;14626:3;14617:6;14535:95;:::i;:::-;14528:102;;14647:3;14640:10;;14221:435;;;;;:::o;14662:98::-;14713:6;14747:5;14741:12;14731:22;;14662:98;;;:::o;14766:168::-;14849:11;14883:6;14878:3;14871:19;14923:4;14918:3;14914:14;14899:29;;14766:168;;;;:::o;14940:373::-;15026:3;15054:38;15086:5;15054:38;:::i;:::-;15108:70;15171:6;15166:3;15108:70;:::i;:::-;15101:77;;15187:65;15245:6;15240:3;15233:4;15226:5;15222:16;15187:65;:::i;:::-;15277:29;15299:6;15277:29;:::i;:::-;15272:3;15268:39;15261:46;;15030:283;14940:373;;;;:::o;15319:640::-;15514:4;15552:3;15541:9;15537:19;15529:27;;15566:71;15634:1;15623:9;15619:17;15610:6;15566:71;:::i;:::-;15647:72;15715:2;15704:9;15700:18;15691:6;15647:72;:::i;:::-;15729;15797:2;15786:9;15782:18;15773:6;15729:72;:::i;:::-;15848:9;15842:4;15838:20;15833:2;15822:9;15818:18;15811:48;15876:76;15947:4;15938:6;15876:76;:::i;:::-;15868:84;;15319:640;;;;;;;:::o;15965:141::-;16021:5;16052:6;16046:13;16037:22;;16068:32;16094:5;16068:32;:::i;:::-;15965:141;;;;:::o;16112:349::-;16181:6;16230:2;16218:9;16209:7;16205:23;16201:32;16198:119;;;16236:79;;:::i;:::-;16198:119;16356:1;16381:63;16436:7;16427:6;16416:9;16412:22;16381:63;:::i;:::-;16371:73;;16327:127;16112:349;;;;:::o;16467:180::-;16515:77;16512:1;16505:88;16612:4;16609:1;16602:15;16636:4;16633:1;16626:15;16653:332;16774:4;16812:2;16801:9;16797:18;16789:26;;16825:71;16893:1;16882:9;16878:17;16869:6;16825:71;:::i;:::-;16906:72;16974:2;16963:9;16959:18;16950:6;16906:72;:::i;:::-;16653:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1745400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "infinite",
								"getApproved(uint256)": "infinite",
								"getPrice()": "2565",
								"getSinglePictureToken()": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"notPutOnSale()": "infinite",
								"owner()": "2582",
								"ownerOf(uint256)": "infinite",
								"price()": "2447",
								"purchase()": "infinite",
								"putOnSale()": "infinite",
								"renounceOwnership()": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"setPrice(uint256)": "infinite",
								"supportsInterface(bytes4)": "787",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"_baseURI()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 223,
									"end": 1333,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 223,
									"end": 1333,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 223,
									"end": 1333,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 340,
									"end": 534,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 340,
									"end": 534,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 340,
									"end": 534,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 340,
									"end": 534,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 340,
									"end": 534,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 340,
									"end": 534,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 340,
									"end": 534,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 340,
									"end": 534,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 340,
									"end": 534,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 340,
									"end": 534,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 340,
									"end": 534,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 340,
									"end": 534,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 340,
									"end": 534,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 340,
									"end": 534,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 340,
									"end": 534,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 340,
									"end": 534,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 340,
									"end": 534,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 340,
									"end": 534,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 340,
									"end": 534,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 340,
									"end": 534,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 340,
									"end": 534,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 340,
									"end": 534,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 340,
									"end": 534,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 340,
									"end": 534,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 340,
									"end": 534,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 340,
									"end": 534,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 340,
									"end": 534,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 340,
									"end": 534,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 340,
									"end": 534,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 340,
									"end": 534,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 340,
									"end": 534,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 340,
									"end": 534,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 340,
									"end": 534,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 340,
									"end": 534,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 340,
									"end": 534,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 437,
									"end": 449,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "PUSH",
									"source": 4,
									"value": "C"
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "PUSH",
									"source": 4,
									"value": "50696374757265546F6B656E0000000000000000000000000000000000000000"
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "PUSH",
									"source": 4,
									"value": "5054000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1494,
									"end": 1499,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1486,
									"end": 1491,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1486,
									"end": 1499,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1486,
									"end": 1499,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1486,
									"end": 1499,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1486,
									"end": 1499,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1486,
									"end": 1499,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1486,
									"end": 1499,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1486,
									"end": 1499,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1486,
									"end": 1499,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1486,
									"end": 1499,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1486,
									"end": 1499,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1520,
									"end": 1527,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1510,
									"end": 1517,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1510,
									"end": 1527,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1510,
									"end": 1527,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1510,
									"end": 1527,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 1510,
									"end": 1527,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1510,
									"end": 1527,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1510,
									"end": 1527,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1510,
									"end": 1527,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1510,
									"end": 1527,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 1510,
									"end": 1527,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1510,
									"end": 1527,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1419,
									"end": 1535,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1335,
									"end": 1336,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1311,
									"end": 1337,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1311,
									"end": 1337,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1311,
									"end": 1323,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1311,
									"end": 1337,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1311,
									"end": 1337,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1311,
									"end": 1337,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1307,
									"end": 1404,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 1307,
									"end": 1404,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1389,
									"end": 1390,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "PUSH",
									"source": 2,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 1361,
									"end": 1392,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1361,
									"end": 1392,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1307,
									"end": 1404,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 1307,
									"end": 1404,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1414,
									"end": 1446,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 1433,
									"end": 1445,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1414,
									"end": 1432,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1414,
									"end": 1432,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1414,
									"end": 1432,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 1414,
									"end": 1446,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1414,
									"end": 1446,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 1414,
									"end": 1446,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1414,
									"end": 1446,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 1414,
									"end": 1446,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1262,
									"end": 1454,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 475,
									"end": 481,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 467,
									"end": 472,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 467,
									"end": 472,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 481,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 467,
									"end": 481,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 467,
									"end": 481,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 467,
									"end": 481,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 467,
									"end": 481,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 467,
									"end": 481,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 467,
									"end": 481,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 467,
									"end": 481,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 467,
									"end": 481,
									"modifierDepth": 2,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 467,
									"end": 481,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 467,
									"end": 481,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 467,
									"end": 481,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 467,
									"end": 481,
									"modifierDepth": 2,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 467,
									"end": 481,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 467,
									"end": 481,
									"modifierDepth": 2,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 467,
									"end": 481,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 467,
									"end": 481,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 467,
									"end": 481,
									"modifierDepth": 2,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 500,
									"end": 501,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 492,
									"end": 497,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 492,
									"end": 501,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 492,
									"end": 501,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 492,
									"end": 501,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 492,
									"end": 501,
									"modifierDepth": 2,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 521,
									"end": 526,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 512,
									"end": 518,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 512,
									"end": 518,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 512,
									"end": 526,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 512,
									"end": 526,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 512,
									"end": 526,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 512,
									"end": 526,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 512,
									"end": 526,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 512,
									"end": 526,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 512,
									"end": 526,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 512,
									"end": 526,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 512,
									"end": 526,
									"modifierDepth": 2,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 512,
									"end": 526,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 512,
									"end": 526,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 512,
									"end": 526,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 512,
									"end": 526,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 512,
									"end": 526,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 512,
									"end": 526,
									"modifierDepth": 2,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 512,
									"end": 526,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 512,
									"end": 526,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 512,
									"end": 526,
									"modifierDepth": 2,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 340,
									"end": 534,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 340,
									"end": 534,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 223,
									"end": 1333,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 223,
									"end": 1333,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3006,
									"end": 3197,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 3006,
									"end": 3197,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3080,
									"end": 3096,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3099,
									"end": 3105,
									"name": "PUSH",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 3099,
									"end": 3105,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3099,
									"end": 3105,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3099,
									"end": 3105,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 3099,
									"end": 3105,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3099,
									"end": 3105,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 3099,
									"end": 3105,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 3099,
									"end": 3105,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3099,
									"end": 3105,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 3099,
									"end": 3105,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3099,
									"end": 3105,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 3080,
									"end": 3105,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3080,
									"end": 3105,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3125,
									"end": 3133,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3116,
									"end": 3122,
									"name": "PUSH",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 3116,
									"end": 3122,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 3116,
									"end": 3133,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3180,
									"end": 3188,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3149,
									"end": 3189,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3149,
									"end": 3189,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 3170,
									"end": 3178,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3149,
									"end": 3189,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3149,
									"end": 3189,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 3149,
									"end": 3189,
									"name": "PUSH",
									"source": 2,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3149,
									"end": 3189,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 3149,
									"end": 3189,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 3149,
									"end": 3189,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 3149,
									"end": 3189,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 3149,
									"end": 3189,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3149,
									"end": 3189,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3149,
									"end": 3189,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 3149,
									"end": 3189,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3149,
									"end": 3189,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 3069,
									"end": 3197,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3006,
									"end": 3197,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3006,
									"end": 3197,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 14,
									"value": "21"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 14,
									"value": "23"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "57"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "23"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 14,
									"value": "57"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 14,
									"value": "25"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "59"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 14,
									"value": "59"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "60"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 14,
									"value": "60"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 14,
									"value": "26"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "62"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 14,
									"value": "62"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 845,
									"end": 955,
									"name": "tag",
									"source": 14,
									"value": "27"
								},
								{
									"begin": 845,
									"end": 955,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 896,
									"end": 903,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 925,
									"end": 949,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "64"
								},
								{
									"begin": 943,
									"end": 948,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 925,
									"end": 949,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 925,
									"end": 949,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 925,
									"end": 949,
									"name": "tag",
									"source": 14,
									"value": "64"
								},
								{
									"begin": 925,
									"end": 949,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 914,
									"end": 949,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 914,
									"end": 949,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 845,
									"end": 955,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 845,
									"end": 955,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 845,
									"end": 955,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 845,
									"end": 955,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 961,
									"end": 1111,
									"name": "tag",
									"source": 14,
									"value": "28"
								},
								{
									"begin": 961,
									"end": 1111,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1048,
									"end": 1086,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "66"
								},
								{
									"begin": 1080,
									"end": 1085,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1048,
									"end": 1086,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "27"
								},
								{
									"begin": 1048,
									"end": 1086,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1048,
									"end": 1086,
									"name": "tag",
									"source": 14,
									"value": "66"
								},
								{
									"begin": 1048,
									"end": 1086,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1041,
									"end": 1046,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1038,
									"end": 1087,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 1028,
									"end": 1105,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "67"
								},
								{
									"begin": 1028,
									"end": 1105,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1101,
									"end": 1102,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1098,
									"end": 1099,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1091,
									"end": 1103,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 1028,
									"end": 1105,
									"name": "tag",
									"source": 14,
									"value": "67"
								},
								{
									"begin": 1028,
									"end": 1105,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 961,
									"end": 1111,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 961,
									"end": 1111,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1117,
									"end": 1288,
									"name": "tag",
									"source": 14,
									"value": "29"
								},
								{
									"begin": 1117,
									"end": 1288,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1188,
									"end": 1193,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1219,
									"end": 1225,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1213,
									"end": 1226,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 1204,
									"end": 1226,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1204,
									"end": 1226,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1235,
									"end": 1282,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "69"
								},
								{
									"begin": 1276,
									"end": 1281,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1235,
									"end": 1282,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "28"
								},
								{
									"begin": 1235,
									"end": 1282,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1235,
									"end": 1282,
									"name": "tag",
									"source": 14,
									"value": "69"
								},
								{
									"begin": 1235,
									"end": 1282,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1117,
									"end": 1288,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 1117,
									"end": 1288,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1117,
									"end": 1288,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1117,
									"end": 1288,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1117,
									"end": 1288,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1294,
									"end": 1829,
									"name": "tag",
									"source": 14,
									"value": "3"
								},
								{
									"begin": 1294,
									"end": 1829,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1387,
									"end": 1393,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1395,
									"end": 1401,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1444,
									"end": 1446,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 1432,
									"end": 1441,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 1423,
									"end": 1430,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 1419,
									"end": 1442,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 1415,
									"end": 1447,
									"name": "SLT",
									"source": 14
								},
								{
									"begin": 1412,
									"end": 1531,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 1412,
									"end": 1531,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "71"
								},
								{
									"begin": 1412,
									"end": 1531,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1450,
									"end": 1529,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "72"
								},
								{
									"begin": 1450,
									"end": 1529,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "21"
								},
								{
									"begin": 1450,
									"end": 1529,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1450,
									"end": 1529,
									"name": "tag",
									"source": 14,
									"value": "72"
								},
								{
									"begin": 1450,
									"end": 1529,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1412,
									"end": 1531,
									"name": "tag",
									"source": 14,
									"value": "71"
								},
								{
									"begin": 1412,
									"end": 1531,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1570,
									"end": 1571,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1595,
									"end": 1659,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 1651,
									"end": 1658,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 1642,
									"end": 1648,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1631,
									"end": 1640,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 1627,
									"end": 1649,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1595,
									"end": 1659,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "26"
								},
								{
									"begin": 1595,
									"end": 1659,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1595,
									"end": 1659,
									"name": "tag",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 1595,
									"end": 1659,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1585,
									"end": 1659,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 1585,
									"end": 1659,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1541,
									"end": 1669,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1708,
									"end": 1710,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1812,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "74"
								},
								{
									"begin": 1804,
									"end": 1811,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 1795,
									"end": 1801,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1784,
									"end": 1793,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 1780,
									"end": 1802,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1734,
									"end": 1812,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "29"
								},
								{
									"begin": 1734,
									"end": 1812,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1734,
									"end": 1812,
									"name": "tag",
									"source": 14,
									"value": "74"
								},
								{
									"begin": 1734,
									"end": 1812,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1724,
									"end": 1812,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1724,
									"end": 1812,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1679,
									"end": 1822,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1294,
									"end": 1829,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 1294,
									"end": 1829,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1294,
									"end": 1829,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 1294,
									"end": 1829,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1294,
									"end": 1829,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1294,
									"end": 1829,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1835,
									"end": 1934,
									"name": "tag",
									"source": 14,
									"value": "30"
								},
								{
									"begin": 1835,
									"end": 1934,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1887,
									"end": 1893,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1921,
									"end": 1926,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1915,
									"end": 1927,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 1905,
									"end": 1927,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1905,
									"end": 1927,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1835,
									"end": 1934,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1835,
									"end": 1934,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1835,
									"end": 1934,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1835,
									"end": 1934,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1940,
									"end": 2120,
									"name": "tag",
									"source": 14,
									"value": "31"
								},
								{
									"begin": 1940,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1988,
									"end": 2065,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1985,
									"end": 1986,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1978,
									"end": 2066,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 2085,
									"end": 2089,
									"name": "PUSH",
									"source": 14,
									"value": "41"
								},
								{
									"begin": 2082,
									"end": 2083,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 2075,
									"end": 2090,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 2109,
									"end": 2113,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 2106,
									"end": 2107,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2099,
									"end": 2114,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 2126,
									"end": 2306,
									"name": "tag",
									"source": 14,
									"value": "32"
								},
								{
									"begin": 2126,
									"end": 2306,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2174,
									"end": 2251,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2171,
									"end": 2172,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2164,
									"end": 2252,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 2271,
									"end": 2275,
									"name": "PUSH",
									"source": 14,
									"value": "22"
								},
								{
									"begin": 2268,
									"end": 2269,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 2261,
									"end": 2276,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 2295,
									"end": 2299,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 2292,
									"end": 2293,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2285,
									"end": 2300,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 2312,
									"end": 2632,
									"name": "tag",
									"source": 14,
									"value": "33"
								},
								{
									"begin": 2312,
									"end": 2632,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2356,
									"end": 2362,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2393,
									"end": 2394,
									"name": "PUSH",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 2387,
									"end": 2391,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2383,
									"end": 2395,
									"name": "DIV",
									"source": 14
								},
								{
									"begin": 2373,
									"end": 2395,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2373,
									"end": 2395,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2440,
									"end": 2441,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 2434,
									"end": 2438,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2430,
									"end": 2442,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 2461,
									"end": 2479,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 2451,
									"end": 2532,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "79"
								},
								{
									"begin": 2451,
									"end": 2532,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 2517,
									"end": 2521,
									"name": "PUSH",
									"source": 14,
									"value": "7F"
								},
								{
									"begin": 2509,
									"end": 2515,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2505,
									"end": 2522,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 2495,
									"end": 2522,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 2495,
									"end": 2522,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2451,
									"end": 2532,
									"name": "tag",
									"source": 14,
									"value": "79"
								},
								{
									"begin": 2451,
									"end": 2532,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2579,
									"end": 2581,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 2571,
									"end": 2577,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2568,
									"end": 2582,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 2548,
									"end": 2566,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2545,
									"end": 2583,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 2542,
									"end": 2626,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "80"
								},
								{
									"begin": 2542,
									"end": 2626,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 2598,
									"end": 2616,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "81"
								},
								{
									"begin": 2598,
									"end": 2616,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "32"
								},
								{
									"begin": 2598,
									"end": 2616,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2598,
									"end": 2616,
									"name": "tag",
									"source": 14,
									"value": "81"
								},
								{
									"begin": 2598,
									"end": 2616,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2542,
									"end": 2626,
									"name": "tag",
									"source": 14,
									"value": "80"
								},
								{
									"begin": 2542,
									"end": 2626,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2363,
									"end": 2632,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2312,
									"end": 2632,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 2312,
									"end": 2632,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2312,
									"end": 2632,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2312,
									"end": 2632,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2638,
									"end": 2779,
									"name": "tag",
									"source": 14,
									"value": "34"
								},
								{
									"begin": 2638,
									"end": 2779,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2687,
									"end": 2691,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2710,
									"end": 2713,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2702,
									"end": 2713,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2702,
									"end": 2713,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2733,
									"end": 2736,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2730,
									"end": 2731,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2723,
									"end": 2737,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 2767,
									"end": 2771,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 2764,
									"end": 2765,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2754,
									"end": 2772,
									"name": "KECCAK256",
									"source": 14
								},
								{
									"begin": 2746,
									"end": 2772,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2746,
									"end": 2772,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2638,
									"end": 2779,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 2638,
									"end": 2779,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2638,
									"end": 2779,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2638,
									"end": 2779,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2785,
									"end": 2878,
									"name": "tag",
									"source": 14,
									"value": "35"
								},
								{
									"begin": 2785,
									"end": 2878,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2822,
									"end": 2828,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2869,
									"end": 2871,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 2864,
									"end": 2866,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 2857,
									"end": 2862,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 2853,
									"end": 2867,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2849,
									"end": 2872,
									"name": "DIV",
									"source": 14
								},
								{
									"begin": 2839,
									"end": 2872,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2839,
									"end": 2872,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2785,
									"end": 2878,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 2785,
									"end": 2878,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2785,
									"end": 2878,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2785,
									"end": 2878,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2884,
									"end": 2991,
									"name": "tag",
									"source": 14,
									"value": "36"
								},
								{
									"begin": 2884,
									"end": 2991,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2928,
									"end": 2936,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2978,
									"end": 2983,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2972,
									"end": 2976,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2968,
									"end": 2984,
									"name": "SHL",
									"source": 14
								},
								{
									"begin": 2947,
									"end": 2984,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2947,
									"end": 2984,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2884,
									"end": 2991,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 2884,
									"end": 2991,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 2884,
									"end": 2991,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2884,
									"end": 2991,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2884,
									"end": 2991,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2997,
									"end": 3390,
									"name": "tag",
									"source": 14,
									"value": "37"
								},
								{
									"begin": 2997,
									"end": 3390,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3066,
									"end": 3072,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 3116,
									"end": 3117,
									"name": "PUSH",
									"source": 14,
									"value": "8"
								},
								{
									"begin": 3104,
									"end": 3114,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 3100,
									"end": 3118,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 3139,
									"end": 3236,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "86"
								},
								{
									"begin": 3169,
									"end": 3235,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3158,
									"end": 3167,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 3139,
									"end": 3236,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "36"
								},
								{
									"begin": 3139,
									"end": 3236,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3139,
									"end": 3236,
									"name": "tag",
									"source": 14,
									"value": "86"
								},
								{
									"begin": 3139,
									"end": 3236,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3257,
									"end": 3296,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "87"
								},
								{
									"begin": 3287,
									"end": 3295,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 3276,
									"end": 3285,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 3257,
									"end": 3296,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "36"
								},
								{
									"begin": 3257,
									"end": 3296,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3257,
									"end": 3296,
									"name": "tag",
									"source": 14,
									"value": "87"
								},
								{
									"begin": 3257,
									"end": 3296,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3245,
									"end": 3296,
									"name": "SWAP6",
									"source": 14
								},
								{
									"begin": 3245,
									"end": 3296,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3329,
									"end": 3333,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 3325,
									"end": 3334,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 3318,
									"end": 3323,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 3314,
									"end": 3335,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 3305,
									"end": 3335,
									"name": "SWAP4",
									"source": 14
								},
								{
									"begin": 3305,
									"end": 3335,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3378,
									"end": 3382,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 3368,
									"end": 3376,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 3364,
									"end": 3383,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 3357,
									"end": 3362,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 3354,
									"end": 3384,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 3344,
									"end": 3384,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 3344,
									"end": 3384,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3073,
									"end": 3390,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3073,
									"end": 3390,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2997,
									"end": 3390,
									"name": "SWAP4",
									"source": 14
								},
								{
									"begin": 2997,
									"end": 3390,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 2997,
									"end": 3390,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2997,
									"end": 3390,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2997,
									"end": 3390,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2997,
									"end": 3390,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3396,
									"end": 3473,
									"name": "tag",
									"source": 14,
									"value": "38"
								},
								{
									"begin": 3396,
									"end": 3473,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3433,
									"end": 3440,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 3462,
									"end": 3467,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3451,
									"end": 3467,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3451,
									"end": 3467,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3396,
									"end": 3473,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 3396,
									"end": 3473,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3396,
									"end": 3473,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3396,
									"end": 3473,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3479,
									"end": 3539,
									"name": "tag",
									"source": 14,
									"value": "39"
								},
								{
									"begin": 3479,
									"end": 3539,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3507,
									"end": 3510,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 3528,
									"end": 3533,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3521,
									"end": 3533,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3521,
									"end": 3533,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3479,
									"end": 3539,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 3479,
									"end": 3539,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3479,
									"end": 3539,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3479,
									"end": 3539,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3545,
									"end": 3687,
									"name": "tag",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 3545,
									"end": 3687,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3595,
									"end": 3604,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 3628,
									"end": 3681,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "91"
								},
								{
									"begin": 3646,
									"end": 3680,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "92"
								},
								{
									"begin": 3655,
									"end": 3679,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "93"
								},
								{
									"begin": 3673,
									"end": 3678,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 3655,
									"end": 3679,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "38"
								},
								{
									"begin": 3655,
									"end": 3679,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3655,
									"end": 3679,
									"name": "tag",
									"source": 14,
									"value": "93"
								},
								{
									"begin": 3655,
									"end": 3679,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3646,
									"end": 3680,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "39"
								},
								{
									"begin": 3646,
									"end": 3680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3646,
									"end": 3680,
									"name": "tag",
									"source": 14,
									"value": "92"
								},
								{
									"begin": 3646,
									"end": 3680,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3628,
									"end": 3681,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "38"
								},
								{
									"begin": 3628,
									"end": 3681,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3628,
									"end": 3681,
									"name": "tag",
									"source": 14,
									"value": "91"
								},
								{
									"begin": 3628,
									"end": 3681,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3615,
									"end": 3681,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3615,
									"end": 3681,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3545,
									"end": 3687,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 3545,
									"end": 3687,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3545,
									"end": 3687,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3545,
									"end": 3687,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3693,
									"end": 3768,
									"name": "tag",
									"source": 14,
									"value": "41"
								},
								{
									"begin": 3693,
									"end": 3768,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3736,
									"end": 3739,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 3757,
									"end": 3762,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3750,
									"end": 3762,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3750,
									"end": 3762,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3693,
									"end": 3768,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 3693,
									"end": 3768,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3693,
									"end": 3768,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3693,
									"end": 3768,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3774,
									"end": 4043,
									"name": "tag",
									"source": 14,
									"value": "42"
								},
								{
									"begin": 3774,
									"end": 4043,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3884,
									"end": 3923,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "96"
								},
								{
									"begin": 3915,
									"end": 3922,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 3884,
									"end": 3923,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 3884,
									"end": 3923,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3884,
									"end": 3923,
									"name": "tag",
									"source": 14,
									"value": "96"
								},
								{
									"begin": 3884,
									"end": 3923,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3945,
									"end": 4036,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "97"
								},
								{
									"begin": 3994,
									"end": 4035,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "98"
								},
								{
									"begin": 4018,
									"end": 4034,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 3994,
									"end": 4035,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "41"
								},
								{
									"begin": 3994,
									"end": 4035,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3994,
									"end": 4035,
									"name": "tag",
									"source": 14,
									"value": "98"
								},
								{
									"begin": 3994,
									"end": 4035,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3986,
									"end": 3992,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 3979,
									"end": 3983,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 3973,
									"end": 3984,
									"name": "SLOAD",
									"source": 14
								},
								{
									"begin": 3945,
									"end": 4036,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "37"
								},
								{
									"begin": 3945,
									"end": 4036,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3945,
									"end": 4036,
									"name": "tag",
									"source": 14,
									"value": "97"
								},
								{
									"begin": 3945,
									"end": 4036,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3939,
									"end": 3943,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 3932,
									"end": 4037,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 3850,
									"end": 4043,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3774,
									"end": 4043,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3774,
									"end": 4043,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3774,
									"end": 4043,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3774,
									"end": 4043,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4049,
									"end": 4122,
									"name": "tag",
									"source": 14,
									"value": "43"
								},
								{
									"begin": 4049,
									"end": 4122,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4094,
									"end": 4097,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 4049,
									"end": 4122,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4049,
									"end": 4122,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4128,
									"end": 4317,
									"name": "tag",
									"source": 14,
									"value": "44"
								},
								{
									"begin": 4128,
									"end": 4317,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4205,
									"end": 4237,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "101"
								},
								{
									"begin": 4205,
									"end": 4237,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "43"
								},
								{
									"begin": 4205,
									"end": 4237,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4205,
									"end": 4237,
									"name": "tag",
									"source": 14,
									"value": "101"
								},
								{
									"begin": 4205,
									"end": 4237,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4246,
									"end": 4311,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "102"
								},
								{
									"begin": 4304,
									"end": 4310,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4296,
									"end": 4302,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 4290,
									"end": 4294,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 4246,
									"end": 4311,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "42"
								},
								{
									"begin": 4246,
									"end": 4311,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4246,
									"end": 4311,
									"name": "tag",
									"source": 14,
									"value": "102"
								},
								{
									"begin": 4246,
									"end": 4311,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4181,
									"end": 4317,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4128,
									"end": 4317,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4128,
									"end": 4317,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4128,
									"end": 4317,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4323,
									"end": 4509,
									"name": "tag",
									"source": 14,
									"value": "45"
								},
								{
									"begin": 4323,
									"end": 4509,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4383,
									"end": 4503,
									"name": "tag",
									"source": 14,
									"value": "104"
								},
								{
									"begin": 4383,
									"end": 4503,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4400,
									"end": 4403,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4393,
									"end": 4398,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4390,
									"end": 4404,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 4383,
									"end": 4503,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 4383,
									"end": 4503,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "106"
								},
								{
									"begin": 4383,
									"end": 4503,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 4454,
									"end": 4493,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "107"
								},
								{
									"begin": 4491,
									"end": 4492,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 4484,
									"end": 4489,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4454,
									"end": 4493,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "44"
								},
								{
									"begin": 4454,
									"end": 4493,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4454,
									"end": 4493,
									"name": "tag",
									"source": 14,
									"value": "107"
								},
								{
									"begin": 4454,
									"end": 4493,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4427,
									"end": 4428,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 4420,
									"end": 4425,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4416,
									"end": 4429,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 4407,
									"end": 4429,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4407,
									"end": 4429,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4383,
									"end": 4503,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "104"
								},
								{
									"begin": 4383,
									"end": 4503,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4383,
									"end": 4503,
									"name": "tag",
									"source": 14,
									"value": "106"
								},
								{
									"begin": 4383,
									"end": 4503,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4323,
									"end": 4509,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4323,
									"end": 4509,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4323,
									"end": 4509,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4515,
									"end": 5058,
									"name": "tag",
									"source": 14,
									"value": "46"
								},
								{
									"begin": 4515,
									"end": 5058,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4616,
									"end": 4618,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 4611,
									"end": 4614,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4608,
									"end": 4619,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 4605,
									"end": 5051,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 4605,
									"end": 5051,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "109"
								},
								{
									"begin": 4605,
									"end": 5051,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 4650,
									"end": 4688,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "110"
								},
								{
									"begin": 4682,
									"end": 4687,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4650,
									"end": 4688,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "34"
								},
								{
									"begin": 4650,
									"end": 4688,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4650,
									"end": 4688,
									"name": "tag",
									"source": 14,
									"value": "110"
								},
								{
									"begin": 4650,
									"end": 4688,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4734,
									"end": 4763,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "111"
								},
								{
									"begin": 4752,
									"end": 4762,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 4734,
									"end": 4763,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "35"
								},
								{
									"begin": 4734,
									"end": 4763,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4734,
									"end": 4763,
									"name": "tag",
									"source": 14,
									"value": "111"
								},
								{
									"begin": 4734,
									"end": 4763,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4724,
									"end": 4732,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4720,
									"end": 4764,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 4917,
									"end": 4919,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 4905,
									"end": 4915,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 4902,
									"end": 4920,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 4899,
									"end": 4948,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 4899,
									"end": 4948,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "112"
								},
								{
									"begin": 4899,
									"end": 4948,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 4938,
									"end": 4946,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4923,
									"end": 4946,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4923,
									"end": 4946,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4899,
									"end": 4948,
									"name": "tag",
									"source": 14,
									"value": "112"
								},
								{
									"begin": 4899,
									"end": 4948,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4961,
									"end": 5041,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "113"
								},
								{
									"begin": 5017,
									"end": 5039,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "114"
								},
								{
									"begin": 5035,
									"end": 5038,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 5017,
									"end": 5039,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "35"
								},
								{
									"begin": 5017,
									"end": 5039,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5017,
									"end": 5039,
									"name": "tag",
									"source": 14,
									"value": "114"
								},
								{
									"begin": 5017,
									"end": 5039,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5007,
									"end": 5015,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 5003,
									"end": 5040,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 4990,
									"end": 5001,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4961,
									"end": 5041,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "45"
								},
								{
									"begin": 4961,
									"end": 5041,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4961,
									"end": 5041,
									"name": "tag",
									"source": 14,
									"value": "113"
								},
								{
									"begin": 4961,
									"end": 5041,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4620,
									"end": 5051,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4620,
									"end": 5051,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4605,
									"end": 5051,
									"name": "tag",
									"source": 14,
									"value": "109"
								},
								{
									"begin": 4605,
									"end": 5051,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4515,
									"end": 5058,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4515,
									"end": 5058,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4515,
									"end": 5058,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4515,
									"end": 5058,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5064,
									"end": 5181,
									"name": "tag",
									"source": 14,
									"value": "47"
								},
								{
									"begin": 5064,
									"end": 5181,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5118,
									"end": 5126,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 5168,
									"end": 5173,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 5162,
									"end": 5166,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 5158,
									"end": 5174,
									"name": "SHR",
									"source": 14
								},
								{
									"begin": 5137,
									"end": 5174,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 5137,
									"end": 5174,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5064,
									"end": 5181,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 5064,
									"end": 5181,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 5064,
									"end": 5181,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5064,
									"end": 5181,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5064,
									"end": 5181,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5187,
									"end": 5356,
									"name": "tag",
									"source": 14,
									"value": "48"
								},
								{
									"begin": 5187,
									"end": 5356,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5231,
									"end": 5237,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 5264,
									"end": 5315,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "117"
								},
								{
									"begin": 5312,
									"end": 5313,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 5308,
									"end": 5314,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 5300,
									"end": 5305,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 5297,
									"end": 5298,
									"name": "PUSH",
									"source": 14,
									"value": "8"
								},
								{
									"begin": 5293,
									"end": 5306,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 5264,
									"end": 5315,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "47"
								},
								{
									"begin": 5264,
									"end": 5315,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5264,
									"end": 5315,
									"name": "tag",
									"source": 14,
									"value": "117"
								},
								{
									"begin": 5264,
									"end": 5315,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5260,
									"end": 5316,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 5345,
									"end": 5349,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 5339,
									"end": 5343,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 5335,
									"end": 5350,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 5325,
									"end": 5350,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 5325,
									"end": 5350,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5238,
									"end": 5356,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5187,
									"end": 5356,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 5187,
									"end": 5356,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 5187,
									"end": 5356,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5187,
									"end": 5356,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5187,
									"end": 5356,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5361,
									"end": 5656,
									"name": "tag",
									"source": 14,
									"value": "49"
								},
								{
									"begin": 5361,
									"end": 5656,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5437,
									"end": 5441,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 5583,
									"end": 5612,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "119"
								},
								{
									"begin": 5608,
									"end": 5611,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 5602,
									"end": 5606,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 5583,
									"end": 5612,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "48"
								},
								{
									"begin": 5583,
									"end": 5612,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5583,
									"end": 5612,
									"name": "tag",
									"source": 14,
									"value": "119"
								},
								{
									"begin": 5583,
									"end": 5612,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5575,
									"end": 5612,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 5575,
									"end": 5612,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5645,
									"end": 5648,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 5642,
									"end": 5643,
									"name": "PUSH",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 5638,
									"end": 5649,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 5632,
									"end": 5636,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 5629,
									"end": 5650,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 5621,
									"end": 5650,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 5621,
									"end": 5650,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5361,
									"end": 5656,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 5361,
									"end": 5656,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 5361,
									"end": 5656,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5361,
									"end": 5656,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5361,
									"end": 5656,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5661,
									"end": 7056,
									"name": "tag",
									"source": 14,
									"value": "9"
								},
								{
									"begin": 5661,
									"end": 7056,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5778,
									"end": 5815,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "121"
								},
								{
									"begin": 5811,
									"end": 5814,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 5778,
									"end": 5815,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "30"
								},
								{
									"begin": 5778,
									"end": 5815,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5778,
									"end": 5815,
									"name": "tag",
									"source": 14,
									"value": "121"
								},
								{
									"begin": 5778,
									"end": 5815,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5880,
									"end": 5898,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5872,
									"end": 5878,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 5869,
									"end": 5899,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 5866,
									"end": 5922,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 5866,
									"end": 5922,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "122"
								},
								{
									"begin": 5866,
									"end": 5922,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 5902,
									"end": 5920,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "123"
								},
								{
									"begin": 5902,
									"end": 5920,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "31"
								},
								{
									"begin": 5902,
									"end": 5920,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5902,
									"end": 5920,
									"name": "tag",
									"source": 14,
									"value": "123"
								},
								{
									"begin": 5902,
									"end": 5920,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5866,
									"end": 5922,
									"name": "tag",
									"source": 14,
									"value": "122"
								},
								{
									"begin": 5866,
									"end": 5922,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5946,
									"end": 5984,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "124"
								},
								{
									"begin": 5978,
									"end": 5982,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 5972,
									"end": 5983,
									"name": "SLOAD",
									"source": 14
								},
								{
									"begin": 5946,
									"end": 5984,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "33"
								},
								{
									"begin": 5946,
									"end": 5984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5946,
									"end": 5984,
									"name": "tag",
									"source": 14,
									"value": "124"
								},
								{
									"begin": 5946,
									"end": 5984,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6031,
									"end": 6098,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "125"
								},
								{
									"begin": 6091,
									"end": 6097,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 6083,
									"end": 6089,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 6077,
									"end": 6081,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 6031,
									"end": 6098,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "46"
								},
								{
									"begin": 6031,
									"end": 6098,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6031,
									"end": 6098,
									"name": "tag",
									"source": 14,
									"value": "125"
								},
								{
									"begin": 6031,
									"end": 6098,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6125,
									"end": 6126,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 6149,
									"end": 6153,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 6136,
									"end": 6153,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 6136,
									"end": 6153,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6181,
									"end": 6183,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 6173,
									"end": 6179,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 6170,
									"end": 6184,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 6198,
									"end": 6199,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 6193,
									"end": 6811,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 6193,
									"end": 6811,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 6193,
									"end": 6811,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "127"
								},
								{
									"begin": 6193,
									"end": 6811,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 6855,
									"end": 6856,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 6872,
									"end": 6878,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 6869,
									"end": 6946,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 6869,
									"end": 6946,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "128"
								},
								{
									"begin": 6869,
									"end": 6946,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 6921,
									"end": 6930,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 6916,
									"end": 6919,
									"name": "DUP8",
									"source": 14
								},
								{
									"begin": 6912,
									"end": 6931,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 6906,
									"end": 6932,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 6897,
									"end": 6932,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 6897,
									"end": 6932,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6869,
									"end": 6946,
									"name": "tag",
									"source": 14,
									"value": "128"
								},
								{
									"begin": 6869,
									"end": 6946,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6972,
									"end": 7039,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "129"
								},
								{
									"begin": 7032,
									"end": 7038,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 7025,
									"end": 7030,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 6972,
									"end": 7039,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "49"
								},
								{
									"begin": 6972,
									"end": 7039,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6972,
									"end": 7039,
									"name": "tag",
									"source": 14,
									"value": "129"
								},
								{
									"begin": 6972,
									"end": 7039,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6966,
									"end": 6970,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 6959,
									"end": 7040,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 6828,
									"end": 7050,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6163,
									"end": 7050,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "126"
								},
								{
									"begin": 6163,
									"end": 7050,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6193,
									"end": 6811,
									"name": "tag",
									"source": 14,
									"value": "127"
								},
								{
									"begin": 6193,
									"end": 6811,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6245,
									"end": 6249,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 6241,
									"end": 6250,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 6233,
									"end": 6239,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 6229,
									"end": 6251,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 6279,
									"end": 6316,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "130"
								},
								{
									"begin": 6311,
									"end": 6315,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 6279,
									"end": 6316,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "34"
								},
								{
									"begin": 6279,
									"end": 6316,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6279,
									"end": 6316,
									"name": "tag",
									"source": 14,
									"value": "130"
								},
								{
									"begin": 6279,
									"end": 6316,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6338,
									"end": 6339,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 6352,
									"end": 6560,
									"name": "tag",
									"source": 14,
									"value": "131"
								},
								{
									"begin": 6352,
									"end": 6560,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6366,
									"end": 6373,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 6363,
									"end": 6364,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 6360,
									"end": 6374,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 6352,
									"end": 6560,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 6352,
									"end": 6560,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "133"
								},
								{
									"begin": 6352,
									"end": 6560,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 6445,
									"end": 6454,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 6440,
									"end": 6443,
									"name": "DUP10",
									"source": 14
								},
								{
									"begin": 6436,
									"end": 6455,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 6430,
									"end": 6456,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 6422,
									"end": 6428,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 6415,
									"end": 6457,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 6496,
									"end": 6497,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 6488,
									"end": 6494,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 6484,
									"end": 6498,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 6474,
									"end": 6498,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 6474,
									"end": 6498,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6543,
									"end": 6545,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 6532,
									"end": 6541,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 6528,
									"end": 6546,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 6515,
									"end": 6546,
									"name": "SWAP5",
									"source": 14
								},
								{
									"begin": 6515,
									"end": 6546,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6389,
									"end": 6393,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 6386,
									"end": 6387,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 6382,
									"end": 6394,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 6377,
									"end": 6394,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 6377,
									"end": 6394,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6352,
									"end": 6560,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "131"
								},
								{
									"begin": 6352,
									"end": 6560,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6352,
									"end": 6560,
									"name": "tag",
									"source": 14,
									"value": "133"
								},
								{
									"begin": 6352,
									"end": 6560,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6588,
									"end": 6594,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 6579,
									"end": 6586,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 6576,
									"end": 6595,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 6573,
									"end": 6752,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 6573,
									"end": 6752,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "134"
								},
								{
									"begin": 6573,
									"end": 6752,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 6646,
									"end": 6655,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 6641,
									"end": 6644,
									"name": "DUP10",
									"source": 14
								},
								{
									"begin": 6637,
									"end": 6656,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 6631,
									"end": 6657,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 6689,
									"end": 6737,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "135"
								},
								{
									"begin": 6731,
									"end": 6735,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 6723,
									"end": 6729,
									"name": "DUP10",
									"source": 14
								},
								{
									"begin": 6719,
									"end": 6736,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 6708,
									"end": 6717,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 6689,
									"end": 6737,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "48"
								},
								{
									"begin": 6689,
									"end": 6737,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6689,
									"end": 6737,
									"name": "tag",
									"source": 14,
									"value": "135"
								},
								{
									"begin": 6689,
									"end": 6737,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6681,
									"end": 6687,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 6674,
									"end": 6738,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 6596,
									"end": 6752,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6573,
									"end": 6752,
									"name": "tag",
									"source": 14,
									"value": "134"
								},
								{
									"begin": 6573,
									"end": 6752,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6798,
									"end": 6799,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 6794,
									"end": 6795,
									"name": "PUSH",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 6786,
									"end": 6792,
									"name": "DUP9",
									"source": 14
								},
								{
									"begin": 6782,
									"end": 6796,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 6778,
									"end": 6800,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 6772,
									"end": 6776,
									"name": "DUP9",
									"source": 14
								},
								{
									"begin": 6765,
									"end": 6801,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 6200,
									"end": 6811,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6200,
									"end": 6811,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6200,
									"end": 6811,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6163,
									"end": 7050,
									"name": "tag",
									"source": 14,
									"value": "126"
								},
								{
									"begin": 6163,
									"end": 7050,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6163,
									"end": 7050,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5753,
									"end": 7056,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5753,
									"end": 7056,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5753,
									"end": 7056,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5661,
									"end": 7056,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5661,
									"end": 7056,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5661,
									"end": 7056,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 7062,
									"end": 7180,
									"name": "tag",
									"source": 14,
									"value": "50"
								},
								{
									"begin": 7062,
									"end": 7180,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7149,
									"end": 7173,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "137"
								},
								{
									"begin": 7167,
									"end": 7172,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 7149,
									"end": 7173,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 7149,
									"end": 7173,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 7149,
									"end": 7173,
									"name": "tag",
									"source": 14,
									"value": "137"
								},
								{
									"begin": 7149,
									"end": 7173,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7144,
									"end": 7147,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 7137,
									"end": 7174,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 7062,
									"end": 7180,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7062,
									"end": 7180,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7062,
									"end": 7180,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 7186,
									"end": 7408,
									"name": "tag",
									"source": 14,
									"value": "14"
								},
								{
									"begin": 7186,
									"end": 7408,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7279,
									"end": 7283,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 7317,
									"end": 7319,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 7306,
									"end": 7315,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 7302,
									"end": 7320,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 7294,
									"end": 7320,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 7294,
									"end": 7320,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7330,
									"end": 7401,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "139"
								},
								{
									"begin": 7398,
									"end": 7399,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 7387,
									"end": 7396,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 7383,
									"end": 7400,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 7374,
									"end": 7380,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 7330,
									"end": 7401,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "50"
								},
								{
									"begin": 7330,
									"end": 7401,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 7330,
									"end": 7401,
									"name": "tag",
									"source": 14,
									"value": "139"
								},
								{
									"begin": 7330,
									"end": 7401,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7186,
									"end": 7408,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 7186,
									"end": 7408,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 7186,
									"end": 7408,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7186,
									"end": 7408,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7186,
									"end": 7408,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 223,
									"end": 1333,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 223,
									"end": 1333,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 223,
									"end": 1333,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 223,
									"end": 1333,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 223,
									"end": 1333,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 223,
									"end": 1333,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 223,
									"end": 1333,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 223,
									"end": 1333,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 223,
									"end": 1333,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220038e326ee7ea47c0d58867f51e45bfa898c556b0a05c25707ca4d4572479c82f64736f6c63430008140033",
									".code": [
										{
											"begin": 223,
											"end": 1333,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "PUSH",
											"source": 1,
											"value": "854CBB4A"
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "PUSH",
											"source": 1,
											"value": "A035B1FE"
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "PUSH",
											"source": 1,
											"value": "A035B1FE"
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "PUSH",
											"source": 1,
											"value": "A22CB465"
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "PUSH",
											"source": 1,
											"value": "B88D4FDE"
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "PUSH",
											"source": 1,
											"value": "C87B56DD"
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "PUSH",
											"source": 1,
											"value": "E985E9C5"
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "PUSH",
											"source": 1,
											"value": "F2FDE38B"
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "PUSH",
											"source": 1,
											"value": "854CBB4A"
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "PUSH",
											"source": 1,
											"value": "8C2A5BC8"
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "PUSH",
											"source": 1,
											"value": "8DA5CB5B"
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "PUSH",
											"source": 1,
											"value": "91B7F5ED"
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "PUSH",
											"source": 1,
											"value": "98D5FDCA"
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "PUSH",
											"source": 1,
											"value": "42842E0E"
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "PUSH",
											"source": 1,
											"value": "42842E0E"
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "PUSH",
											"source": 1,
											"value": "5987CC19"
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "PUSH",
											"source": 1,
											"value": "6352211E"
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "PUSH",
											"source": 1,
											"value": "64EDFBF0"
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "PUSH",
											"source": 1,
											"value": "715018A6"
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "PUSH",
											"source": 1,
											"value": "1FFC9A7"
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "PUSH",
											"source": 1,
											"value": "6FDDE03"
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "PUSH",
											"source": 1,
											"value": "81812FC"
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 223,
											"end": 1333,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 1607,
											"end": 1912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 1607,
											"end": 1912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 1607,
											"end": 1912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 2438,
											"end": 2529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 2438,
											"end": 2529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 3610,
											"end": 3768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 3610,
											"end": 3768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3610,
											"end": 3768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 3429,
											"end": 3544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 3429,
											"end": 3544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 4279,
											"end": 4867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 4279,
											"end": 4867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 4938,
											"end": 5072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 4938,
											"end": 5072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1002,
											"end": 1072,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1002,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1002,
											"end": 1072,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1002,
											"end": 1072,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1002,
											"end": 1072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1002,
											"end": 1072,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1002,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1002,
											"end": 1072,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 2251,
											"end": 2371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2251,
											"end": 2371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2251,
											"end": 2371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1328,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1162,
											"end": 1328,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1162,
											"end": 1328,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1162,
											"end": 1328,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1162,
											"end": 1328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1162,
											"end": 1328,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1162,
											"end": 1328,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1162,
											"end": 1328,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 1976,
											"end": 2189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 1976,
											"end": 2189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 1976,
											"end": 2189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2368,
											"end": 2471,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2368,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2368,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2368,
											"end": 2471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2471,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2368,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2471,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 669,
											"end": 814,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 669,
											"end": 814,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 669,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 669,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 669,
											"end": 814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 669,
											"end": 814,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 669,
											"end": 814,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 669,
											"end": 814,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 669,
											"end": 814,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 669,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 669,
											"end": 814,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 669,
											"end": 814,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 669,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 669,
											"end": 814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 669,
											"end": 814,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 669,
											"end": 814,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 669,
											"end": 814,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 669,
											"end": 814,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 669,
											"end": 814,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 669,
											"end": 814,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 669,
											"end": 814,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 669,
											"end": 814,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 669,
											"end": 814,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1154,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1080,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1080,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 1080,
											"end": 1154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1154,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1080,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1154,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1693,
											"end": 1780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1693,
											"end": 1780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 910,
											"end": 994,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 910,
											"end": 994,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 910,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 910,
											"end": 994,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 910,
											"end": 994,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 910,
											"end": 994,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 910,
											"end": 994,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 910,
											"end": 994,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 910,
											"end": 994,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 910,
											"end": 994,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 910,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 910,
											"end": 994,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 910,
											"end": 994,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 910,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 910,
											"end": 994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 910,
											"end": 994,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 910,
											"end": 994,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 910,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 910,
											"end": 994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 910,
											"end": 994,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 910,
											"end": 994,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 910,
											"end": 994,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 2598,
											"end": 2693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 2598,
											"end": 2693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 822,
											"end": 902,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 822,
											"end": 902,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 822,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 822,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 822,
											"end": 902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 822,
											"end": 902,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 822,
											"end": 902,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 822,
											"end": 902,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 822,
											"end": 902,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 822,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 822,
											"end": 902,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 822,
											"end": 902,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 822,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 822,
											"end": 902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 822,
											"end": 902,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 822,
											"end": 902,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 822,
											"end": 902,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 822,
											"end": 902,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 822,
											"end": 902,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 822,
											"end": 902,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 822,
											"end": 902,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 822,
											"end": 902,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 822,
											"end": 902,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 293,
											"end": 313,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 293,
											"end": 313,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 293,
											"end": 313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 293,
											"end": 313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 293,
											"end": 313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 293,
											"end": 313,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 293,
											"end": 313,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 293,
											"end": 313,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 293,
											"end": 313,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 293,
											"end": 313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 293,
											"end": 313,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 293,
											"end": 313,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 293,
											"end": 313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 293,
											"end": 313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 293,
											"end": 313,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 293,
											"end": 313,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 293,
											"end": 313,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 293,
											"end": 313,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 293,
											"end": 313,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 293,
											"end": 313,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 293,
											"end": 313,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 293,
											"end": 313,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 293,
											"end": 313,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 3840,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 3840,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 5143,
											"end": 5354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 5143,
											"end": 5354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 2764,
											"end": 3024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 2764,
											"end": 3024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 2764,
											"end": 3024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 4057,
											"end": 4212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 4057,
											"end": 4212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 4057,
											"end": 4212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2626,
											"end": 2846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 2626,
											"end": 2846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1709,
											"end": 1713,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1761,
											"end": 1786,
											"name": "PUSH",
											"source": 4,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1746,
											"end": 1786,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1786,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1746,
											"end": 1786,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1746,
											"end": 1757,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1746,
											"end": 1786,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1786,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1746,
											"end": 1786,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1746,
											"end": 1786,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1746,
											"end": 1851,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1746,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 1746,
											"end": 1851,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1746,
											"end": 1851,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 1851,
											"name": "PUSH",
											"source": 4,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1803,
											"end": 1851,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1803,
											"end": 1851,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1803,
											"end": 1851,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1803,
											"end": 1814,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1803,
											"end": 1851,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1803,
											"end": 1851,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1803,
											"end": 1851,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1803,
											"end": 1851,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1746,
											"end": 1851,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 1746,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1746,
											"end": 1904,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1746,
											"end": 1904,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 1746,
											"end": 1904,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1746,
											"end": 1904,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1868,
											"end": 1904,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 1892,
											"end": 1903,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1868,
											"end": 1891,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 1868,
											"end": 1904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1868,
											"end": 1904,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 1868,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1746,
											"end": 1904,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 1746,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1726,
											"end": 1904,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1726,
											"end": 1904,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1607,
											"end": 1912,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1607,
											"end": 1912,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2483,
											"end": 2496,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2516,
											"end": 2521,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 2509,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 2509,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2509,
											"end": 2521,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2438,
											"end": 2529,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2438,
											"end": 2529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3677,
											"end": 3684,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3697,
											"end": 3719,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 3711,
											"end": 3718,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3697,
											"end": 3710,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 3697,
											"end": 3719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3697,
											"end": 3719,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 3697,
											"end": 3719,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3697,
											"end": 3719,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3739,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 3752,
											"end": 3759,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3739,
											"end": 3751,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 3739,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3739,
											"end": 3760,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 3739,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3732,
											"end": 3760,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3732,
											"end": 3760,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3768,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3768,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3501,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 3510,
											"end": 3512,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3514,
											"end": 3521,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3523,
											"end": 3535,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 3523,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 3523,
											"end": 3535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3523,
											"end": 3535,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 3523,
											"end": 3535,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3501,
											"end": 3509,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 3501,
											"end": 3536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3501,
											"end": 3536,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 3501,
											"end": 3536,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3429,
											"end": 3544,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3429,
											"end": 3544,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4388,
											"end": 4389,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4374,
											"end": 4390,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4374,
											"end": 4390,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4374,
											"end": 4376,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4374,
											"end": 4390,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4374,
											"end": 4390,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4374,
											"end": 4390,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4370,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 4370,
											"end": 4459,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4444,
											"end": 4445,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "PUSH",
											"source": 4,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 4414,
											"end": 4447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4414,
											"end": 4447,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4370,
											"end": 4459,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 4370,
											"end": 4459,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4680,
											"end": 4701,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4704,
											"end": 4738,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 4712,
											"end": 4714,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4716,
											"end": 4723,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4725,
											"end": 4737,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 4725,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 4725,
											"end": 4737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4725,
											"end": 4737,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 4725,
											"end": 4737,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4704,
											"end": 4711,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 4704,
											"end": 4738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4704,
											"end": 4738,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 4704,
											"end": 4738,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4680,
											"end": 4738,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4680,
											"end": 4738,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4770,
											"end": 4774,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4753,
											"end": 4774,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4753,
											"end": 4774,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4753,
											"end": 4766,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4753,
											"end": 4774,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4753,
											"end": 4774,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4753,
											"end": 4774,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 4749,
											"end": 4860,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 4749,
											"end": 4860,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4819,
											"end": 4823,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4825,
											"end": 4832,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4834,
											"end": 4847,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "PUSH",
											"source": 4,
											"value": "64283D7B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 4798,
											"end": 4848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4798,
											"end": 4848,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4749,
											"end": 4860,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 4749,
											"end": 4860,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4359,
											"end": 4867,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4279,
											"end": 4867,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4279,
											"end": 4867,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5025,
											"end": 5064,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 5042,
											"end": 5046,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5048,
											"end": 5050,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5052,
											"end": 5059,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5025,
											"end": 5064,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5025,
											"end": 5064,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5025,
											"end": 5064,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5025,
											"end": 5064,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5025,
											"end": 5064,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5025,
											"end": 5064,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5025,
											"end": 5064,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5025,
											"end": 5064,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5025,
											"end": 5064,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5025,
											"end": 5064,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5025,
											"end": 5064,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5025,
											"end": 5064,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5025,
											"end": 5041,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 5025,
											"end": 5064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5025,
											"end": 5064,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 5025,
											"end": 5064,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4938,
											"end": 5072,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4938,
											"end": 5072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1002,
											"end": 1072,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1002,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 1579,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 1579,
											"end": 1592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1579,
											"end": 1592,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 1579,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1060,
											"end": 1064,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1051,
											"end": 1057,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1051,
											"end": 1057,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1051,
											"end": 1064,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1051,
											"end": 1064,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1064,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1064,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1064,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1064,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1051,
											"end": 1064,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1064,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1064,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1064,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1064,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1064,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1064,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1064,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1064,
											"modifierDepth": 1,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1064,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1064,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1064,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1002,
											"end": 1072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2314,
											"end": 2321,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2341,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2341,
											"end": 2354,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 2341,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2341,
											"end": 2363,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 2341,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2334,
											"end": 2363,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2334,
											"end": 2363,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2251,
											"end": 2371,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2251,
											"end": 2371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1328,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1162,
											"end": 1328,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1208,
											"end": 1218,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1200,
											"end": 1228,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1200,
											"end": 1228,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1200,
											"end": 1235,
											"name": "PUSH",
											"source": 1,
											"value": "8FC"
										},
										{
											"begin": 1229,
											"end": 1234,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1229,
											"end": 1234,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1200,
											"end": 1235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1200,
											"end": 1235,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1200,
											"end": 1235,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1200,
											"end": 1235,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1200,
											"end": 1235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1200,
											"end": 1235,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1200,
											"end": 1235,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1200,
											"end": 1235,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1200,
											"end": 1235,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1200,
											"end": 1235,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1200,
											"end": 1235,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1200,
											"end": 1235,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1200,
											"end": 1235,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1200,
											"end": 1235,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1200,
											"end": 1235,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1200,
											"end": 1235,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 1200,
											"end": 1235,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 1200,
											"end": 1235,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 1200,
											"end": 1235,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1200,
											"end": 1235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1200,
											"end": 1235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1200,
											"end": 1235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1200,
											"end": 1235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1200,
											"end": 1235,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1200,
											"end": 1235,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1200,
											"end": 1235,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1200,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 1200,
											"end": 1235,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1200,
											"end": 1235,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1200,
											"end": 1235,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1200,
											"end": 1235,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1200,
											"end": 1235,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1200,
											"end": 1235,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1200,
											"end": 1235,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1200,
											"end": 1235,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1200,
											"end": 1235,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 1200,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1200,
											"end": 1235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 1264,
											"end": 1274,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1263,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 1246,
											"end": 1275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1275,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 1246,
											"end": 1275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1295,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1286,
											"end": 1291,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1286,
											"end": 1295,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1286,
											"end": 1295,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1286,
											"end": 1295,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1286,
											"end": 1295,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1320,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1306,
											"end": 1312,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1306,
											"end": 1312,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1306,
											"end": 1320,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1306,
											"end": 1320,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1306,
											"end": 1320,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1306,
											"end": 1320,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1306,
											"end": 1320,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1306,
											"end": 1320,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1306,
											"end": 1320,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1306,
											"end": 1320,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1306,
											"end": 1320,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1306,
											"end": 1320,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1306,
											"end": 1320,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1306,
											"end": 1320,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1306,
											"end": 1320,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1306,
											"end": 1320,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1306,
											"end": 1320,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1306,
											"end": 1320,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1306,
											"end": 1320,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1306,
											"end": 1320,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1162,
											"end": 1328,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2039,
											"end": 2046,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2080,
											"end": 2081,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2063,
											"end": 2082,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2063,
											"end": 2082,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2063,
											"end": 2068,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2063,
											"end": 2082,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2063,
											"end": 2082,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2063,
											"end": 2082,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2059,
											"end": 2148,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 2059,
											"end": 2148,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2133,
											"end": 2134,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "PUSH",
											"source": 4,
											"value": "89C62B6400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2106,
											"end": 2136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2059,
											"end": 2148,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 2059,
											"end": 2148,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2174,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2175,
											"end": 2180,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2158,
											"end": 2181,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2158,
											"end": 2181,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1976,
											"end": 2189,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1976,
											"end": 2189,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2368,
											"end": 2471,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2368,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1579,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 1579,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 1579,
											"end": 1592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1579,
											"end": 1592,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 1579,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2433,
											"end": 2463,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 2460,
											"end": 2461,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2433,
											"end": 2451,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 2433,
											"end": 2463,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2433,
											"end": 2463,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 2433,
											"end": 2463,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 669,
											"end": 814,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 669,
											"end": 814,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 722,
											"end": 738,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 722,
											"end": 738,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 722,
											"end": 738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 722,
											"end": 738,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 722,
											"end": 738,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 758,
											"end": 806,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 758,
											"end": 806,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 758,
											"end": 806,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 758,
											"end": 806,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 758,
											"end": 806,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 758,
											"end": 806,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 758,
											"end": 806,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 758,
											"end": 806,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 768,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 768,
											"end": 781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 768,
											"end": 783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 768,
											"end": 783,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 768,
											"end": 783,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 758,
											"end": 806,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 758,
											"end": 806,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 758,
											"end": 806,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 758,
											"end": 806,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 758,
											"end": 806,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 758,
											"end": 806,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 785,
											"end": 790,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 785,
											"end": 790,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 785,
											"end": 790,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 785,
											"end": 790,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 785,
											"end": 790,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 785,
											"end": 790,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 785,
											"end": 790,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 785,
											"end": 790,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 785,
											"end": 790,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 785,
											"end": 790,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 785,
											"end": 790,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 758,
											"end": 806,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 758,
											"end": 806,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 758,
											"end": 806,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 758,
											"end": 806,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 758,
											"end": 806,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 758,
											"end": 806,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 792,
											"end": 797,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 792,
											"end": 797,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 758,
											"end": 806,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 758,
											"end": 806,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 758,
											"end": 806,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 758,
											"end": 806,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 799,
											"end": 805,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 799,
											"end": 805,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 799,
											"end": 805,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 799,
											"end": 805,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 799,
											"end": 805,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 799,
											"end": 805,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 799,
											"end": 805,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 799,
											"end": 805,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 799,
											"end": 805,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 799,
											"end": 805,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 799,
											"end": 805,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 758,
											"end": 806,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 758,
											"end": 806,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 758,
											"end": 806,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 758,
											"end": 806,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 758,
											"end": 806,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 751,
											"end": 806,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 751,
											"end": 806,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 669,
											"end": 814,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 669,
											"end": 814,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1154,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 1080,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 1579,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 1579,
											"end": 1592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1579,
											"end": 1592,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 1579,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1141,
											"end": 1146,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1132,
											"end": 1138,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1132,
											"end": 1138,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1132,
											"end": 1146,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1132,
											"end": 1146,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1146,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1146,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1146,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1146,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1132,
											"end": 1146,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1146,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1146,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1146,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1146,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1146,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1146,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1146,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1146,
											"modifierDepth": 1,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1146,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1146,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1146,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1154,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1746,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1693,
											"end": 1780,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1693,
											"end": 1780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 910,
											"end": 994,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 910,
											"end": 994,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 1579,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 1579,
											"end": 1592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1579,
											"end": 1592,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 1579,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 980,
											"end": 986,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 972,
											"end": 977,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 972,
											"end": 986,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 972,
											"end": 986,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 972,
											"end": 986,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 972,
											"end": 986,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 910,
											"end": 994,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 910,
											"end": 994,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2645,
											"end": 2658,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2678,
											"end": 2685,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 2671,
											"end": 2685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 2671,
											"end": 2685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2693,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 822,
											"end": 902,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 822,
											"end": 902,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 862,
											"end": 869,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 889,
											"end": 894,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 889,
											"end": 894,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 882,
											"end": 894,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 882,
											"end": 894,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 822,
											"end": 902,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 822,
											"end": 902,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 293,
											"end": 313,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 293,
											"end": 313,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 293,
											"end": 313,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 293,
											"end": 313,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 293,
											"end": 313,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 293,
											"end": 313,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3926,
											"end": 3978,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 3945,
											"end": 3957,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 3945,
											"end": 3955,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 3945,
											"end": 3957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3945,
											"end": 3957,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 3945,
											"end": 3957,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3959,
											"end": 3967,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3969,
											"end": 3977,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3926,
											"end": 3944,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 3926,
											"end": 3978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3926,
											"end": 3978,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 3926,
											"end": 3978,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3840,
											"end": 3986,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3840,
											"end": 3986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5257,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 5270,
											"end": 5274,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5276,
											"end": 5278,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5280,
											"end": 5287,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5257,
											"end": 5269,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 5257,
											"end": 5288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5257,
											"end": 5288,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 5257,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5299,
											"end": 5346,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 5322,
											"end": 5326,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5328,
											"end": 5330,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5332,
											"end": 5339,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5345,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5299,
											"end": 5321,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 5299,
											"end": 5346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5299,
											"end": 5346,
											"name": "tag",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 5299,
											"end": 5346,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5143,
											"end": 5354,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5143,
											"end": 5354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2828,
											"end": 2841,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2854,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 2868,
											"end": 2875,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2854,
											"end": 2867,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 2854,
											"end": 2876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2854,
											"end": 2876,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 2854,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2854,
											"end": 2876,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2889,
											"end": 2910,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2913,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 2913,
											"end": 2921,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 2913,
											"end": 2923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2913,
											"end": 2923,
											"name": "tag",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 2913,
											"end": 2923,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2889,
											"end": 2923,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2889,
											"end": 2923,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 2966,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2947,
											"end": 2954,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2941,
											"end": 2962,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2941,
											"end": 2966,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "tag",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2983,
											"end": 2990,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 2992,
											"end": 2999,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2992,
											"end": 3008,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 2992,
											"end": 3010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "tag",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 2969,
											"end": 3011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "tag",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2969,
											"end": 3011,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "tag",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 2941,
											"end": 3016,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2934,
											"end": 3016,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2934,
											"end": 3016,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2934,
											"end": 3016,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2764,
											"end": 3024,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2764,
											"end": 3024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4145,
											"end": 4149,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4169,
											"end": 4187,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4188,
											"end": 4193,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4169,
											"end": 4194,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4195,
											"end": 4203,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 4169,
											"end": 4204,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4162,
											"end": 4204,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4162,
											"end": 4204,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4057,
											"end": 4212,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4057,
											"end": 4212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1579,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 1579,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 1579,
											"end": 1592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1579,
											"end": 1592,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 1579,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2731,
											"end": 2732,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2711,
											"end": 2733,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2711,
											"end": 2733,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2711,
											"end": 2719,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2711,
											"end": 2733,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2711,
											"end": 2733,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2711,
											"end": 2733,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2800,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 2707,
											"end": 2800,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2785,
											"end": 2786,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2757,
											"end": 2788,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2757,
											"end": 2788,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2800,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 2707,
											"end": 2800,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2810,
											"end": 2838,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 2829,
											"end": 2837,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2810,
											"end": 2828,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 2810,
											"end": 2838,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2810,
											"end": 2838,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 2810,
											"end": 2838,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2626,
											"end": 2846,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2626,
											"end": 2846,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 785,
											"end": 933,
											"name": "tag",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 785,
											"end": 933,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 861,
											"end": 865,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 900,
											"end": 925,
											"name": "PUSH",
											"source": 10,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 885,
											"end": 925,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 885,
											"end": 925,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 885,
											"end": 925,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 885,
											"end": 896,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 885,
											"end": 925,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 885,
											"end": 925,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 885,
											"end": 925,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 885,
											"end": 925,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 878,
											"end": 925,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 878,
											"end": 925,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 785,
											"end": 933,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 785,
											"end": 933,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 785,
											"end": 933,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 785,
											"end": 933,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16585,
											"end": 16832,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 16585,
											"end": 16832,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16648,
											"end": 16655,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 16668,
											"end": 16681,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 16684,
											"end": 16701,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 16693,
											"end": 16700,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 16684,
											"end": 16692,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 16684,
											"end": 16701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 16684,
											"end": 16701,
											"name": "tag",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 16684,
											"end": 16701,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16668,
											"end": 16701,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16668,
											"end": 16701,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16733,
											"end": 16734,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 16716,
											"end": 16735,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16716,
											"end": 16735,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 16716,
											"end": 16721,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16716,
											"end": 16735,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16716,
											"end": 16735,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 16716,
											"end": 16735,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 16712,
											"end": 16802,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 16712,
											"end": 16802,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 16782,
											"end": 16789,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "PUSH",
											"source": 4,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 16759,
											"end": 16790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "tag",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16759,
											"end": 16790,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 16712,
											"end": 16802,
											"name": "tag",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 16712,
											"end": 16802,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16819,
											"end": 16824,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 16812,
											"end": 16824,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 16812,
											"end": 16824,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16812,
											"end": 16824,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16585,
											"end": 16832,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 16585,
											"end": 16832,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16585,
											"end": 16832,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16585,
											"end": 16832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6116,
											"end": 6245,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 6116,
											"end": 6245,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6186,
											"end": 6193,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6213,
											"end": 6228,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6229,
											"end": 6236,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6213,
											"end": 6237,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6206,
											"end": 6237,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6206,
											"end": 6237,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6116,
											"end": 6245,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6116,
											"end": 6245,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6116,
											"end": 6245,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6116,
											"end": 6245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 672,
											"end": 770,
											"name": "tag",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 672,
											"end": 770,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 725,
											"end": 732,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 752,
											"end": 762,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 745,
											"end": 762,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 745,
											"end": 762,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 672,
											"end": 770,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 672,
											"end": 770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14817,
											"end": 14939,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 14817,
											"end": 14939,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14898,
											"end": 14931,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 14907,
											"end": 14909,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 14911,
											"end": 14918,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 14920,
											"end": 14924,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 14926,
											"end": 14930,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 14898,
											"end": 14906,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 14898,
											"end": 14931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14898,
											"end": 14931,
											"name": "tag",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 14898,
											"end": 14931,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14817,
											"end": 14939,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14817,
											"end": 14939,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14817,
											"end": 14939,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14817,
											"end": 14939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9078,
											"end": 9902,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 9078,
											"end": 9902,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9164,
											"end": 9171,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9184,
											"end": 9196,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9199,
											"end": 9216,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 9208,
											"end": 9215,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9199,
											"end": 9207,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 9199,
											"end": 9216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9199,
											"end": 9216,
											"name": "tag",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 9199,
											"end": 9216,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9184,
											"end": 9216,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9184,
											"end": 9216,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9295,
											"end": 9296,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9279,
											"end": 9297,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9279,
											"end": 9297,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9279,
											"end": 9283,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9279,
											"end": 9297,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9279,
											"end": 9297,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9279,
											"end": 9297,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 9275,
											"end": 9363,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 9275,
											"end": 9363,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9314,
											"end": 9351,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 9331,
											"end": 9335,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9337,
											"end": 9341,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9343,
											"end": 9350,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 9314,
											"end": 9330,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 9314,
											"end": 9351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9314,
											"end": 9351,
											"name": "tag",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 9314,
											"end": 9351,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9275,
											"end": 9363,
											"name": "tag",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 9275,
											"end": 9363,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9426,
											"end": 9427,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9410,
											"end": 9428,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9410,
											"end": 9428,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9410,
											"end": 9414,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9410,
											"end": 9428,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9410,
											"end": 9428,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9410,
											"end": 9428,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 9406,
											"end": 9669,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 9406,
											"end": 9669,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9528,
											"end": 9576,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 9545,
											"end": 9546,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9549,
											"end": 9556,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9566,
											"end": 9567,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9570,
											"end": 9575,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9528,
											"end": 9536,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 9528,
											"end": 9576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9528,
											"end": 9576,
											"name": "tag",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 9528,
											"end": 9576,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9641,
											"end": 9642,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9622,
											"end": 9631,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9632,
											"end": 9636,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9622,
											"end": 9637,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9622,
											"end": 9642,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9622,
											"end": 9642,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9622,
											"end": 9642,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9622,
											"end": 9642,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9622,
											"end": 9642,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9622,
											"end": 9642,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9622,
											"end": 9642,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9622,
											"end": 9642,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9622,
											"end": 9642,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9622,
											"end": 9642,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9622,
											"end": 9642,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9406,
											"end": 9669,
											"name": "tag",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 9406,
											"end": 9669,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9699,
											"end": 9700,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9685,
											"end": 9701,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9685,
											"end": 9701,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9685,
											"end": 9687,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9685,
											"end": 9701,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9685,
											"end": 9701,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9685,
											"end": 9701,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 9681,
											"end": 9792,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 9681,
											"end": 9792,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9764,
											"end": 9765,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9747,
											"end": 9756,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9757,
											"end": 9759,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9747,
											"end": 9760,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9747,
											"end": 9765,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9747,
											"end": 9765,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9747,
											"end": 9765,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9747,
											"end": 9765,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9747,
											"end": 9765,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9747,
											"end": 9765,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9747,
											"end": 9765,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9747,
											"end": 9765,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9747,
											"end": 9765,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9747,
											"end": 9765,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9747,
											"end": 9765,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9681,
											"end": 9792,
											"name": "tag",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 9681,
											"end": 9792,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9823,
											"end": 9825,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9804,
											"end": 9811,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 9804,
											"end": 9820,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9812,
											"end": 9819,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 9804,
											"end": 9820,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9804,
											"end": 9820,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9804,
											"end": 9820,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9804,
											"end": 9820,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9804,
											"end": 9820,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9804,
											"end": 9820,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9804,
											"end": 9820,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9804,
											"end": 9820,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9804,
											"end": 9820,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9804,
											"end": 9820,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9804,
											"end": 9820,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9804,
											"end": 9820,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9804,
											"end": 9825,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9862,
											"end": 9869,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9858,
											"end": 9860,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9843,
											"end": 9870,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9843,
											"end": 9870,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9852,
											"end": 9856,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9843,
											"end": 9870,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9843,
											"end": 9870,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9843,
											"end": 9870,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9843,
											"end": 9870,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9843,
											"end": 9870,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9843,
											"end": 9870,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9843,
											"end": 9870,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9843,
											"end": 9870,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9843,
											"end": 9870,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9843,
											"end": 9870,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9843,
											"end": 9870,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9843,
											"end": 9870,
											"name": "LOG4",
											"source": 4
										},
										{
											"begin": 9890,
											"end": 9894,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9883,
											"end": 9894,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9883,
											"end": 9894,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9883,
											"end": 9894,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9078,
											"end": 9902,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 9078,
											"end": 9902,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9078,
											"end": 9902,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9078,
											"end": 9902,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9078,
											"end": 9902,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9078,
											"end": 9902,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1858,
											"end": 2024,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 1858,
											"end": 2024,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 1929,
											"end": 1939,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 1929,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 1941,
											"name": "tag",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 1929,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1918,
											"end": 1941,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1918,
											"end": 1941,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1918,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 1918,
											"end": 1923,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1918,
											"end": 1925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1918,
											"end": 1925,
											"name": "tag",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 1918,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1918,
											"end": 1941,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1918,
											"end": 1941,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1918,
											"end": 1941,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1914,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 1914,
											"end": 2017,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1992,
											"end": 2004,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 1992,
											"end": 2004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1992,
											"end": 2004,
											"name": "tag",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 1992,
											"end": 2004,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "PUSH",
											"source": 2,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1965,
											"end": 2005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "tag",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1965,
											"end": 2005,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1914,
											"end": 2017,
											"name": "tag",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 1914,
											"end": 2017,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 2024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3006,
											"end": 3197,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 3006,
											"end": 3197,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3080,
											"end": 3096,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3099,
											"end": 3105,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3099,
											"end": 3105,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3099,
											"end": 3105,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3105,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3105,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3105,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3099,
											"end": 3105,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3105,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3105,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3105,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3099,
											"end": 3105,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3080,
											"end": 3105,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3080,
											"end": 3105,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3125,
											"end": 3133,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3116,
											"end": 3122,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3116,
											"end": 3122,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3116,
											"end": 3133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3180,
											"end": 3188,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3149,
											"end": 3189,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3149,
											"end": 3189,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3170,
											"end": 3178,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3149,
											"end": 3189,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3149,
											"end": 3189,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3149,
											"end": 3189,
											"name": "PUSH",
											"source": 2,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3149,
											"end": 3189,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3149,
											"end": 3189,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3149,
											"end": 3189,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3149,
											"end": 3189,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3149,
											"end": 3189,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3149,
											"end": 3189,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3149,
											"end": 3189,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3149,
											"end": 3189,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3149,
											"end": 3189,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 3069,
											"end": 3197,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3006,
											"end": 3197,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3006,
											"end": 3197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16024,
											"end": 16342,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 16024,
											"end": 16342,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16152,
											"end": 16153,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 16132,
											"end": 16154,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16132,
											"end": 16154,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 16132,
											"end": 16140,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 16132,
											"end": 16154,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16132,
											"end": 16154,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 16132,
											"end": 16154,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 16128,
											"end": 16221,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 16128,
											"end": 16221,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 16200,
											"end": 16208,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "PUSH",
											"source": 4,
											"value": "5B08BA1800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 16178,
											"end": 16209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "tag",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16178,
											"end": 16209,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 16128,
											"end": 16221,
											"name": "tag",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 16128,
											"end": 16221,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16269,
											"end": 16277,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 16231,
											"end": 16249,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 16250,
											"end": 16255,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 16231,
											"end": 16256,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 16257,
											"end": 16265,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 16231,
											"end": 16266,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 16231,
											"end": 16277,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16315,
											"end": 16323,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 16308,
											"end": 16313,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "PUSH",
											"source": 4,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 16325,
											"end": 16333,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 16293,
											"end": 16334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "tag",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16293,
											"end": 16334,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 16024,
											"end": 16342,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16024,
											"end": 16342,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16024,
											"end": 16342,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16024,
											"end": 16342,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17382,
											"end": 18181,
											"name": "tag",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 17382,
											"end": 18181,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17516,
											"end": 17517,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 17499,
											"end": 17501,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 17499,
											"end": 17513,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17499,
											"end": 17513,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 17499,
											"end": 17513,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 17499,
											"end": 17517,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 17495,
											"end": 18174,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 17495,
											"end": 18174,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 17495,
											"end": 18174,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 17554,
											"end": 17556,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17574,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17538,
											"end": 17574,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17574,
											"name": "PUSH",
											"source": 4,
											"value": "150B7A02"
										},
										{
											"begin": 17575,
											"end": 17587,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 17575,
											"end": 17585,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 17575,
											"end": 17587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17575,
											"end": 17587,
											"name": "tag",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 17575,
											"end": 17587,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17589,
											"end": 17593,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 17595,
											"end": 17602,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 17604,
											"end": 17608,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 17538,
											"end": 17609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "tag",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 17538,
											"end": 17609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "tag",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "tag",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 17538,
											"end": 17609,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "PUSH",
											"source": 4,
											"value": "3F"
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "tag",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "tag",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17869,
											"end": 17870,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 17852,
											"end": 17858,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17852,
											"end": 17865,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17852,
											"end": 17870,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 17848,
											"end": 18148,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 17848,
											"end": 18148,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 17924,
											"end": 17926,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "PUSH",
											"source": 4,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 17902,
											"end": 17927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "tag",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17902,
											"end": 17927,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 17848,
											"end": 18148,
											"name": "tag",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 17848,
											"end": 18148,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 18098,
											"end": 18104,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 18092,
											"end": 18105,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 18083,
											"end": 18089,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 18079,
											"end": 18081,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 18075,
											"end": 18090,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 18068,
											"end": 18106,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "tag",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 17534,
											"end": 18163,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17667,
											"end": 17708,
											"name": "PUSH",
											"source": 4,
											"value": "150B7A02"
										},
										{
											"begin": 17667,
											"end": 17708,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 17667,
											"end": 17708,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 17657,
											"end": 17708,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17657,
											"end": 17708,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 17657,
											"end": 17708,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 17657,
											"end": 17663,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17657,
											"end": 17708,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17657,
											"end": 17708,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 17657,
											"end": 17708,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 17657,
											"end": 17708,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 17653,
											"end": 17785,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 17653,
											"end": 17785,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 17762,
											"end": 17764,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "PUSH",
											"source": 4,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 17740,
											"end": 17765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "tag",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17740,
											"end": 17765,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 17653,
											"end": 17785,
											"name": "tag",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 17653,
											"end": 17785,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17610,
											"end": 17800,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17495,
											"end": 18174,
											"name": "tag",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 17495,
											"end": 18174,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17382,
											"end": 18181,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17382,
											"end": 18181,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17382,
											"end": 18181,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17382,
											"end": 18181,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17382,
											"end": 18181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 542,
											"end": 661,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 542,
											"end": 661,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 594,
											"end": 607,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 620,
											"end": 653,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 620,
											"end": 653,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 620,
											"end": 653,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 620,
											"end": 653,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 620,
											"end": 653,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 620,
											"end": 653,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 620,
											"end": 653,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 620,
											"end": 653,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 620,
											"end": 653,
											"name": "PUSH",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 620,
											"end": 653,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 620,
											"end": 653,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 620,
											"end": 653,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 620,
											"end": 653,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 620,
											"end": 653,
											"name": "PUSH",
											"source": 1,
											"value": "697066733A2F2F7069656365546F6B656E426173655552490000000000000000"
										},
										{
											"begin": 620,
											"end": 653,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 620,
											"end": 653,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 620,
											"end": 653,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 620,
											"end": 653,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 620,
											"end": 653,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 542,
											"end": 661,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 542,
											"end": 661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 660,
											"end": 1378,
											"name": "tag",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 660,
											"end": 1378,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 716,
											"end": 729,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 767,
											"end": 781,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 804,
											"end": 805,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 784,
											"end": 801,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 795,
											"end": 800,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 784,
											"end": 794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 784,
											"end": 801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 784,
											"end": 801,
											"name": "tag",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 784,
											"end": 801,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 784,
											"end": 805,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 767,
											"end": 805,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 767,
											"end": 805,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 820,
											"end": 840,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 854,
											"end": 860,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 843,
											"end": 861,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 843,
											"end": 861,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 843,
											"end": 861,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 843,
											"end": 861,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 843,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 843,
											"end": 861,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 843,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 843,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 843,
											"end": 861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 843,
											"end": 861,
											"name": "tag",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 843,
											"end": 861,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 843,
											"end": 861,
											"name": "tag",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 843,
											"end": 861,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 843,
											"end": 861,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 843,
											"end": 861,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 843,
											"end": 861,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 843,
											"end": 861,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 843,
											"end": 861,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 843,
											"end": 861,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 843,
											"end": 861,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 843,
											"end": 861,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 843,
											"end": 861,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 843,
											"end": 861,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 843,
											"end": 861,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 843,
											"end": 861,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 843,
											"end": 861,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 843,
											"end": 861,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 843,
											"end": 861,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 843,
											"end": 861,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 843,
											"end": 861,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 843,
											"end": 861,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 843,
											"end": 861,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 843,
											"end": 861,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 843,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 843,
											"end": 861,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 843,
											"end": 861,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 843,
											"end": 861,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 843,
											"end": 861,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 843,
											"end": 861,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 843,
											"end": 861,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 843,
											"end": 861,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 843,
											"end": 861,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 843,
											"end": 861,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 843,
											"end": 861,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 843,
											"end": 861,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 843,
											"end": 861,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 843,
											"end": 861,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 843,
											"end": 861,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 843,
											"end": 861,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 843,
											"end": 861,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 843,
											"end": 861,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 843,
											"end": 861,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 843,
											"end": 861,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 843,
											"end": 861,
											"name": "tag",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 843,
											"end": 861,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 843,
											"end": 861,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 820,
											"end": 861,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 820,
											"end": 861,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 876,
											"end": 887,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1005,
											"end": 1011,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1001,
											"end": 1003,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 997,
											"end": 1012,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 989,
											"end": 995,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 985,
											"end": 1013,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 978,
											"end": 1013,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 978,
											"end": 1013,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1332,
											"name": "tag",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 1042,
											"end": 1332,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1049,
											"end": 1053,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1042,
											"end": 1332,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 1042,
											"end": 1332,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1074,
											"end": 1079,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1074,
											"end": 1079,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1074,
											"end": 1079,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1074,
											"end": 1079,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1074,
											"end": 1079,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1074,
											"end": 1079,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1074,
											"end": 1079,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1074,
											"end": 1079,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1216,
											"end": 1226,
											"name": "PUSH",
											"source": 9,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 1211,
											"end": 1213,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 1204,
											"end": 1209,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1200,
											"end": 1214,
											"name": "MOD",
											"source": 9
										},
										{
											"begin": 1195,
											"end": 1227,
											"name": "BYTE",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1193,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1182,
											"end": 1228,
											"name": "MSTORE8",
											"source": 9
										},
										{
											"begin": 1274,
											"end": 1276,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 1265,
											"end": 1276,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1265,
											"end": 1276,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1265,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 1265,
											"end": 1276,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1265,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 1265,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 1265,
											"end": 1276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1265,
											"end": 1276,
											"name": "tag",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 1265,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1265,
											"end": 1276,
											"name": "tag",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 1265,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1265,
											"end": 1276,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1265,
											"end": 1276,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 1265,
											"end": 1276,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1308,
											"end": 1309,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1299,
											"end": 1304,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1299,
											"end": 1309,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 1295,
											"end": 1316,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1042,
											"end": 1332,
											"name": "tag",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 1042,
											"end": 1332,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1353,
											"end": 1359,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1346,
											"end": 1359,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1346,
											"end": 1359,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1346,
											"end": 1359,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1346,
											"end": 1359,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1346,
											"end": 1359,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 660,
											"end": 1378,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 660,
											"end": 1378,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 660,
											"end": 1378,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 660,
											"end": 1378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5878,
											"end": 5995,
											"name": "tag",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 5878,
											"end": 5995,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5944,
											"end": 5951,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5971,
											"end": 5978,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5979,
											"end": 5986,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5964,
											"end": 5987,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5964,
											"end": 5987,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5878,
											"end": 5995,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5878,
											"end": 5995,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5878,
											"end": 5995,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5878,
											"end": 5995,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15127,
											"end": 15805,
											"name": "tag",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 15127,
											"end": 15805,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15289,
											"end": 15298,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15289,
											"end": 15320,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15289,
											"end": 15320,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 15289,
											"end": 15320,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15289,
											"end": 15320,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15318,
											"end": 15319,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15302,
											"end": 15320,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15302,
											"end": 15320,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15302,
											"end": 15306,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15302,
											"end": 15320,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15302,
											"end": 15320,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15302,
											"end": 15320,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 15302,
											"end": 15320,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15289,
											"end": 15320,
											"name": "tag",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 15289,
											"end": 15320,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15285,
											"end": 15756,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15285,
											"end": 15756,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "274"
										},
										{
											"begin": 15285,
											"end": 15756,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15337,
											"end": 15350,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15353,
											"end": 15375,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "275"
										},
										{
											"begin": 15367,
											"end": 15374,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 15353,
											"end": 15366,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 15353,
											"end": 15375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15353,
											"end": 15375,
											"name": "tag",
											"source": 4,
											"value": "275"
										},
										{
											"begin": 15353,
											"end": 15375,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15337,
											"end": 15375,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15337,
											"end": 15375,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15522,
											"end": 15523,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15506,
											"end": 15524,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15506,
											"end": 15524,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15506,
											"end": 15510,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15506,
											"end": 15524,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15506,
											"end": 15524,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15506,
											"end": 15524,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 15506,
											"end": 15524,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15506,
											"end": 15541,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15506,
											"end": 15541,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15506,
											"end": 15541,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "276"
										},
										{
											"begin": 15506,
											"end": 15541,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15506,
											"end": 15541,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15537,
											"end": 15541,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15528,
											"end": 15541,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15528,
											"end": 15541,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15528,
											"end": 15533,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15528,
											"end": 15541,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15528,
											"end": 15541,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15528,
											"end": 15541,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 15528,
											"end": 15541,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15506,
											"end": 15541,
											"name": "tag",
											"source": 4,
											"value": "276"
										},
										{
											"begin": 15506,
											"end": 15541,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15506,
											"end": 15575,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15506,
											"end": 15575,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15506,
											"end": 15575,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "277"
										},
										{
											"begin": 15506,
											"end": 15575,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15506,
											"end": 15575,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15546,
											"end": 15575,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 15563,
											"end": 15568,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15570,
											"end": 15574,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 15546,
											"end": 15562,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 15546,
											"end": 15575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15546,
											"end": 15575,
											"name": "tag",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 15546,
											"end": 15575,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15545,
											"end": 15575,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15506,
											"end": 15575,
											"name": "tag",
											"source": 4,
											"value": "277"
										},
										{
											"begin": 15506,
											"end": 15575,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15502,
											"end": 15646,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15502,
											"end": 15646,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 15502,
											"end": 15646,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15625,
											"end": 15629,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "PUSH",
											"source": 4,
											"value": "A9FBF51F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "280"
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 15603,
											"end": 15630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "tag",
											"source": 4,
											"value": "280"
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15603,
											"end": 15630,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 15502,
											"end": 15646,
											"name": "tag",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 15502,
											"end": 15646,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15666,
											"end": 15675,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15662,
											"end": 15745,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15662,
											"end": 15745,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "281"
										},
										{
											"begin": 15662,
											"end": 15745,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15721,
											"end": 15728,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15717,
											"end": 15719,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 15701,
											"end": 15729,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15701,
											"end": 15729,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15710,
											"end": 15715,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15701,
											"end": 15729,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15701,
											"end": 15729,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15701,
											"end": 15729,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 15701,
											"end": 15729,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15701,
											"end": 15729,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15701,
											"end": 15729,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15701,
											"end": 15729,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15701,
											"end": 15729,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15701,
											"end": 15729,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15701,
											"end": 15729,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 15701,
											"end": 15729,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15701,
											"end": 15729,
											"name": "LOG4",
											"source": 4
										},
										{
											"begin": 15662,
											"end": 15745,
											"name": "tag",
											"source": 4,
											"value": "281"
										},
										{
											"begin": 15662,
											"end": 15745,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15322,
											"end": 15756,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15285,
											"end": 15756,
											"name": "tag",
											"source": 4,
											"value": "274"
										},
										{
											"begin": 15285,
											"end": 15756,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15795,
											"end": 15797,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15768,
											"end": 15783,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 15768,
											"end": 15792,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15784,
											"end": 15791,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 15768,
											"end": 15792,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15768,
											"end": 15792,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15768,
											"end": 15792,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15768,
											"end": 15792,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15768,
											"end": 15792,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15768,
											"end": 15792,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15768,
											"end": 15792,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15768,
											"end": 15792,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15768,
											"end": 15792,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15768,
											"end": 15792,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15768,
											"end": 15792,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 15768,
											"end": 15792,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 15768,
											"end": 15797,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15127,
											"end": 15805,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15127,
											"end": 15805,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15127,
											"end": 15805,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15127,
											"end": 15805,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15127,
											"end": 15805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7285,
											"end": 7661,
											"name": "tag",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 7285,
											"end": 7661,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7398,
											"end": 7436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 7412,
											"end": 7417,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7419,
											"end": 7426,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7428,
											"end": 7435,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7398,
											"end": 7411,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 7398,
											"end": 7436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7398,
											"end": 7436,
											"name": "tag",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 7398,
											"end": 7436,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7393,
											"end": 7654,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 7393,
											"end": 7654,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7474,
											"end": 7475,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7457,
											"end": 7476,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7457,
											"end": 7476,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7457,
											"end": 7462,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7457,
											"end": 7476,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7457,
											"end": 7476,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7457,
											"end": 7476,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7453,
											"end": 7643,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "286"
										},
										{
											"begin": 7453,
											"end": 7643,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7527,
											"end": 7534,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "PUSH",
											"source": 4,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "287"
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 7504,
											"end": 7535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "tag",
											"source": 4,
											"value": "287"
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7504,
											"end": 7535,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7453,
											"end": 7643,
											"name": "tag",
											"source": 4,
											"value": "286"
										},
										{
											"begin": 7453,
											"end": 7643,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7610,
											"end": 7617,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7619,
											"end": 7626,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "PUSH",
											"source": 4,
											"value": "177E802F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "289"
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "290"
										},
										{
											"begin": 7583,
											"end": 7627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "tag",
											"source": 4,
											"value": "289"
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7583,
											"end": 7627,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7393,
											"end": 7654,
											"name": "tag",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 7393,
											"end": 7654,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7285,
											"end": 7661,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7285,
											"end": 7661,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7285,
											"end": 7661,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7285,
											"end": 7661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12534,
											"end": 13482,
											"name": "tag",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 12534,
											"end": 13482,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12587,
											"end": 12594,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12607,
											"end": 12621,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 12624,
											"end": 12625,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12607,
											"end": 12625,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12607,
											"end": 12625,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12674,
											"end": 12682,
											"name": "PUSH",
											"source": 12,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12665,
											"end": 12670,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12665,
											"end": 12682,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 12661,
											"end": 12767,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 12661,
											"end": 12767,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12712,
											"end": 12720,
											"name": "PUSH",
											"source": 12,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12703,
											"end": 12720,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12703,
											"end": 12720,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12703,
											"end": 12720,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 12703,
											"end": 12720,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12703,
											"end": 12720,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 12703,
											"end": 12720,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "269"
										},
										{
											"begin": 12703,
											"end": 12720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12703,
											"end": 12720,
											"name": "tag",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 12703,
											"end": 12720,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12703,
											"end": 12720,
											"name": "tag",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 12703,
											"end": 12720,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12703,
											"end": 12720,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 12703,
											"end": 12720,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12703,
											"end": 12720,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12749,
											"end": 12751,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 12739,
											"end": 12751,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12739,
											"end": 12751,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12739,
											"end": 12751,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12739,
											"end": 12751,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12661,
											"end": 12767,
											"name": "tag",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 12661,
											"end": 12767,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12794,
											"end": 12802,
											"name": "PUSH",
											"source": 12,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12785,
											"end": 12790,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12785,
											"end": 12802,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 12781,
											"end": 12887,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 12781,
											"end": 12887,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12832,
											"end": 12840,
											"name": "PUSH",
											"source": 12,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12823,
											"end": 12840,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12823,
											"end": 12840,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12823,
											"end": 12840,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "296"
										},
										{
											"begin": 12823,
											"end": 12840,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12823,
											"end": 12840,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 12823,
											"end": 12840,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "269"
										},
										{
											"begin": 12823,
											"end": 12840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12823,
											"end": 12840,
											"name": "tag",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 12823,
											"end": 12840,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12823,
											"end": 12840,
											"name": "tag",
											"source": 12,
											"value": "296"
										},
										{
											"begin": 12823,
											"end": 12840,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12823,
											"end": 12840,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 12823,
											"end": 12840,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12823,
											"end": 12840,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12869,
											"end": 12871,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12859,
											"end": 12871,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12859,
											"end": 12871,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12859,
											"end": 12871,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12859,
											"end": 12871,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12781,
											"end": 12887,
											"name": "tag",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 12781,
											"end": 12887,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12914,
											"end": 12922,
											"name": "PUSH",
											"source": 12,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12905,
											"end": 12910,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12905,
											"end": 12922,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 12901,
											"end": 13007,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "298"
										},
										{
											"begin": 12901,
											"end": 13007,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12952,
											"end": 12960,
											"name": "PUSH",
											"source": 12,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12943,
											"end": 12960,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12943,
											"end": 12960,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12943,
											"end": 12960,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 12943,
											"end": 12960,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12943,
											"end": 12960,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 12943,
											"end": 12960,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "269"
										},
										{
											"begin": 12943,
											"end": 12960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12943,
											"end": 12960,
											"name": "tag",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 12943,
											"end": 12960,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12943,
											"end": 12960,
											"name": "tag",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 12943,
											"end": 12960,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12943,
											"end": 12960,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 12943,
											"end": 12960,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12943,
											"end": 12960,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12989,
											"end": 12991,
											"name": "PUSH",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 12979,
											"end": 12991,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12979,
											"end": 12991,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12979,
											"end": 12991,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12979,
											"end": 12991,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12901,
											"end": 13007,
											"name": "tag",
											"source": 12,
											"value": "298"
										},
										{
											"begin": 12901,
											"end": 13007,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13034,
											"end": 13041,
											"name": "PUSH",
											"source": 12,
											"value": "5F5E100"
										},
										{
											"begin": 13025,
											"end": 13030,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13025,
											"end": 13041,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 13021,
											"end": 13124,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 13021,
											"end": 13124,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13071,
											"end": 13078,
											"name": "PUSH",
											"source": 12,
											"value": "5F5E100"
										},
										{
											"begin": 13062,
											"end": 13078,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13062,
											"end": 13078,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13062,
											"end": 13078,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 13062,
											"end": 13078,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13062,
											"end": 13078,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 13062,
											"end": 13078,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "269"
										},
										{
											"begin": 13062,
											"end": 13078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13062,
											"end": 13078,
											"name": "tag",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 13062,
											"end": 13078,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13062,
											"end": 13078,
											"name": "tag",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 13062,
											"end": 13078,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13062,
											"end": 13078,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 13062,
											"end": 13078,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 13062,
											"end": 13078,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13107,
											"end": 13108,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 13097,
											"end": 13108,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13097,
											"end": 13108,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13097,
											"end": 13108,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13097,
											"end": 13108,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13021,
											"end": 13124,
											"name": "tag",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 13021,
											"end": 13124,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13151,
											"end": 13158,
											"name": "PUSH",
											"source": 12,
											"value": "2710"
										},
										{
											"begin": 13142,
											"end": 13147,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13142,
											"end": 13158,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 13138,
											"end": 13241,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 13138,
											"end": 13241,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13188,
											"end": 13195,
											"name": "PUSH",
											"source": 12,
											"value": "2710"
										},
										{
											"begin": 13179,
											"end": 13195,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13179,
											"end": 13195,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13179,
											"end": 13195,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 13179,
											"end": 13195,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13179,
											"end": 13195,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 13179,
											"end": 13195,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "269"
										},
										{
											"begin": 13179,
											"end": 13195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13179,
											"end": 13195,
											"name": "tag",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 13179,
											"end": 13195,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13179,
											"end": 13195,
											"name": "tag",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 13179,
											"end": 13195,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13179,
											"end": 13195,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 13179,
											"end": 13195,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 13179,
											"end": 13195,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13224,
											"end": 13225,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 13214,
											"end": 13225,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13214,
											"end": 13225,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13214,
											"end": 13225,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13214,
											"end": 13225,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13138,
											"end": 13241,
											"name": "tag",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 13138,
											"end": 13241,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13268,
											"end": 13275,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 13259,
											"end": 13264,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13259,
											"end": 13275,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 13255,
											"end": 13358,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 13255,
											"end": 13358,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13305,
											"end": 13312,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 13296,
											"end": 13312,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13296,
											"end": 13312,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13296,
											"end": 13312,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 13296,
											"end": 13312,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13296,
											"end": 13312,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 13296,
											"end": 13312,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "269"
										},
										{
											"begin": 13296,
											"end": 13312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13296,
											"end": 13312,
											"name": "tag",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 13296,
											"end": 13312,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13296,
											"end": 13312,
											"name": "tag",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 13296,
											"end": 13312,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13296,
											"end": 13312,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 13296,
											"end": 13312,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 13296,
											"end": 13312,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13341,
											"end": 13342,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 13331,
											"end": 13342,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13331,
											"end": 13342,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13331,
											"end": 13342,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13331,
											"end": 13342,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13255,
											"end": 13358,
											"name": "tag",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 13255,
											"end": 13358,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13385,
											"end": 13392,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 13376,
											"end": 13381,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13376,
											"end": 13392,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 13372,
											"end": 13440,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "310"
										},
										{
											"begin": 13372,
											"end": 13440,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13423,
											"end": 13424,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 13413,
											"end": 13424,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13413,
											"end": 13424,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13413,
											"end": 13424,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13413,
											"end": 13424,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13372,
											"end": 13440,
											"name": "tag",
											"source": 12,
											"value": "310"
										},
										{
											"begin": 13372,
											"end": 13440,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13468,
											"end": 13474,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 13461,
											"end": 13474,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13461,
											"end": 13474,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13461,
											"end": 13474,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12534,
											"end": 13482,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12534,
											"end": 13482,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12534,
											"end": 13482,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12534,
											"end": 13482,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6565,
											"end": 6841,
											"name": "tag",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 6565,
											"end": 6841,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6668,
											"end": 6672,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6724,
											"end": 6725,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6705,
											"end": 6726,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6705,
											"end": 6726,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6705,
											"end": 6712,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6705,
											"end": 6726,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6705,
											"end": 6726,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6705,
											"end": 6726,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6705,
											"end": 6726,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6705,
											"end": 6833,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6705,
											"end": 6833,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6705,
											"end": 6833,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "312"
										},
										{
											"begin": 6705,
											"end": 6833,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6705,
											"end": 6833,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6753,
											"end": 6760,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6744,
											"end": 6760,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6744,
											"end": 6760,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6744,
											"end": 6749,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6744,
											"end": 6760,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6744,
											"end": 6760,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6744,
											"end": 6760,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6744,
											"end": 6796,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6744,
											"end": 6796,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "313"
										},
										{
											"begin": 6744,
											"end": 6796,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6744,
											"end": 6796,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6764,
											"end": 6796,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "314"
										},
										{
											"begin": 6781,
											"end": 6786,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6788,
											"end": 6795,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6764,
											"end": 6780,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 6764,
											"end": 6796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6764,
											"end": 6796,
											"name": "tag",
											"source": 4,
											"value": "314"
										},
										{
											"begin": 6764,
											"end": 6796,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6744,
											"end": 6796,
											"name": "tag",
											"source": 4,
											"value": "313"
										},
										{
											"begin": 6744,
											"end": 6796,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6744,
											"end": 6832,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6744,
											"end": 6832,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "315"
										},
										{
											"begin": 6744,
											"end": 6832,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6744,
											"end": 6832,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6825,
											"end": 6832,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6800,
											"end": 6832,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6800,
											"end": 6832,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6800,
											"end": 6821,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "316"
										},
										{
											"begin": 6813,
											"end": 6820,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6800,
											"end": 6812,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 6800,
											"end": 6821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6800,
											"end": 6821,
											"name": "tag",
											"source": 4,
											"value": "316"
										},
										{
											"begin": 6800,
											"end": 6821,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6800,
											"end": 6832,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6800,
											"end": 6832,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6800,
											"end": 6832,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6744,
											"end": 6832,
											"name": "tag",
											"source": 4,
											"value": "315"
										},
										{
											"begin": 6744,
											"end": 6832,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6705,
											"end": 6833,
											"name": "tag",
											"source": 4,
											"value": "312"
										},
										{
											"begin": 6705,
											"end": 6833,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6685,
											"end": 6833,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6685,
											"end": 6833,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6565,
											"end": 6841,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6565,
											"end": 6841,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6565,
											"end": 6841,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6565,
											"end": 6841,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6565,
											"end": 6841,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6565,
											"end": 6841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "165"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 14,
											"value": "317"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 14,
											"value": "318"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 14,
											"value": "319"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 14,
											"value": "320"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 14,
											"value": "321"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "371"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "320"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 14,
											"value": "371"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "372"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 14,
											"value": "372"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 14,
											"value": "322"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "374"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "321"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 14,
											"value": "374"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 14,
											"value": "31"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "376"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "377"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "318"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 14,
											"value": "377"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 14,
											"value": "376"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "378"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "322"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 14,
											"value": "378"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 14,
											"value": "323"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 14,
											"value": "324"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "381"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "323"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 14,
											"value": "381"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 14,
											"value": "34"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "383"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "324"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 14,
											"value": "383"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 14,
											"value": "325"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "tag",
											"source": 14,
											"value": "327"
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1879,
											"end": 1880,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 14,
											"value": "387"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1903,
											"end": 1909,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1900,
											"end": 1901,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1897,
											"end": 1910,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "389"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1983,
											"end": 1986,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1979,
											"end": 1990,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1973,
											"end": 1991,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1969,
											"end": 1970,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1964,
											"end": 1967,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1960,
											"end": 1971,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1953,
											"end": 1992,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1925,
											"end": 1927,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1918,
											"end": 1928,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "387"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 14,
											"value": "389"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2036,
											"end": 2037,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2033,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2022,
											"end": 2025,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2018,
											"end": 2034,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2011,
											"end": 2038,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1860,
											"end": 2044,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1798,
											"end": 2044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "tag",
											"source": 14,
											"value": "328"
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2091,
											"end": 2097,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2144,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 2138,
											"end": 2145,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 2126,
											"end": 2131,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2118,
											"end": 2146,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2050,
											"end": 2152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "tag",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2246,
											"end": 2249,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "392"
										},
										{
											"begin": 2307,
											"end": 2312,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "325"
										},
										{
											"begin": 2274,
											"end": 2313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "tag",
											"source": 14,
											"value": "392"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "393"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2388,
											"end": 2391,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 2329,
											"end": 2400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "tag",
											"source": 14,
											"value": "393"
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "394"
										},
										{
											"begin": 2467,
											"end": 2473,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2462,
											"end": 2465,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2455,
											"end": 2459,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2453,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2444,
											"end": 2460,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "327"
										},
										{
											"begin": 2409,
											"end": 2474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "tag",
											"source": 14,
											"value": "394"
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "395"
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "328"
										},
										{
											"begin": 2499,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "tag",
											"source": 14,
											"value": "395"
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2494,
											"end": 2497,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2490,
											"end": 2529,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2250,
											"end": 2535,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2158,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "tag",
											"source": 14,
											"value": "38"
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2654,
											"end": 2658,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2694,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2741,
											"end": 2750,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2731,
											"end": 2751,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2727,
											"end": 2728,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2725,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2712,
											"end": 2729,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2705,
											"end": 2752,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "397"
										},
										{
											"begin": 2842,
											"end": 2846,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 2769,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "tag",
											"source": 14,
											"value": "397"
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2541,
											"end": 2854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "tag",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2897,
											"end": 2904,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2931,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2860,
											"end": 2937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "tag",
											"source": 14,
											"value": "331"
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "400"
										},
										{
											"begin": 3034,
											"end": 3039,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 3016,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "tag",
											"source": 14,
											"value": "400"
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3009,
											"end": 3014,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3006,
											"end": 3041,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "401"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3055,
											"end": 3056,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3053,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3045,
											"end": 3057,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "tag",
											"source": 14,
											"value": "401"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2943,
											"end": 3065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "tag",
											"source": 14,
											"value": "332"
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3117,
											"end": 3122,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3161,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3142,
											"end": 3162,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "403"
										},
										{
											"begin": 3198,
											"end": 3203,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "331"
										},
										{
											"begin": 3171,
											"end": 3204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "tag",
											"source": 14,
											"value": "403"
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3071,
											"end": 3210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "tag",
											"source": 14,
											"value": "41"
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3275,
											"end": 3281,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3324,
											"end": 3326,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3303,
											"end": 3310,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3299,
											"end": 3322,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3295,
											"end": 3327,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "405"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "406"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "318"
										},
										{
											"begin": 3330,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "tag",
											"source": 14,
											"value": "406"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "tag",
											"source": 14,
											"value": "405"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3450,
											"end": 3451,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "407"
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3511,
											"end": 3517,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3500,
											"end": 3509,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "332"
										},
										{
											"begin": 3475,
											"end": 3528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "tag",
											"source": 14,
											"value": "407"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3421,
											"end": 3538,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3216,
											"end": 3545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "tag",
											"source": 14,
											"value": "333"
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3588,
											"end": 3595,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3628,
											"end": 3670,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3621,
											"end": 3626,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3617,
											"end": 3671,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3551,
											"end": 3677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "tag",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "410"
										},
										{
											"begin": 3767,
											"end": 3772,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "333"
										},
										{
											"begin": 3749,
											"end": 3773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "tag",
											"source": 14,
											"value": "410"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3683,
											"end": 3779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "tag",
											"source": 14,
											"value": "335"
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "412"
										},
										{
											"begin": 3890,
											"end": 3895,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 3872,
											"end": 3896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "tag",
											"source": 14,
											"value": "412"
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3867,
											"end": 3870,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3860,
											"end": 3897,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3785,
											"end": 3903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "tag",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4002,
											"end": 4006,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4040,
											"end": 4042,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4029,
											"end": 4038,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4025,
											"end": 4043,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "414"
										},
										{
											"begin": 4121,
											"end": 4122,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4110,
											"end": 4119,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4106,
											"end": 4123,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4097,
											"end": 4103,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "335"
										},
										{
											"begin": 4053,
											"end": 4124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "tag",
											"source": 14,
											"value": "414"
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3909,
											"end": 4131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "tag",
											"source": 14,
											"value": "336"
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "416"
										},
										{
											"begin": 4228,
											"end": 4233,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 4210,
											"end": 4234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "tag",
											"source": 14,
											"value": "416"
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4203,
											"end": 4208,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4200,
											"end": 4235,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "417"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4249,
											"end": 4250,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4246,
											"end": 4247,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4239,
											"end": 4251,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "tag",
											"source": 14,
											"value": "417"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4137,
											"end": 4259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "tag",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4311,
											"end": 4316,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4349,
											"end": 4355,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4336,
											"end": 4356,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "419"
										},
										{
											"begin": 4392,
											"end": 4397,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "336"
										},
										{
											"begin": 4365,
											"end": 4398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "tag",
											"source": 14,
											"value": "419"
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4265,
											"end": 4404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "tag",
											"source": 14,
											"value": "47"
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4478,
											"end": 4484,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4486,
											"end": 4492,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4535,
											"end": 4537,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4523,
											"end": 4532,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4514,
											"end": 4521,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4510,
											"end": 4533,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4506,
											"end": 4538,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "421"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "422"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "318"
										},
										{
											"begin": 4541,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "tag",
											"source": 14,
											"value": "422"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "tag",
											"source": 14,
											"value": "421"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4661,
											"end": 4662,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "423"
										},
										{
											"begin": 4731,
											"end": 4738,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4722,
											"end": 4728,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4711,
											"end": 4720,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4707,
											"end": 4729,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 4686,
											"end": 4739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "tag",
											"source": 14,
											"value": "423"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4632,
											"end": 4749,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4788,
											"end": 4790,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "424"
										},
										{
											"begin": 4859,
											"end": 4866,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4850,
											"end": 4856,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4839,
											"end": 4848,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4835,
											"end": 4857,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "332"
										},
										{
											"begin": 4814,
											"end": 4867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "tag",
											"source": 14,
											"value": "424"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4759,
											"end": 4877,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4410,
											"end": 4884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "tag",
											"source": 14,
											"value": "51"
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4967,
											"end": 4973,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4975,
											"end": 4981,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4983,
											"end": 4989,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5032,
											"end": 5034,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 5020,
											"end": 5029,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5011,
											"end": 5018,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 5007,
											"end": 5030,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 5003,
											"end": 5035,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "426"
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "427"
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "318"
										},
										{
											"begin": 5038,
											"end": 5117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "tag",
											"source": 14,
											"value": "427"
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "tag",
											"source": 14,
											"value": "426"
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5158,
											"end": 5159,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "428"
										},
										{
											"begin": 5228,
											"end": 5235,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 5219,
											"end": 5225,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5208,
											"end": 5217,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 5204,
											"end": 5226,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 5183,
											"end": 5236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "tag",
											"source": 14,
											"value": "428"
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5173,
											"end": 5236,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 5173,
											"end": 5236,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5129,
											"end": 5246,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5285,
											"end": 5287,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "429"
										},
										{
											"begin": 5356,
											"end": 5363,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 5347,
											"end": 5353,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5336,
											"end": 5345,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 5332,
											"end": 5354,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 5311,
											"end": 5364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "tag",
											"source": 14,
											"value": "429"
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5301,
											"end": 5364,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5301,
											"end": 5364,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5256,
											"end": 5374,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5413,
											"end": 5415,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "430"
										},
										{
											"begin": 5484,
											"end": 5491,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 5475,
											"end": 5481,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5464,
											"end": 5473,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 5460,
											"end": 5482,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "332"
										},
										{
											"begin": 5439,
											"end": 5492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "tag",
											"source": 14,
											"value": "430"
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5429,
											"end": 5492,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5429,
											"end": 5492,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5384,
											"end": 5502,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4890,
											"end": 5509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "tag",
											"source": 14,
											"value": "66"
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5574,
											"end": 5580,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5623,
											"end": 5625,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5611,
											"end": 5620,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5602,
											"end": 5609,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5598,
											"end": 5621,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 5594,
											"end": 5626,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "432"
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "433"
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "318"
										},
										{
											"begin": 5629,
											"end": 5708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "tag",
											"source": 14,
											"value": "433"
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "tag",
											"source": 14,
											"value": "432"
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5749,
											"end": 5750,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "434"
										},
										{
											"begin": 5819,
											"end": 5826,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5810,
											"end": 5816,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5799,
											"end": 5808,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 5795,
											"end": 5817,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 5774,
											"end": 5827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "tag",
											"source": 14,
											"value": "434"
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5764,
											"end": 5827,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5764,
											"end": 5827,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5720,
											"end": 5837,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5515,
											"end": 5844,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5850,
											"end": 5968,
											"name": "tag",
											"source": 14,
											"value": "338"
										},
										{
											"begin": 5850,
											"end": 5968,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5937,
											"end": 5961,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "436"
										},
										{
											"begin": 5955,
											"end": 5960,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5937,
											"end": 5961,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 5937,
											"end": 5961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5937,
											"end": 5961,
											"name": "tag",
											"source": 14,
											"value": "436"
										},
										{
											"begin": 5937,
											"end": 5961,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5932,
											"end": 5935,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5925,
											"end": 5962,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5850,
											"end": 5968,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5850,
											"end": 5968,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5850,
											"end": 5968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "tag",
											"source": 14,
											"value": "69"
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6067,
											"end": 6071,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6105,
											"end": 6107,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6094,
											"end": 6103,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6090,
											"end": 6108,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6082,
											"end": 6108,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6082,
											"end": 6108,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "438"
										},
										{
											"begin": 6186,
											"end": 6187,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6175,
											"end": 6184,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6171,
											"end": 6188,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6162,
											"end": 6168,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "338"
										},
										{
											"begin": 6118,
											"end": 6189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "tag",
											"source": 14,
											"value": "438"
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5974,
											"end": 6196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6202,
											"end": 6310,
											"name": "tag",
											"source": 14,
											"value": "339"
										},
										{
											"begin": 6202,
											"end": 6310,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6279,
											"end": 6303,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "440"
										},
										{
											"begin": 6297,
											"end": 6302,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6279,
											"end": 6303,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 6279,
											"end": 6303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6279,
											"end": 6303,
											"name": "tag",
											"source": 14,
											"value": "440"
										},
										{
											"begin": 6279,
											"end": 6303,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6274,
											"end": 6277,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6267,
											"end": 6304,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6202,
											"end": 6310,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6202,
											"end": 6310,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6202,
											"end": 6310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6316,
											"end": 6376,
											"name": "tag",
											"source": 14,
											"value": "340"
										},
										{
											"begin": 6316,
											"end": 6376,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6344,
											"end": 6347,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6365,
											"end": 6370,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6358,
											"end": 6370,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6358,
											"end": 6370,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6316,
											"end": 6376,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6316,
											"end": 6376,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6316,
											"end": 6376,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6316,
											"end": 6376,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6382,
											"end": 6524,
											"name": "tag",
											"source": 14,
											"value": "341"
										},
										{
											"begin": 6382,
											"end": 6524,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6432,
											"end": 6441,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6465,
											"end": 6518,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "443"
										},
										{
											"begin": 6483,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "444"
										},
										{
											"begin": 6492,
											"end": 6516,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "445"
										},
										{
											"begin": 6510,
											"end": 6515,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6492,
											"end": 6516,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "333"
										},
										{
											"begin": 6492,
											"end": 6516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6492,
											"end": 6516,
											"name": "tag",
											"source": 14,
											"value": "445"
										},
										{
											"begin": 6492,
											"end": 6516,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6483,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "340"
										},
										{
											"begin": 6483,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6483,
											"end": 6517,
											"name": "tag",
											"source": 14,
											"value": "444"
										},
										{
											"begin": 6483,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6465,
											"end": 6518,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "333"
										},
										{
											"begin": 6465,
											"end": 6518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6465,
											"end": 6518,
											"name": "tag",
											"source": 14,
											"value": "443"
										},
										{
											"begin": 6465,
											"end": 6518,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6452,
											"end": 6518,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6452,
											"end": 6518,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6382,
											"end": 6524,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6382,
											"end": 6524,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6382,
											"end": 6524,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6382,
											"end": 6524,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6530,
											"end": 6656,
											"name": "tag",
											"source": 14,
											"value": "342"
										},
										{
											"begin": 6530,
											"end": 6656,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6580,
											"end": 6589,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6613,
											"end": 6650,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "447"
										},
										{
											"begin": 6644,
											"end": 6649,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6613,
											"end": 6650,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "341"
										},
										{
											"begin": 6613,
											"end": 6650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6613,
											"end": 6650,
											"name": "tag",
											"source": 14,
											"value": "447"
										},
										{
											"begin": 6613,
											"end": 6650,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6600,
											"end": 6650,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6600,
											"end": 6650,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6530,
											"end": 6656,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6530,
											"end": 6656,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6530,
											"end": 6656,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6530,
											"end": 6656,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6662,
											"end": 6802,
											"name": "tag",
											"source": 14,
											"value": "343"
										},
										{
											"begin": 6662,
											"end": 6802,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6726,
											"end": 6735,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6759,
											"end": 6796,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "449"
										},
										{
											"begin": 6790,
											"end": 6795,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6759,
											"end": 6796,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "342"
										},
										{
											"begin": 6759,
											"end": 6796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6759,
											"end": 6796,
											"name": "tag",
											"source": 14,
											"value": "449"
										},
										{
											"begin": 6759,
											"end": 6796,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6746,
											"end": 6796,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6746,
											"end": 6796,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6662,
											"end": 6802,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6662,
											"end": 6802,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6662,
											"end": 6802,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6662,
											"end": 6802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6808,
											"end": 6957,
											"name": "tag",
											"source": 14,
											"value": "344"
										},
										{
											"begin": 6808,
											"end": 6957,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6899,
											"end": 6950,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "451"
										},
										{
											"begin": 6944,
											"end": 6949,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6899,
											"end": 6950,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "343"
										},
										{
											"begin": 6899,
											"end": 6950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6899,
											"end": 6950,
											"name": "tag",
											"source": 14,
											"value": "451"
										},
										{
											"begin": 6899,
											"end": 6950,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6894,
											"end": 6897,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6887,
											"end": 6951,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6808,
											"end": 6957,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6808,
											"end": 6957,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6808,
											"end": 6957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6963,
											"end": 7071,
											"name": "tag",
											"source": 14,
											"value": "345"
										},
										{
											"begin": 6963,
											"end": 7071,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7040,
											"end": 7064,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "453"
										},
										{
											"begin": 7058,
											"end": 7063,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7040,
											"end": 7064,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 7040,
											"end": 7064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7040,
											"end": 7064,
											"name": "tag",
											"source": 14,
											"value": "453"
										},
										{
											"begin": 7040,
											"end": 7064,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7035,
											"end": 7038,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7028,
											"end": 7065,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6963,
											"end": 7071,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6963,
											"end": 7071,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6963,
											"end": 7071,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7077,
											"end": 7176,
											"name": "tag",
											"source": 14,
											"value": "346"
										},
										{
											"begin": 7077,
											"end": 7176,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7148,
											"end": 7169,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "455"
										},
										{
											"begin": 7163,
											"end": 7168,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7148,
											"end": 7169,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "323"
										},
										{
											"begin": 7148,
											"end": 7169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7148,
											"end": 7169,
											"name": "tag",
											"source": 14,
											"value": "455"
										},
										{
											"begin": 7148,
											"end": 7169,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7143,
											"end": 7146,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7136,
											"end": 7170,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7077,
											"end": 7176,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7077,
											"end": 7176,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7077,
											"end": 7176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7226,
											"end": 8103,
											"name": "tag",
											"source": 14,
											"value": "347"
										},
										{
											"begin": 7226,
											"end": 8103,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7375,
											"end": 7379,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 7370,
											"end": 7373,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7366,
											"end": 7380,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7470,
											"end": 7474,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7463,
											"end": 7468,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7459,
											"end": 7475,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7453,
											"end": 7476,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 7489,
											"end": 7552,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "457"
										},
										{
											"begin": 7546,
											"end": 7550,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7541,
											"end": 7544,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 7537,
											"end": 7551,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7523,
											"end": 7535,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7489,
											"end": 7552,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "339"
										},
										{
											"begin": 7489,
											"end": 7552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7489,
											"end": 7552,
											"name": "tag",
											"source": 14,
											"value": "457"
										},
										{
											"begin": 7489,
											"end": 7552,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7390,
											"end": 7562,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7645,
											"end": 7649,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7638,
											"end": 7643,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7634,
											"end": 7650,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7628,
											"end": 7651,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 7664,
											"end": 7741,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "458"
										},
										{
											"begin": 7735,
											"end": 7739,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7730,
											"end": 7733,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 7726,
											"end": 7740,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7712,
											"end": 7724,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7664,
											"end": 7741,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "344"
										},
										{
											"begin": 7664,
											"end": 7741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7664,
											"end": 7741,
											"name": "tag",
											"source": 14,
											"value": "458"
										},
										{
											"begin": 7664,
											"end": 7741,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7572,
											"end": 7751,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7834,
											"end": 7838,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 7827,
											"end": 7832,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7823,
											"end": 7839,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7817,
											"end": 7840,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 7853,
											"end": 7916,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "459"
										},
										{
											"begin": 7910,
											"end": 7914,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 7905,
											"end": 7908,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 7901,
											"end": 7915,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7887,
											"end": 7899,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7853,
											"end": 7916,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "345"
										},
										{
											"begin": 7853,
											"end": 7916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7853,
											"end": 7916,
											"name": "tag",
											"source": 14,
											"value": "459"
										},
										{
											"begin": 7853,
											"end": 7916,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7761,
											"end": 7926,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8010,
											"end": 8014,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 8003,
											"end": 8008,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7999,
											"end": 8015,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7993,
											"end": 8016,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 8029,
											"end": 8086,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "460"
										},
										{
											"begin": 8080,
											"end": 8084,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 8075,
											"end": 8078,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 8071,
											"end": 8085,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8057,
											"end": 8069,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8029,
											"end": 8086,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "346"
										},
										{
											"begin": 8029,
											"end": 8086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8029,
											"end": 8086,
											"name": "tag",
											"source": 14,
											"value": "460"
										},
										{
											"begin": 8029,
											"end": 8086,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7936,
											"end": 8096,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7344,
											"end": 8103,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7226,
											"end": 8103,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7226,
											"end": 8103,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7226,
											"end": 8103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8109,
											"end": 8436,
											"name": "tag",
											"source": 14,
											"value": "75"
										},
										{
											"begin": 8109,
											"end": 8436,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8254,
											"end": 8258,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8292,
											"end": 8295,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 8281,
											"end": 8290,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8277,
											"end": 8296,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8269,
											"end": 8296,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8269,
											"end": 8296,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8306,
											"end": 8429,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "462"
										},
										{
											"begin": 8426,
											"end": 8427,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8415,
											"end": 8424,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8411,
											"end": 8428,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8402,
											"end": 8408,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8306,
											"end": 8429,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "347"
										},
										{
											"begin": 8306,
											"end": 8429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8306,
											"end": 8429,
											"name": "tag",
											"source": 14,
											"value": "462"
										},
										{
											"begin": 8306,
											"end": 8429,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8109,
											"end": 8436,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 8109,
											"end": 8436,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8109,
											"end": 8436,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8109,
											"end": 8436,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8109,
											"end": 8436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8442,
											"end": 8558,
											"name": "tag",
											"source": 14,
											"value": "348"
										},
										{
											"begin": 8442,
											"end": 8558,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8512,
											"end": 8533,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "464"
										},
										{
											"begin": 8527,
											"end": 8532,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8512,
											"end": 8533,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "323"
										},
										{
											"begin": 8512,
											"end": 8533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8512,
											"end": 8533,
											"name": "tag",
											"source": 14,
											"value": "464"
										},
										{
											"begin": 8512,
											"end": 8533,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8505,
											"end": 8510,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8502,
											"end": 8534,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 8492,
											"end": 8552,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "465"
										},
										{
											"begin": 8492,
											"end": 8552,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8548,
											"end": 8549,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8545,
											"end": 8546,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 8538,
											"end": 8550,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 8492,
											"end": 8552,
											"name": "tag",
											"source": 14,
											"value": "465"
										},
										{
											"begin": 8492,
											"end": 8552,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8442,
											"end": 8558,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8442,
											"end": 8558,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8564,
											"end": 8697,
											"name": "tag",
											"source": 14,
											"value": "349"
										},
										{
											"begin": 8564,
											"end": 8697,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8607,
											"end": 8612,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8645,
											"end": 8651,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8632,
											"end": 8652,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 8623,
											"end": 8652,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8623,
											"end": 8652,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8661,
											"end": 8691,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "467"
										},
										{
											"begin": 8685,
											"end": 8690,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8661,
											"end": 8691,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "348"
										},
										{
											"begin": 8661,
											"end": 8691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8661,
											"end": 8691,
											"name": "tag",
											"source": 14,
											"value": "467"
										},
										{
											"begin": 8661,
											"end": 8691,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8564,
											"end": 8697,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 8564,
											"end": 8697,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8564,
											"end": 8697,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8564,
											"end": 8697,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8564,
											"end": 8697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8703,
											"end": 9171,
											"name": "tag",
											"source": 14,
											"value": "95"
										},
										{
											"begin": 8703,
											"end": 9171,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8768,
											"end": 8774,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8776,
											"end": 8782,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 8825,
											"end": 8827,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 8813,
											"end": 8822,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8804,
											"end": 8811,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 8800,
											"end": 8823,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 8796,
											"end": 8828,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 8793,
											"end": 8912,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 8793,
											"end": 8912,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "469"
										},
										{
											"begin": 8793,
											"end": 8912,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8831,
											"end": 8910,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "470"
										},
										{
											"begin": 8831,
											"end": 8910,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "318"
										},
										{
											"begin": 8831,
											"end": 8910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8831,
											"end": 8910,
											"name": "tag",
											"source": 14,
											"value": "470"
										},
										{
											"begin": 8831,
											"end": 8910,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8793,
											"end": 8912,
											"name": "tag",
											"source": 14,
											"value": "469"
										},
										{
											"begin": 8793,
											"end": 8912,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8951,
											"end": 8952,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8976,
											"end": 9029,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "471"
										},
										{
											"begin": 9021,
											"end": 9028,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 9012,
											"end": 9018,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9001,
											"end": 9010,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 8997,
											"end": 9019,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8976,
											"end": 9029,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 8976,
											"end": 9029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8976,
											"end": 9029,
											"name": "tag",
											"source": 14,
											"value": "471"
										},
										{
											"begin": 8976,
											"end": 9029,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8966,
											"end": 9029,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 8966,
											"end": 9029,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8922,
											"end": 9039,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9078,
											"end": 9080,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9104,
											"end": 9154,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "472"
										},
										{
											"begin": 9146,
											"end": 9153,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 9137,
											"end": 9143,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9126,
											"end": 9135,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 9122,
											"end": 9144,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9104,
											"end": 9154,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "349"
										},
										{
											"begin": 9104,
											"end": 9154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9104,
											"end": 9154,
											"name": "tag",
											"source": 14,
											"value": "472"
										},
										{
											"begin": 9104,
											"end": 9154,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9094,
											"end": 9154,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9094,
											"end": 9154,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9049,
											"end": 9164,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8703,
											"end": 9171,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 8703,
											"end": 9171,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8703,
											"end": 9171,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 8703,
											"end": 9171,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8703,
											"end": 9171,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8703,
											"end": 9171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9177,
											"end": 9294,
											"name": "tag",
											"source": 14,
											"value": "350"
										},
										{
											"begin": 9177,
											"end": 9294,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9286,
											"end": 9287,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9283,
											"end": 9284,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 9276,
											"end": 9288,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 9300,
											"end": 9417,
											"name": "tag",
											"source": 14,
											"value": "351"
										},
										{
											"begin": 9300,
											"end": 9417,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9409,
											"end": 9410,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9406,
											"end": 9407,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 9399,
											"end": 9411,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 9423,
											"end": 9603,
											"name": "tag",
											"source": 14,
											"value": "263"
										},
										{
											"begin": 9423,
											"end": 9603,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9471,
											"end": 9548,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9468,
											"end": 9469,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9461,
											"end": 9549,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9568,
											"end": 9572,
											"name": "PUSH",
											"source": 14,
											"value": "41"
										},
										{
											"begin": 9565,
											"end": 9566,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 9558,
											"end": 9573,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9592,
											"end": 9596,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 9589,
											"end": 9590,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9582,
											"end": 9597,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 9609,
											"end": 9890,
											"name": "tag",
											"source": 14,
											"value": "352"
										},
										{
											"begin": 9609,
											"end": 9890,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9692,
											"end": 9719,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "477"
										},
										{
											"begin": 9714,
											"end": 9718,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9692,
											"end": 9719,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "328"
										},
										{
											"begin": 9692,
											"end": 9719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9692,
											"end": 9719,
											"name": "tag",
											"source": 14,
											"value": "477"
										},
										{
											"begin": 9692,
											"end": 9719,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9684,
											"end": 9690,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9680,
											"end": 9720,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9822,
											"end": 9828,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9810,
											"end": 9820,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9807,
											"end": 9829,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 9786,
											"end": 9804,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9774,
											"end": 9784,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9771,
											"end": 9805,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 9768,
											"end": 9830,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 9765,
											"end": 9853,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 9765,
											"end": 9853,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "478"
										},
										{
											"begin": 9765,
											"end": 9853,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 9833,
											"end": 9851,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "479"
										},
										{
											"begin": 9833,
											"end": 9851,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "263"
										},
										{
											"begin": 9833,
											"end": 9851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9833,
											"end": 9851,
											"name": "tag",
											"source": 14,
											"value": "479"
										},
										{
											"begin": 9833,
											"end": 9851,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9765,
											"end": 9853,
											"name": "tag",
											"source": 14,
											"value": "478"
										},
										{
											"begin": 9765,
											"end": 9853,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9873,
											"end": 9883,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 9869,
											"end": 9871,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 9862,
											"end": 9884,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9652,
											"end": 9890,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9609,
											"end": 9890,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9609,
											"end": 9890,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9609,
											"end": 9890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9896,
											"end": 10025,
											"name": "tag",
											"source": 14,
											"value": "353"
										},
										{
											"begin": 9896,
											"end": 10025,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9930,
											"end": 9936,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9957,
											"end": 9977,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "481"
										},
										{
											"begin": 9957,
											"end": 9977,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "317"
										},
										{
											"begin": 9957,
											"end": 9977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9957,
											"end": 9977,
											"name": "tag",
											"source": 14,
											"value": "481"
										},
										{
											"begin": 9957,
											"end": 9977,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9947,
											"end": 9977,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9947,
											"end": 9977,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9986,
											"end": 10019,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "482"
										},
										{
											"begin": 10014,
											"end": 10018,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10006,
											"end": 10012,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9986,
											"end": 10019,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "352"
										},
										{
											"begin": 9986,
											"end": 10019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9986,
											"end": 10019,
											"name": "tag",
											"source": 14,
											"value": "482"
										},
										{
											"begin": 9986,
											"end": 10019,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9896,
											"end": 10025,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9896,
											"end": 10025,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9896,
											"end": 10025,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9896,
											"end": 10025,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10031,
											"end": 10338,
											"name": "tag",
											"source": 14,
											"value": "354"
										},
										{
											"begin": 10031,
											"end": 10338,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10092,
											"end": 10096,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10182,
											"end": 10200,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10174,
											"end": 10180,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10171,
											"end": 10201,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 10168,
											"end": 10224,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 10168,
											"end": 10224,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "484"
										},
										{
											"begin": 10168,
											"end": 10224,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10204,
											"end": 10222,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "485"
										},
										{
											"begin": 10204,
											"end": 10222,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "263"
										},
										{
											"begin": 10204,
											"end": 10222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10204,
											"end": 10222,
											"name": "tag",
											"source": 14,
											"value": "485"
										},
										{
											"begin": 10204,
											"end": 10222,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10168,
											"end": 10224,
											"name": "tag",
											"source": 14,
											"value": "484"
										},
										{
											"begin": 10168,
											"end": 10224,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10242,
											"end": 10271,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "486"
										},
										{
											"begin": 10264,
											"end": 10270,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10242,
											"end": 10271,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "328"
										},
										{
											"begin": 10242,
											"end": 10271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10242,
											"end": 10271,
											"name": "tag",
											"source": 14,
											"value": "486"
										},
										{
											"begin": 10242,
											"end": 10271,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10234,
											"end": 10271,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10234,
											"end": 10271,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10326,
											"end": 10330,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10320,
											"end": 10324,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10316,
											"end": 10331,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10308,
											"end": 10331,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10308,
											"end": 10331,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10031,
											"end": 10338,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10031,
											"end": 10338,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10031,
											"end": 10338,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10031,
											"end": 10338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10344,
											"end": 10490,
											"name": "tag",
											"source": 14,
											"value": "355"
										},
										{
											"begin": 10344,
											"end": 10490,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10441,
											"end": 10447,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10436,
											"end": 10439,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10431,
											"end": 10434,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10418,
											"end": 10448,
											"name": "CALLDATACOPY",
											"source": 14
										},
										{
											"begin": 10482,
											"end": 10483,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10473,
											"end": 10479,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10468,
											"end": 10471,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10464,
											"end": 10480,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10457,
											"end": 10484,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10344,
											"end": 10490,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10344,
											"end": 10490,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10344,
											"end": 10490,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10344,
											"end": 10490,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10496,
											"end": 10919,
											"name": "tag",
											"source": 14,
											"value": "356"
										},
										{
											"begin": 10496,
											"end": 10919,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10573,
											"end": 10578,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10598,
											"end": 10663,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "489"
										},
										{
											"begin": 10614,
											"end": 10662,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "490"
										},
										{
											"begin": 10655,
											"end": 10661,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 10614,
											"end": 10662,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "354"
										},
										{
											"begin": 10614,
											"end": 10662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10614,
											"end": 10662,
											"name": "tag",
											"source": 14,
											"value": "490"
										},
										{
											"begin": 10614,
											"end": 10662,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10598,
											"end": 10663,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "353"
										},
										{
											"begin": 10598,
											"end": 10663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10598,
											"end": 10663,
											"name": "tag",
											"source": 14,
											"value": "489"
										},
										{
											"begin": 10598,
											"end": 10663,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10589,
											"end": 10663,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10589,
											"end": 10663,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10686,
											"end": 10692,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10679,
											"end": 10684,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10672,
											"end": 10693,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10724,
											"end": 10728,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10717,
											"end": 10722,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10713,
											"end": 10729,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10762,
											"end": 10765,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 10753,
											"end": 10759,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 10748,
											"end": 10751,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 10744,
											"end": 10760,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10741,
											"end": 10766,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 10738,
											"end": 10850,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 10738,
											"end": 10850,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "491"
										},
										{
											"begin": 10738,
											"end": 10850,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10769,
											"end": 10848,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "492"
										},
										{
											"begin": 10769,
											"end": 10848,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "351"
										},
										{
											"begin": 10769,
											"end": 10848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10769,
											"end": 10848,
											"name": "tag",
											"source": 14,
											"value": "492"
										},
										{
											"begin": 10769,
											"end": 10848,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10738,
											"end": 10850,
											"name": "tag",
											"source": 14,
											"value": "491"
										},
										{
											"begin": 10738,
											"end": 10850,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10859,
											"end": 10913,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "493"
										},
										{
											"begin": 10906,
											"end": 10912,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 10901,
											"end": 10904,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10896,
											"end": 10899,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 10859,
											"end": 10913,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "355"
										},
										{
											"begin": 10859,
											"end": 10913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10859,
											"end": 10913,
											"name": "tag",
											"source": 14,
											"value": "493"
										},
										{
											"begin": 10859,
											"end": 10913,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10579,
											"end": 10919,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10496,
											"end": 10919,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 10496,
											"end": 10919,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10496,
											"end": 10919,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10496,
											"end": 10919,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10496,
											"end": 10919,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10496,
											"end": 10919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10938,
											"end": 11276,
											"name": "tag",
											"source": 14,
											"value": "357"
										},
										{
											"begin": 10938,
											"end": 11276,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10993,
											"end": 10998,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11042,
											"end": 11045,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11035,
											"end": 11039,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 11027,
											"end": 11033,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11023,
											"end": 11040,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11019,
											"end": 11046,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 11009,
											"end": 11131,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "495"
										},
										{
											"begin": 11009,
											"end": 11131,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11050,
											"end": 11129,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "496"
										},
										{
											"begin": 11050,
											"end": 11129,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "350"
										},
										{
											"begin": 11050,
											"end": 11129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11050,
											"end": 11129,
											"name": "tag",
											"source": 14,
											"value": "496"
										},
										{
											"begin": 11050,
											"end": 11129,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11009,
											"end": 11131,
											"name": "tag",
											"source": 14,
											"value": "495"
										},
										{
											"begin": 11009,
											"end": 11131,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11167,
											"end": 11173,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11154,
											"end": 11174,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 11192,
											"end": 11270,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "497"
										},
										{
											"begin": 11266,
											"end": 11269,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 11258,
											"end": 11264,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11251,
											"end": 11255,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11243,
											"end": 11249,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 11239,
											"end": 11256,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11192,
											"end": 11270,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "356"
										},
										{
											"begin": 11192,
											"end": 11270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11192,
											"end": 11270,
											"name": "tag",
											"source": 14,
											"value": "497"
										},
										{
											"begin": 11192,
											"end": 11270,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11183,
											"end": 11270,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11183,
											"end": 11270,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10999,
											"end": 11276,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10938,
											"end": 11276,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10938,
											"end": 11276,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10938,
											"end": 11276,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10938,
											"end": 11276,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10938,
											"end": 11276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11282,
											"end": 12225,
											"name": "tag",
											"source": 14,
											"value": "99"
										},
										{
											"begin": 11282,
											"end": 12225,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11377,
											"end": 11383,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11385,
											"end": 11391,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11393,
											"end": 11399,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11401,
											"end": 11407,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11450,
											"end": 11453,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 11438,
											"end": 11447,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 11429,
											"end": 11436,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 11425,
											"end": 11448,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 11421,
											"end": 11454,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 11418,
											"end": 11538,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11418,
											"end": 11538,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "499"
										},
										{
											"begin": 11418,
											"end": 11538,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11457,
											"end": 11536,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "500"
										},
										{
											"begin": 11457,
											"end": 11536,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "318"
										},
										{
											"begin": 11457,
											"end": 11536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11457,
											"end": 11536,
											"name": "tag",
											"source": 14,
											"value": "500"
										},
										{
											"begin": 11457,
											"end": 11536,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11418,
											"end": 11538,
											"name": "tag",
											"source": 14,
											"value": "499"
										},
										{
											"begin": 11418,
											"end": 11538,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11577,
											"end": 11578,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11602,
											"end": 11655,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "501"
										},
										{
											"begin": 11647,
											"end": 11654,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 11638,
											"end": 11644,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11627,
											"end": 11636,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 11623,
											"end": 11645,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11602,
											"end": 11655,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 11602,
											"end": 11655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11602,
											"end": 11655,
											"name": "tag",
											"source": 14,
											"value": "501"
										},
										{
											"begin": 11602,
											"end": 11655,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11592,
											"end": 11655,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 11592,
											"end": 11655,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11548,
											"end": 11665,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11704,
											"end": 11706,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11730,
											"end": 11783,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "502"
										},
										{
											"begin": 11775,
											"end": 11782,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 11766,
											"end": 11772,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11755,
											"end": 11764,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 11751,
											"end": 11773,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11730,
											"end": 11783,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 11730,
											"end": 11783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11730,
											"end": 11783,
											"name": "tag",
											"source": 14,
											"value": "502"
										},
										{
											"begin": 11730,
											"end": 11783,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11720,
											"end": 11783,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 11720,
											"end": 11783,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11675,
											"end": 11793,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11832,
											"end": 11834,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 11858,
											"end": 11911,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "503"
										},
										{
											"begin": 11903,
											"end": 11910,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 11894,
											"end": 11900,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11883,
											"end": 11892,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 11879,
											"end": 11901,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11858,
											"end": 11911,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "332"
										},
										{
											"begin": 11858,
											"end": 11911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11858,
											"end": 11911,
											"name": "tag",
											"source": 14,
											"value": "503"
										},
										{
											"begin": 11858,
											"end": 11911,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11848,
											"end": 11911,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 11848,
											"end": 11911,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11803,
											"end": 11921,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11988,
											"end": 11990,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 11977,
											"end": 11986,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 11973,
											"end": 11991,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11960,
											"end": 11992,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 12019,
											"end": 12037,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12011,
											"end": 12017,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12008,
											"end": 12038,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 12005,
											"end": 12122,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 12005,
											"end": 12122,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "504"
										},
										{
											"begin": 12005,
											"end": 12122,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12041,
											"end": 12120,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "505"
										},
										{
											"begin": 12041,
											"end": 12120,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "319"
										},
										{
											"begin": 12041,
											"end": 12120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12041,
											"end": 12120,
											"name": "tag",
											"source": 14,
											"value": "505"
										},
										{
											"begin": 12041,
											"end": 12120,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12005,
											"end": 12122,
											"name": "tag",
											"source": 14,
											"value": "504"
										},
										{
											"begin": 12005,
											"end": 12122,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12146,
											"end": 12208,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "506"
										},
										{
											"begin": 12200,
											"end": 12207,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 12191,
											"end": 12197,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12180,
											"end": 12189,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 12176,
											"end": 12198,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12146,
											"end": 12208,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "357"
										},
										{
											"begin": 12146,
											"end": 12208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12146,
											"end": 12208,
											"name": "tag",
											"source": 14,
											"value": "506"
										},
										{
											"begin": 12146,
											"end": 12208,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12136,
											"end": 12208,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12136,
											"end": 12208,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11931,
											"end": 12218,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11282,
											"end": 12225,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 11282,
											"end": 12225,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 11282,
											"end": 12225,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11282,
											"end": 12225,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 11282,
											"end": 12225,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11282,
											"end": 12225,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 11282,
											"end": 12225,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11282,
											"end": 12225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12231,
											"end": 12705,
											"name": "tag",
											"source": 14,
											"value": "107"
										},
										{
											"begin": 12231,
											"end": 12705,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12299,
											"end": 12305,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12307,
											"end": 12313,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 12356,
											"end": 12358,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 12344,
											"end": 12353,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12335,
											"end": 12342,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 12331,
											"end": 12354,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 12327,
											"end": 12359,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 12324,
											"end": 12443,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 12324,
											"end": 12443,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "508"
										},
										{
											"begin": 12324,
											"end": 12443,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12362,
											"end": 12441,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "509"
										},
										{
											"begin": 12362,
											"end": 12441,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "318"
										},
										{
											"begin": 12362,
											"end": 12441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12362,
											"end": 12441,
											"name": "tag",
											"source": 14,
											"value": "509"
										},
										{
											"begin": 12362,
											"end": 12441,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12324,
											"end": 12443,
											"name": "tag",
											"source": 14,
											"value": "508"
										},
										{
											"begin": 12324,
											"end": 12443,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12482,
											"end": 12483,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12507,
											"end": 12560,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "510"
										},
										{
											"begin": 12552,
											"end": 12559,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 12543,
											"end": 12549,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12532,
											"end": 12541,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 12528,
											"end": 12550,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12507,
											"end": 12560,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 12507,
											"end": 12560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12507,
											"end": 12560,
											"name": "tag",
											"source": 14,
											"value": "510"
										},
										{
											"begin": 12507,
											"end": 12560,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12497,
											"end": 12560,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12497,
											"end": 12560,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12453,
											"end": 12570,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12609,
											"end": 12611,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12635,
											"end": 12688,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "511"
										},
										{
											"begin": 12680,
											"end": 12687,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 12671,
											"end": 12677,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12660,
											"end": 12669,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 12656,
											"end": 12678,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12635,
											"end": 12688,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 12635,
											"end": 12688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12635,
											"end": 12688,
											"name": "tag",
											"source": 14,
											"value": "511"
										},
										{
											"begin": 12635,
											"end": 12688,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12625,
											"end": 12688,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12625,
											"end": 12688,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12580,
											"end": 12698,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12231,
											"end": 12705,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12231,
											"end": 12705,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12231,
											"end": 12705,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12231,
											"end": 12705,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12231,
											"end": 12705,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12231,
											"end": 12705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12711,
											"end": 12891,
											"name": "tag",
											"source": 14,
											"value": "358"
										},
										{
											"begin": 12711,
											"end": 12891,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12759,
											"end": 12836,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12756,
											"end": 12757,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12749,
											"end": 12837,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12856,
											"end": 12860,
											"name": "PUSH",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 12853,
											"end": 12854,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 12846,
											"end": 12861,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12880,
											"end": 12884,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 12877,
											"end": 12878,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12870,
											"end": 12885,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 12897,
											"end": 13217,
											"name": "tag",
											"source": 14,
											"value": "120"
										},
										{
											"begin": 12897,
											"end": 13217,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12941,
											"end": 12947,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12978,
											"end": 12979,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 12972,
											"end": 12976,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12968,
											"end": 12980,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 12958,
											"end": 12980,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12958,
											"end": 12980,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13025,
											"end": 13026,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 13019,
											"end": 13023,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13015,
											"end": 13027,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 13046,
											"end": 13064,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 13036,
											"end": 13117,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "514"
										},
										{
											"begin": 13036,
											"end": 13117,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13102,
											"end": 13106,
											"name": "PUSH",
											"source": 14,
											"value": "7F"
										},
										{
											"begin": 13094,
											"end": 13100,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13090,
											"end": 13107,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 13080,
											"end": 13107,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13080,
											"end": 13107,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13036,
											"end": 13117,
											"name": "tag",
											"source": 14,
											"value": "514"
										},
										{
											"begin": 13036,
											"end": 13117,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13164,
											"end": 13166,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 13156,
											"end": 13162,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13153,
											"end": 13167,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 13133,
											"end": 13151,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13130,
											"end": 13168,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 13127,
											"end": 13211,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "515"
										},
										{
											"begin": 13127,
											"end": 13211,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13183,
											"end": 13201,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "516"
										},
										{
											"begin": 13183,
											"end": 13201,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "358"
										},
										{
											"begin": 13183,
											"end": 13201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13183,
											"end": 13201,
											"name": "tag",
											"source": 14,
											"value": "516"
										},
										{
											"begin": 13183,
											"end": 13201,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13127,
											"end": 13211,
											"name": "tag",
											"source": 14,
											"value": "515"
										},
										{
											"begin": 13127,
											"end": 13211,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12948,
											"end": 13217,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12897,
											"end": 13217,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12897,
											"end": 13217,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12897,
											"end": 13217,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12897,
											"end": 13217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13223,
											"end": 13665,
											"name": "tag",
											"source": 14,
											"value": "143"
										},
										{
											"begin": 13223,
											"end": 13665,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13372,
											"end": 13376,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13410,
											"end": 13412,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 13399,
											"end": 13408,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13395,
											"end": 13413,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13387,
											"end": 13413,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13387,
											"end": 13413,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13423,
											"end": 13494,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "518"
										},
										{
											"begin": 13491,
											"end": 13492,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13480,
											"end": 13489,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13476,
											"end": 13493,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13467,
											"end": 13473,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 13423,
											"end": 13494,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "335"
										},
										{
											"begin": 13423,
											"end": 13494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13423,
											"end": 13494,
											"name": "tag",
											"source": 14,
											"value": "518"
										},
										{
											"begin": 13423,
											"end": 13494,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13504,
											"end": 13576,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "519"
										},
										{
											"begin": 13572,
											"end": 13574,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 13561,
											"end": 13570,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13557,
											"end": 13575,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13548,
											"end": 13554,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 13504,
											"end": 13576,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "338"
										},
										{
											"begin": 13504,
											"end": 13576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13504,
											"end": 13576,
											"name": "tag",
											"source": 14,
											"value": "519"
										},
										{
											"begin": 13504,
											"end": 13576,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13586,
											"end": 13658,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "520"
										},
										{
											"begin": 13654,
											"end": 13656,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 13643,
											"end": 13652,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13639,
											"end": 13657,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13630,
											"end": 13636,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 13586,
											"end": 13658,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "335"
										},
										{
											"begin": 13586,
											"end": 13658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13586,
											"end": 13658,
											"name": "tag",
											"source": 14,
											"value": "520"
										},
										{
											"begin": 13586,
											"end": 13658,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13223,
											"end": 13665,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 13223,
											"end": 13665,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 13223,
											"end": 13665,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13223,
											"end": 13665,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13223,
											"end": 13665,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13223,
											"end": 13665,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13223,
											"end": 13665,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13671,
											"end": 13819,
											"name": "tag",
											"source": 14,
											"value": "359"
										},
										{
											"begin": 13671,
											"end": 13819,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13773,
											"end": 13784,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13810,
											"end": 13813,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13795,
											"end": 13813,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13795,
											"end": 13813,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13671,
											"end": 13819,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 13671,
											"end": 13819,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13671,
											"end": 13819,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13671,
											"end": 13819,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13671,
											"end": 13819,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13825,
											"end": 14215,
											"name": "tag",
											"source": 14,
											"value": "360"
										},
										{
											"begin": 13825,
											"end": 14215,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13931,
											"end": 13934,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13959,
											"end": 13998,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "523"
										},
										{
											"begin": 13992,
											"end": 13997,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13959,
											"end": 13998,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "325"
										},
										{
											"begin": 13959,
											"end": 13998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13959,
											"end": 13998,
											"name": "tag",
											"source": 14,
											"value": "523"
										},
										{
											"begin": 13959,
											"end": 13998,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14014,
											"end": 14103,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "524"
										},
										{
											"begin": 14096,
											"end": 14102,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14091,
											"end": 14094,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 14014,
											"end": 14103,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "359"
										},
										{
											"begin": 14014,
											"end": 14103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14014,
											"end": 14103,
											"name": "tag",
											"source": 14,
											"value": "524"
										},
										{
											"begin": 14014,
											"end": 14103,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14007,
											"end": 14103,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 14007,
											"end": 14103,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14112,
											"end": 14177,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "525"
										},
										{
											"begin": 14170,
											"end": 14176,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14165,
											"end": 14168,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 14158,
											"end": 14162,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 14151,
											"end": 14156,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 14147,
											"end": 14163,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14112,
											"end": 14177,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "327"
										},
										{
											"begin": 14112,
											"end": 14177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14112,
											"end": 14177,
											"name": "tag",
											"source": 14,
											"value": "525"
										},
										{
											"begin": 14112,
											"end": 14177,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14202,
											"end": 14208,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 14197,
											"end": 14200,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 14193,
											"end": 14209,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14186,
											"end": 14209,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14186,
											"end": 14209,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13935,
											"end": 14215,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13825,
											"end": 14215,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 13825,
											"end": 14215,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13825,
											"end": 14215,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13825,
											"end": 14215,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13825,
											"end": 14215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14221,
											"end": 14656,
											"name": "tag",
											"source": 14,
											"value": "199"
										},
										{
											"begin": 14221,
											"end": 14656,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14401,
											"end": 14404,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14423,
											"end": 14518,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "527"
										},
										{
											"begin": 14514,
											"end": 14517,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14505,
											"end": 14511,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 14423,
											"end": 14518,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "360"
										},
										{
											"begin": 14423,
											"end": 14518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14423,
											"end": 14518,
											"name": "tag",
											"source": 14,
											"value": "527"
										},
										{
											"begin": 14423,
											"end": 14518,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14416,
											"end": 14518,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14416,
											"end": 14518,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14535,
											"end": 14630,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "528"
										},
										{
											"begin": 14626,
											"end": 14629,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14617,
											"end": 14623,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 14535,
											"end": 14630,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "360"
										},
										{
											"begin": 14535,
											"end": 14630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14535,
											"end": 14630,
											"name": "tag",
											"source": 14,
											"value": "528"
										},
										{
											"begin": 14535,
											"end": 14630,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14528,
											"end": 14630,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14528,
											"end": 14630,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14647,
											"end": 14650,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14640,
											"end": 14650,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14640,
											"end": 14650,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14221,
											"end": 14656,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 14221,
											"end": 14656,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 14221,
											"end": 14656,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14221,
											"end": 14656,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14221,
											"end": 14656,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14221,
											"end": 14656,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14662,
											"end": 14760,
											"name": "tag",
											"source": 14,
											"value": "361"
										},
										{
											"begin": 14662,
											"end": 14760,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14713,
											"end": 14719,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14747,
											"end": 14752,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14741,
											"end": 14753,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 14731,
											"end": 14753,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14731,
											"end": 14753,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14662,
											"end": 14760,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14662,
											"end": 14760,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14662,
											"end": 14760,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14662,
											"end": 14760,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14766,
											"end": 14934,
											"name": "tag",
											"source": 14,
											"value": "362"
										},
										{
											"begin": 14766,
											"end": 14934,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14849,
											"end": 14860,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14883,
											"end": 14889,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14878,
											"end": 14881,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14871,
											"end": 14890,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14923,
											"end": 14927,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 14918,
											"end": 14921,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14914,
											"end": 14928,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14899,
											"end": 14928,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14899,
											"end": 14928,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14766,
											"end": 14934,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 14766,
											"end": 14934,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14766,
											"end": 14934,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14766,
											"end": 14934,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14766,
											"end": 14934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14940,
											"end": 15313,
											"name": "tag",
											"source": 14,
											"value": "363"
										},
										{
											"begin": 14940,
											"end": 15313,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15026,
											"end": 15029,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15054,
											"end": 15092,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "532"
										},
										{
											"begin": 15086,
											"end": 15091,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15054,
											"end": 15092,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "361"
										},
										{
											"begin": 15054,
											"end": 15092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15054,
											"end": 15092,
											"name": "tag",
											"source": 14,
											"value": "532"
										},
										{
											"begin": 15054,
											"end": 15092,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15108,
											"end": 15178,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "533"
										},
										{
											"begin": 15171,
											"end": 15177,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15166,
											"end": 15169,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 15108,
											"end": 15178,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "362"
										},
										{
											"begin": 15108,
											"end": 15178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15108,
											"end": 15178,
											"name": "tag",
											"source": 14,
											"value": "533"
										},
										{
											"begin": 15108,
											"end": 15178,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15101,
											"end": 15178,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 15101,
											"end": 15178,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15187,
											"end": 15252,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "534"
										},
										{
											"begin": 15245,
											"end": 15251,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15240,
											"end": 15243,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 15233,
											"end": 15237,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 15226,
											"end": 15231,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 15222,
											"end": 15238,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15187,
											"end": 15252,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "327"
										},
										{
											"begin": 15187,
											"end": 15252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15187,
											"end": 15252,
											"name": "tag",
											"source": 14,
											"value": "534"
										},
										{
											"begin": 15187,
											"end": 15252,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15277,
											"end": 15306,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "535"
										},
										{
											"begin": 15299,
											"end": 15305,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15277,
											"end": 15306,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "328"
										},
										{
											"begin": 15277,
											"end": 15306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15277,
											"end": 15306,
											"name": "tag",
											"source": 14,
											"value": "535"
										},
										{
											"begin": 15277,
											"end": 15306,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15272,
											"end": 15275,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 15268,
											"end": 15307,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15261,
											"end": 15307,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15261,
											"end": 15307,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15030,
											"end": 15313,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14940,
											"end": 15313,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 14940,
											"end": 15313,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14940,
											"end": 15313,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14940,
											"end": 15313,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14940,
											"end": 15313,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15319,
											"end": 15959,
											"name": "tag",
											"source": 14,
											"value": "241"
										},
										{
											"begin": 15319,
											"end": 15959,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15514,
											"end": 15518,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15552,
											"end": 15555,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 15541,
											"end": 15550,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15537,
											"end": 15556,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15529,
											"end": 15556,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15529,
											"end": 15556,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15566,
											"end": 15637,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "537"
										},
										{
											"begin": 15634,
											"end": 15635,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15623,
											"end": 15632,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 15619,
											"end": 15636,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15610,
											"end": 15616,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 15566,
											"end": 15637,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "335"
										},
										{
											"begin": 15566,
											"end": 15637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15566,
											"end": 15637,
											"name": "tag",
											"source": 14,
											"value": "537"
										},
										{
											"begin": 15566,
											"end": 15637,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15647,
											"end": 15719,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "538"
										},
										{
											"begin": 15715,
											"end": 15717,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 15704,
											"end": 15713,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 15700,
											"end": 15718,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15691,
											"end": 15697,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 15647,
											"end": 15719,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "335"
										},
										{
											"begin": 15647,
											"end": 15719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15647,
											"end": 15719,
											"name": "tag",
											"source": 14,
											"value": "538"
										},
										{
											"begin": 15647,
											"end": 15719,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15729,
											"end": 15801,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "539"
										},
										{
											"begin": 15797,
											"end": 15799,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 15786,
											"end": 15795,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 15782,
											"end": 15800,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15773,
											"end": 15779,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 15729,
											"end": 15801,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "338"
										},
										{
											"begin": 15729,
											"end": 15801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15729,
											"end": 15801,
											"name": "tag",
											"source": 14,
											"value": "539"
										},
										{
											"begin": 15729,
											"end": 15801,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15848,
											"end": 15857,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15842,
											"end": 15846,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15838,
											"end": 15858,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 15833,
											"end": 15835,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 15822,
											"end": 15831,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 15818,
											"end": 15836,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15811,
											"end": 15859,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15876,
											"end": 15952,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "540"
										},
										{
											"begin": 15947,
											"end": 15951,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15938,
											"end": 15944,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 15876,
											"end": 15952,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "363"
										},
										{
											"begin": 15876,
											"end": 15952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15876,
											"end": 15952,
											"name": "tag",
											"source": 14,
											"value": "540"
										},
										{
											"begin": 15876,
											"end": 15952,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15868,
											"end": 15952,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15868,
											"end": 15952,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15319,
											"end": 15959,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 15319,
											"end": 15959,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 15319,
											"end": 15959,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15319,
											"end": 15959,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15319,
											"end": 15959,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15319,
											"end": 15959,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15319,
											"end": 15959,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15319,
											"end": 15959,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15965,
											"end": 16106,
											"name": "tag",
											"source": 14,
											"value": "364"
										},
										{
											"begin": 15965,
											"end": 16106,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16021,
											"end": 16026,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16052,
											"end": 16058,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16046,
											"end": 16059,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 16037,
											"end": 16059,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16037,
											"end": 16059,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16068,
											"end": 16100,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "542"
										},
										{
											"begin": 16094,
											"end": 16099,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16068,
											"end": 16100,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "321"
										},
										{
											"begin": 16068,
											"end": 16100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16068,
											"end": 16100,
											"name": "tag",
											"source": 14,
											"value": "542"
										},
										{
											"begin": 16068,
											"end": 16100,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15965,
											"end": 16106,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 15965,
											"end": 16106,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15965,
											"end": 16106,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15965,
											"end": 16106,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15965,
											"end": 16106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16112,
											"end": 16461,
											"name": "tag",
											"source": 14,
											"value": "244"
										},
										{
											"begin": 16112,
											"end": 16461,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16181,
											"end": 16187,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16230,
											"end": 16232,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 16218,
											"end": 16227,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16209,
											"end": 16216,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 16205,
											"end": 16228,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 16201,
											"end": 16233,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 16198,
											"end": 16317,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 16198,
											"end": 16317,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "544"
										},
										{
											"begin": 16198,
											"end": 16317,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 16236,
											"end": 16315,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "545"
										},
										{
											"begin": 16236,
											"end": 16315,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "318"
										},
										{
											"begin": 16236,
											"end": 16315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16236,
											"end": 16315,
											"name": "tag",
											"source": 14,
											"value": "545"
										},
										{
											"begin": 16236,
											"end": 16315,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16198,
											"end": 16317,
											"name": "tag",
											"source": 14,
											"value": "544"
										},
										{
											"begin": 16198,
											"end": 16317,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16356,
											"end": 16357,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16381,
											"end": 16444,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "546"
										},
										{
											"begin": 16436,
											"end": 16443,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 16427,
											"end": 16433,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16416,
											"end": 16425,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 16412,
											"end": 16434,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16381,
											"end": 16444,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "364"
										},
										{
											"begin": 16381,
											"end": 16444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16381,
											"end": 16444,
											"name": "tag",
											"source": 14,
											"value": "546"
										},
										{
											"begin": 16381,
											"end": 16444,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16371,
											"end": 16444,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16371,
											"end": 16444,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16327,
											"end": 16454,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16112,
											"end": 16461,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 16112,
											"end": 16461,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16112,
											"end": 16461,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16112,
											"end": 16461,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16112,
											"end": 16461,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16467,
											"end": 16647,
											"name": "tag",
											"source": 14,
											"value": "269"
										},
										{
											"begin": 16467,
											"end": 16647,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16515,
											"end": 16592,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16512,
											"end": 16513,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16505,
											"end": 16593,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 16612,
											"end": 16616,
											"name": "PUSH",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 16609,
											"end": 16610,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 16602,
											"end": 16617,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 16636,
											"end": 16640,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 16633,
											"end": 16634,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16626,
											"end": 16641,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 16653,
											"end": 16985,
											"name": "tag",
											"source": 14,
											"value": "290"
										},
										{
											"begin": 16653,
											"end": 16985,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16774,
											"end": 16778,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16812,
											"end": 16814,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 16801,
											"end": 16810,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16797,
											"end": 16815,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16789,
											"end": 16815,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16789,
											"end": 16815,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16825,
											"end": 16896,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "549"
										},
										{
											"begin": 16893,
											"end": 16894,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16882,
											"end": 16891,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 16878,
											"end": 16895,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16869,
											"end": 16875,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 16825,
											"end": 16896,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "335"
										},
										{
											"begin": 16825,
											"end": 16896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16825,
											"end": 16896,
											"name": "tag",
											"source": 14,
											"value": "549"
										},
										{
											"begin": 16825,
											"end": 16896,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16906,
											"end": 16978,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "550"
										},
										{
											"begin": 16974,
											"end": 16976,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 16963,
											"end": 16972,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 16959,
											"end": 16977,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16950,
											"end": 16956,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 16906,
											"end": 16978,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "338"
										},
										{
											"begin": 16906,
											"end": 16978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16906,
											"end": 16978,
											"name": "tag",
											"source": 14,
											"value": "550"
										},
										{
											"begin": 16906,
											"end": 16978,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16653,
											"end": 16985,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 16653,
											"end": 16985,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 16653,
											"end": 16985,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16653,
											"end": 16985,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16653,
											"end": 16985,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16653,
											"end": 16985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"Picture.sol",
								"PictureToken.sol",
								"openzeppelin-contracts/contracts/access/Ownable.sol",
								"openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
								"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
								"openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
								"openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
								"openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"openzeppelin-contracts/contracts/utils/Context.sol",
								"openzeppelin-contracts/contracts/utils/Strings.sol",
								"openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
								"openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
								"openzeppelin-contracts/contracts/utils/math/Math.sol",
								"openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"getPrice()": "98d5fdca",
							"getSinglePictureToken()": "854cbb4a",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"notPutOnSale()": "8c2a5bc8",
							"owner()": "8da5cb5b",
							"ownerOf(uint256)": "6352211e",
							"price()": "a035b1fe",
							"purchase()": "64edfbf0",
							"putOnSale()": "5987cc19",
							"renounceOwnership()": "715018a6",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"setPrice(uint256)": "91b7f5ed",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"contract Picture\",\"name\":\"_props\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSinglePictureToken\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"ownerAddress\",\"type\":\"address\"},{\"internalType\":\"contract Picture\",\"name\":\"props\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"onSale\",\"type\":\"bool\"}],\"internalType\":\"struct tokenData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"notPutOnSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"purchase\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"putOnSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"PictureToken.sol\":\"PictureToken\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Picture.sol\":{\"keccak256\":\"0xdd2a48316a223d752facbae03ac785fc4f6ed10ed2c07e86c4e2ddf5af54fb5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4b6033bd41caa124913572c56ce256d0591bcd6e5b815f372ca1a7f247d7a654\",\"dweb:/ipfs/Qmf4DB3HJGpBAG243MKJDSkKxfGMbXNnhGTm27wqonZp2y\"]},\"PictureToken.sol\":{\"keccak256\":\"0x6f1874053cdb9ccc71d0a3ce45574d2aacdffa1df18cd832d1b265f44bb67020\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://304f98d44dc5bb5c5e061716fbc16f18c726ed661e2d8d152221a555af4c756b\",\"dweb:/ipfs/QmWjU3cjAHeLq98wGF8g4dDNp9ByY2RU3f7K6za89U57q1\"]},\"openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xe889e9f6b8469155c967f403ad7508eaa66af8cad1cb9a003536a8e4f281d348\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6e32c81c8d84199eda0de40d33bb77c7acbb482e3f545d5cfba8195af0a88e0\",\"dweb:/ipfs/Qmaf1WAinzjYWGNxRzCTmn2QABFWS912HwC8eiD7cyTgis\"]},\"openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xbd56d5c2cdbeb156c65a1a929f5ea9be5af3bde54244c8d8dcd7eb560512ed7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc97f1f9f1a8162af5098a609cf9a62afc2856a042243ce274762709e223711b\",\"dweb:/ipfs/QmTA2uoKWE1HyVGmdnGC5YNLuSBaPbDJVmmfUvvoEVN7Zj\"]},\"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xdde6917a300a3e655ca443b76266ce89145a7c9eb6a70298bf8aab4965bc40fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39416f61b555df983b22c85803cbe7606fb7f2004b4dbbd51995c7dc552a7137\",\"dweb:/ipfs/QmUG2ghvGz4iDLrvaUfEjcjn8qbvfcoi5AFpGW9t4cupGc\"]},\"openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xb8745c44e53e2a74e9a5d97de4f91d065f1e05cc3e624639485e7b29fb73b728\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76d9aba69c37eedb96c529c03c006e8c7f9ea3c2cc11635b21aedc0a65810cfd\",\"dweb:/ipfs/QmUDZnzN5VAmQY6w2Vr6Uef6xNT5jFM9Grb4MUkECXWzjz\"]},\"openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa324c22ef2aaa7b7cd4db27007e7c6fc2d7877cc6381510fca9c83d72bb9ab3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acb98725687905d9183432eeaa3f7dca110b258ea403fd07b01fcc32ddb16d04\",\"dweb:/ipfs/QmaWdFfHxZdggD16Hu3CgJ3dSGvQzsmovZBW3rorYh6S5N\"]},\"openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x62e9e9e364dcd065b87229e727198f2ee8592c3c22010ead00f66cc370b6db43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fda109e10a60e3ad248094787cffc42e12579215e30536d26c38cca922a951de\",\"dweb:/ipfs/QmdAZxHrJpLj9nUvv61CV1QyCP28vvgJCva4e5949DqFNT\"]},\"openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xa98ceb8734832ea51ee2ea6bafded757acaba7d232143ac9e50565760f7cf366\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51854d853bb0a17e1d669a9f33699986d13ff42425c1e2eeea2ffc9190e6e42a\",\"dweb:/ipfs/QmWwqcGd2pWwnBcKwBKC7CWYsSvtWUkZ1qJTSQ3fhednfA\"]},\"openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x53da138fbc253114bcb7593eff7a23bdffdfd1392137cd59e2dd90e423cb5f92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a50918f60f4975d1342119a8decea30e44497d85a0f19aa9022666a295a37368\",\"dweb:/ipfs/QmcSCczAJqotocW4pBJqtJawtd9ergdxiJ3vn2MqzxBaYz\"]},\"openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x5e93dc51cc1dd89d1ae31658302b93f7adef0eee525eafbc563195afc9345e39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3fd926ba3c959be85a706285338cc7dde03af8ecb4e2a936f3bac18441abfe97\",\"dweb:/ipfs/QmaSdTPxbPPscAxiNFqExm7dTuXp4VuBsiiuGcuk4euJie\"]},\"openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x97a5e5c6659add3f13418d219e705d6cc732ca3c31b62a64d66f92b159c5375d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a42c9e92e0b080329a3084019cc95423bdc4c5c20250a82e53d252650e79da9\",\"dweb:/ipfs/QmXffSTGqZXofPd7ueueXQowGPTQr9DJvZEzQFmJKzB24N\"]},\"openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x2c5cdfbc8308c34f76fc8fde760a72890e1178aedbeb3651662f177a2efe8e02\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3ae15eb2fd97ec390937660d1db1ce41a5c939ba5f5da0f359a1ba237ea063\",\"dweb:/ipfs/QmXN2hveEkj9KsfSsNVodzxE626tmnpHK2SmjXDUP6arg1\"]},\"openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xd49b8824c2908c601bb2aa619e1331672c1d46f743bac0e23997766ea8bc16eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6334c9e7fe628d4886a4f7f1dbb458dfe0ef401913b0e5ba59d565eba62db3cf\",\"dweb:/ipfs/QmXcsGpRXBPb3S1kQ5cyt21UDBf7irkuwZMFv64gtbENy6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 486,
								"contract": "PictureToken.sol:PictureToken",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 488,
								"contract": "PictureToken.sol:PictureToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 492,
								"contract": "PictureToken.sol:PictureToken",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 496,
								"contract": "PictureToken.sol:PictureToken",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 500,
								"contract": "PictureToken.sol:PictureToken",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 506,
								"contract": "PictureToken.sol:PictureToken",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 177,
								"contract": "PictureToken.sol:PictureToken",
								"label": "_owner",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 34,
								"contract": "PictureToken.sol:PictureToken",
								"label": "props",
								"offset": 0,
								"slot": "7",
								"type": "t_contract(Picture)22"
							},
							{
								"astId": 36,
								"contract": "PictureToken.sol:PictureToken",
								"label": "price",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 38,
								"contract": "PictureToken.sol:PictureToken",
								"label": "onSale",
								"offset": 0,
								"slot": "9",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(Picture)22": {
								"encoding": "inplace",
								"label": "contract Picture",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"openzeppelin-contracts/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-contracts/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xe889e9f6b8469155c967f403ad7508eaa66af8cad1cb9a003536a8e4f281d348\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6e32c81c8d84199eda0de40d33bb77c7acbb482e3f545d5cfba8195af0a88e0\",\"dweb:/ipfs/Qmaf1WAinzjYWGNxRzCTmn2QABFWS912HwC8eiD7cyTgis\"]},\"openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xa98ceb8734832ea51ee2ea6bafded757acaba7d232143ac9e50565760f7cf366\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51854d853bb0a17e1d669a9f33699986d13ff42425c1e2eeea2ffc9190e6e42a\",\"dweb:/ipfs/QmWwqcGd2pWwnBcKwBKC7CWYsSvtWUkZ1qJTSQ3fhednfA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 177,
								"contract": "openzeppelin-contracts/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xbd56d5c2cdbeb156c65a1a929f5ea9be5af3bde54244c8d8dcd7eb560512ed7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc97f1f9f1a8162af5098a609cf9a62afc2856a042243ce274762709e223711b\",\"dweb:/ipfs/QmTA2uoKWE1HyVGmdnGC5YNLuSBaPbDJVmmfUvvoEVN7Zj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xbd56d5c2cdbeb156c65a1a929f5ea9be5af3bde54244c8d8dcd7eb560512ed7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc97f1f9f1a8162af5098a609cf9a62afc2856a042243ce274762709e223711b\",\"dweb:/ipfs/QmTA2uoKWE1HyVGmdnGC5YNLuSBaPbDJVmmfUvvoEVN7Zj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xbd56d5c2cdbeb156c65a1a929f5ea9be5af3bde54244c8d8dcd7eb560512ed7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc97f1f9f1a8162af5098a609cf9a62afc2856a042243ce274762709e223711b\",\"dweb:/ipfs/QmTA2uoKWE1HyVGmdnGC5YNLuSBaPbDJVmmfUvvoEVN7Zj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xbd56d5c2cdbeb156c65a1a929f5ea9be5af3bde54244c8d8dcd7eb560512ed7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc97f1f9f1a8162af5098a609cf9a62afc2856a042243ce274762709e223711b\",\"dweb:/ipfs/QmTA2uoKWE1HyVGmdnGC5YNLuSBaPbDJVmmfUvvoEVN7Zj\"]},\"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xdde6917a300a3e655ca443b76266ce89145a7c9eb6a70298bf8aab4965bc40fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39416f61b555df983b22c85803cbe7606fb7f2004b4dbbd51995c7dc552a7137\",\"dweb:/ipfs/QmUG2ghvGz4iDLrvaUfEjcjn8qbvfcoi5AFpGW9t4cupGc\"]},\"openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xb8745c44e53e2a74e9a5d97de4f91d065f1e05cc3e624639485e7b29fb73b728\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76d9aba69c37eedb96c529c03c006e8c7f9ea3c2cc11635b21aedc0a65810cfd\",\"dweb:/ipfs/QmUDZnzN5VAmQY6w2Vr6Uef6xNT5jFM9Grb4MUkECXWzjz\"]},\"openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa324c22ef2aaa7b7cd4db27007e7c6fc2d7877cc6381510fca9c83d72bb9ab3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acb98725687905d9183432eeaa3f7dca110b258ea403fd07b01fcc32ddb16d04\",\"dweb:/ipfs/QmaWdFfHxZdggD16Hu3CgJ3dSGvQzsmovZBW3rorYh6S5N\"]},\"openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x62e9e9e364dcd065b87229e727198f2ee8592c3c22010ead00f66cc370b6db43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fda109e10a60e3ad248094787cffc42e12579215e30536d26c38cca922a951de\",\"dweb:/ipfs/QmdAZxHrJpLj9nUvv61CV1QyCP28vvgJCva4e5949DqFNT\"]},\"openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xa98ceb8734832ea51ee2ea6bafded757acaba7d232143ac9e50565760f7cf366\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51854d853bb0a17e1d669a9f33699986d13ff42425c1e2eeea2ffc9190e6e42a\",\"dweb:/ipfs/QmWwqcGd2pWwnBcKwBKC7CWYsSvtWUkZ1qJTSQ3fhednfA\"]},\"openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x53da138fbc253114bcb7593eff7a23bdffdfd1392137cd59e2dd90e423cb5f92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a50918f60f4975d1342119a8decea30e44497d85a0f19aa9022666a295a37368\",\"dweb:/ipfs/QmcSCczAJqotocW4pBJqtJawtd9ergdxiJ3vn2MqzxBaYz\"]},\"openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x5e93dc51cc1dd89d1ae31658302b93f7adef0eee525eafbc563195afc9345e39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3fd926ba3c959be85a706285338cc7dde03af8ecb4e2a936f3bac18441abfe97\",\"dweb:/ipfs/QmaSdTPxbPPscAxiNFqExm7dTuXp4VuBsiiuGcuk4euJie\"]},\"openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x97a5e5c6659add3f13418d219e705d6cc732ca3c31b62a64d66f92b159c5375d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a42c9e92e0b080329a3084019cc95423bdc4c5c20250a82e53d252650e79da9\",\"dweb:/ipfs/QmXffSTGqZXofPd7ueueXQowGPTQr9DJvZEzQFmJKzB24N\"]},\"openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x2c5cdfbc8308c34f76fc8fde760a72890e1178aedbeb3651662f177a2efe8e02\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3ae15eb2fd97ec390937660d1db1ce41a5c939ba5f5da0f359a1ba237ea063\",\"dweb:/ipfs/QmXN2hveEkj9KsfSsNVodzxE626tmnpHK2SmjXDUP6arg1\"]},\"openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xd49b8824c2908c601bb2aa619e1331672c1d46f743bac0e23997766ea8bc16eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6334c9e7fe628d4886a4f7f1dbb458dfe0ef401913b0e5ba59d565eba62db3cf\",\"dweb:/ipfs/QmXcsGpRXBPb3S1kQ5cyt21UDBf7irkuwZMFv64gtbENy6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 486,
								"contract": "openzeppelin-contracts/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 488,
								"contract": "openzeppelin-contracts/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 492,
								"contract": "openzeppelin-contracts/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 496,
								"contract": "openzeppelin-contracts/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 500,
								"contract": "openzeppelin-contracts/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 506,
								"contract": "openzeppelin-contracts/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xb8745c44e53e2a74e9a5d97de4f91d065f1e05cc3e624639485e7b29fb73b728\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76d9aba69c37eedb96c529c03c006e8c7f9ea3c2cc11635b21aedc0a65810cfd\",\"dweb:/ipfs/QmUDZnzN5VAmQY6w2Vr6Uef6xNT5jFM9Grb4MUkECXWzjz\"]},\"openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x97a5e5c6659add3f13418d219e705d6cc732ca3c31b62a64d66f92b159c5375d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a42c9e92e0b080329a3084019cc95423bdc4c5c20250a82e53d252650e79da9\",\"dweb:/ipfs/QmXffSTGqZXofPd7ueueXQowGPTQr9DJvZEzQFmJKzB24N\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa324c22ef2aaa7b7cd4db27007e7c6fc2d7877cc6381510fca9c83d72bb9ab3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acb98725687905d9183432eeaa3f7dca110b258ea403fd07b01fcc32ddb16d04\",\"dweb:/ipfs/QmaWdFfHxZdggD16Hu3CgJ3dSGvQzsmovZBW3rorYh6S5N\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xb8745c44e53e2a74e9a5d97de4f91d065f1e05cc3e624639485e7b29fb73b728\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76d9aba69c37eedb96c529c03c006e8c7f9ea3c2cc11635b21aedc0a65810cfd\",\"dweb:/ipfs/QmUDZnzN5VAmQY6w2Vr6Uef6xNT5jFM9Grb4MUkECXWzjz\"]},\"openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x62e9e9e364dcd065b87229e727198f2ee8592c3c22010ead00f66cc370b6db43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fda109e10a60e3ad248094787cffc42e12579215e30536d26c38cca922a951de\",\"dweb:/ipfs/QmdAZxHrJpLj9nUvv61CV1QyCP28vvgJCva4e5949DqFNT\"]},\"openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x97a5e5c6659add3f13418d219e705d6cc732ca3c31b62a64d66f92b159c5375d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a42c9e92e0b080329a3084019cc95423bdc4c5c20250a82e53d252650e79da9\",\"dweb:/ipfs/QmXffSTGqZXofPd7ueueXQowGPTQr9DJvZEzQFmJKzB24N\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"openzeppelin-contracts/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-contracts/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xa98ceb8734832ea51ee2ea6bafded757acaba7d232143ac9e50565760f7cf366\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51854d853bb0a17e1d669a9f33699986d13ff42425c1e2eeea2ffc9190e6e42a\",\"dweb:/ipfs/QmWwqcGd2pWwnBcKwBKC7CWYsSvtWUkZ1qJTSQ3fhednfA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"openzeppelin-contracts/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"openzeppelin-contracts/contracts/utils/Strings.sol\":262:3191  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"openzeppelin-contracts/contracts/utils/Strings.sol\":262:3191  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bf134b782185240ba25e823bf2320652a5e6403729984cdc312cf12496e4c6f264736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220bf134b782185240ba25e823bf2320652a5e6403729984cdc312cf12496e4c6f264736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF SGT 0x4B PUSH25 0x2185240BA25E823BF2320652A5E6403729984CDC312CF12496 0xE4 0xC6 CALLCODE PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "262:2929:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220bf134b782185240ba25e823bf2320652a5e6403729984cdc312cf12496e4c6f264736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF SGT 0x4B PUSH25 0x2185240BA25E823BF2320652A5E6403729984CDC312CF12496 0xE4 0xC6 CALLCODE PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "262:2929:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 262,
									"end": 3191,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bf134b782185240ba25e823bf2320652a5e6403729984cdc312cf12496e4c6f264736f6c63430008140033",
									".code": [
										{
											"begin": 262,
											"end": 3191,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 262,
											"end": 3191,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 262,
											"end": 3191,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 262,
											"end": 3191,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 262,
											"end": 3191,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 262,
											"end": 3191,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 262,
											"end": 3191,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 262,
											"end": 3191,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 262,
											"end": 3191,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"Picture.sol",
								"PictureToken.sol",
								"openzeppelin-contracts/contracts/access/Ownable.sol",
								"openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
								"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
								"openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
								"openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
								"openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"openzeppelin-contracts/contracts/utils/Context.sol",
								"openzeppelin-contracts/contracts/utils/Strings.sol",
								"openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
								"openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
								"openzeppelin-contracts/contracts/utils/math/Math.sol",
								"openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-contracts/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x53da138fbc253114bcb7593eff7a23bdffdfd1392137cd59e2dd90e423cb5f92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a50918f60f4975d1342119a8decea30e44497d85a0f19aa9022666a295a37368\",\"dweb:/ipfs/QmcSCczAJqotocW4pBJqtJawtd9ergdxiJ3vn2MqzxBaYz\"]},\"openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x2c5cdfbc8308c34f76fc8fde760a72890e1178aedbeb3651662f177a2efe8e02\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3ae15eb2fd97ec390937660d1db1ce41a5c939ba5f5da0f359a1ba237ea063\",\"dweb:/ipfs/QmXN2hveEkj9KsfSsNVodzxE626tmnpHK2SmjXDUP6arg1\"]},\"openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xd49b8824c2908c601bb2aa619e1331672c1d46f743bac0e23997766ea8bc16eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6334c9e7fe628d4886a4f7f1dbb458dfe0ef401913b0e5ba59d565eba62db3cf\",\"dweb:/ipfs/QmXcsGpRXBPb3S1kQ5cyt21UDBf7irkuwZMFv64gtbENy6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x5e93dc51cc1dd89d1ae31658302b93f7adef0eee525eafbc563195afc9345e39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3fd926ba3c959be85a706285338cc7dde03af8ecb4e2a936f3bac18441abfe97\",\"dweb:/ipfs/QmaSdTPxbPPscAxiNFqExm7dTuXp4VuBsiiuGcuk4euJie\"]},\"openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x97a5e5c6659add3f13418d219e705d6cc732ca3c31b62a64d66f92b159c5375d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a42c9e92e0b080329a3084019cc95423bdc4c5c20250a82e53d252650e79da9\",\"dweb:/ipfs/QmXffSTGqZXofPd7ueueXQowGPTQr9DJvZEzQFmJKzB24N\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x97a5e5c6659add3f13418d219e705d6cc732ca3c31b62a64d66f92b159c5375d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a42c9e92e0b080329a3084019cc95423bdc4c5c20250a82e53d252650e79da9\",\"dweb:/ipfs/QmXffSTGqZXofPd7ueueXQowGPTQr9DJvZEzQFmJKzB24N\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"openzeppelin-contracts/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"openzeppelin-contracts/contracts/utils/math/Math.sol\":211:15531  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"openzeppelin-contracts/contracts/utils/math/Math.sol\":211:15531  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205ad5f7ba28b66f16e6f4560401ef82096e3fa173a573117db388be54ad6c6a2e64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212205ad5f7ba28b66f16e6f4560401ef82096e3fa173a573117db388be54ad6c6a2e64736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GAS 0xD5 0xF7 0xBA 0x28 0xB6 PUSH16 0x16E6F4560401EF82096E3FA173A57311 PUSH30 0xB388BE54AD6C6A2E64736F6C634300081400330000000000000000000000 ",
							"sourceMap": "211:15320:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212205ad5f7ba28b66f16e6f4560401ef82096e3fa173a573117db388be54ad6c6a2e64736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GAS 0xD5 0xF7 0xBA 0x28 0xB6 PUSH16 0x16E6F4560401EF82096E3FA173A57311 PUSH30 0xB388BE54AD6C6A2E64736F6C634300081400330000000000000000000000 ",
							"sourceMap": "211:15320:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 211,
									"end": 15531,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205ad5f7ba28b66f16e6f4560401ef82096e3fa173a573117db388be54ad6c6a2e64736f6c63430008140033",
									".code": [
										{
											"begin": 211,
											"end": 15531,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 211,
											"end": 15531,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 211,
											"end": 15531,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 211,
											"end": 15531,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 211,
											"end": 15531,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 211,
											"end": 15531,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 211,
											"end": 15531,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 211,
											"end": 15531,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 211,
											"end": 15531,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"Picture.sol",
								"PictureToken.sol",
								"openzeppelin-contracts/contracts/access/Ownable.sol",
								"openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
								"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
								"openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
								"openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
								"openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"openzeppelin-contracts/contracts/utils/Context.sol",
								"openzeppelin-contracts/contracts/utils/Strings.sol",
								"openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
								"openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
								"openzeppelin-contracts/contracts/utils/math/Math.sol",
								"openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-contracts/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x2c5cdfbc8308c34f76fc8fde760a72890e1178aedbeb3651662f177a2efe8e02\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3ae15eb2fd97ec390937660d1db1ce41a5c939ba5f5da0f359a1ba237ea063\",\"dweb:/ipfs/QmXN2hveEkj9KsfSsNVodzxE626tmnpHK2SmjXDUP6arg1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":224:1305  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":224:1305  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205be86bfd281f0aba8804761fca80086e48671d8ea5e203011facae7012e4e9cb64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212205be86bfd281f0aba8804761fca80086e48671d8ea5e203011facae7012e4e9cb64736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPDEST 0xE8 PUSH12 0xFD281F0ABA8804761FCA8008 PUSH15 0x48671D8EA5E203011FACAE7012E4E9 0xCB PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "224:1081:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212205be86bfd281f0aba8804761fca80086e48671d8ea5e203011facae7012e4e9cb64736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPDEST 0xE8 PUSH12 0xFD281F0ABA8804761FCA8008 PUSH15 0x48671D8EA5E203011FACAE7012E4E9 0xCB PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "224:1081:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 224,
									"end": 1305,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205be86bfd281f0aba8804761fca80086e48671d8ea5e203011facae7012e4e9cb64736f6c63430008140033",
									".code": [
										{
											"begin": 224,
											"end": 1305,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 224,
											"end": 1305,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 224,
											"end": 1305,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 224,
											"end": 1305,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 224,
											"end": 1305,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 224,
											"end": 1305,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 224,
											"end": 1305,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 224,
											"end": 1305,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 224,
											"end": 1305,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"Picture.sol",
								"PictureToken.sol",
								"openzeppelin-contracts/contracts/access/Ownable.sol",
								"openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
								"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
								"openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
								"openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
								"openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"openzeppelin-contracts/contracts/utils/Context.sol",
								"openzeppelin-contracts/contracts/utils/Strings.sol",
								"openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
								"openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
								"openzeppelin-contracts/contracts/utils/math/Math.sol",
								"openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xd49b8824c2908c601bb2aa619e1331672c1d46f743bac0e23997766ea8bc16eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6334c9e7fe628d4886a4f7f1dbb458dfe0ef401913b0e5ba59d565eba62db3cf\",\"dweb:/ipfs/QmXcsGpRXBPb3S1kQ5cyt21UDBf7irkuwZMFv64gtbENy6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Picture.sol": {
				"ast": {
					"absolutePath": "Picture.sol",
					"exportedSymbols": {
						"Picture": [
							22
						]
					},
					"id": 23,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Picture",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 22,
							"linearizedBaseContracts": [
								22
							],
							"name": "Picture",
							"nameLocation": "70:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "order",
									"nameLocation": "95:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 22,
									"src": "87:13:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "87:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 5,
									"mutability": "mutable",
									"name": "image",
									"nameLocation": "114:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 22,
									"src": "107:12:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 4,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "107:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 20,
										"nodeType": "Block",
										"src": "204:57:0",
										"statements": [
											{
												"expression": {
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 12,
														"name": "order",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "215:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 13,
														"name": "_order",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "223:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "215:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 15,
												"nodeType": "ExpressionStatement",
												"src": "215:14:0"
											},
											{
												"expression": {
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 16,
														"name": "image",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "240:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 17,
														"name": "_image",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "247:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "240:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 19,
												"nodeType": "ExpressionStatement",
												"src": "240:13:0"
											}
										]
									},
									"id": 21,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "_order",
												"nameLocation": "159:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "151:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "151:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "_image",
												"nameLocation": "190:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "176:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 8,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "176:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "140:63:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "204:0:0"
									},
									"scope": 22,
									"src": "128:133:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 23,
							"src": "61:203:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:231:0"
				},
				"id": 0
			},
			"PictureToken.sol": {
				"ast": {
					"absolutePath": "PictureToken.sol",
					"exportedSymbols": {
						"Context": [
							1647
						],
						"ERC165": [
							1926
						],
						"ERC721": [
							1462
						],
						"IERC165": [
							1938
						],
						"IERC721": [
							1579
						],
						"IERC721Errors": [
							406
						],
						"IERC721Metadata": [
							1625
						],
						"IERC721Receiver": [
							1597
						],
						"Ownable": [
							316
						],
						"Picture": [
							22
						],
						"PictureToken": [
							158
						],
						"Strings": [
							1902
						],
						"tokenData": [
							168
						]
					},
					"id": 169,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 24,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:1"
						},
						{
							"absolutePath": "openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
							"file": "openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
							"id": 25,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 169,
							"sourceUnit": 1463,
							"src": "63:66:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "openzeppelin-contracts/contracts/access/Ownable.sol",
							"file": "openzeppelin-contracts/contracts/access/Ownable.sol",
							"id": 26,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 169,
							"sourceUnit": 317,
							"src": "131:61:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Picture.sol",
							"file": "./Picture.sol",
							"id": 27,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 169,
							"sourceUnit": 23,
							"src": "196:23:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 28,
										"name": "ERC721",
										"nameLocations": [
											"248:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1462,
										"src": "248:6:1"
									},
									"id": 29,
									"nodeType": "InheritanceSpecifier",
									"src": "248:6:1"
								},
								{
									"baseName": {
										"id": 30,
										"name": "Ownable",
										"nameLocations": [
											"256:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 316,
										"src": "256:7:1"
									},
									"id": 31,
									"nodeType": "InheritanceSpecifier",
									"src": "256:7:1"
								}
							],
							"canonicalName": "PictureToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 158,
							"linearizedBaseContracts": [
								158,
								316,
								1462,
								406,
								1625,
								1579,
								1926,
								1938,
								1647
							],
							"name": "PictureToken",
							"nameLocation": "232:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 34,
									"mutability": "mutable",
									"name": "props",
									"nameLocation": "281:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 158,
									"src": "273:13:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_Picture_$22",
										"typeString": "contract Picture"
									},
									"typeName": {
										"id": 33,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 32,
											"name": "Picture",
											"nameLocations": [
												"273:7:1"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 22,
											"src": "273:7:1"
										},
										"referencedDeclaration": 22,
										"src": "273:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Picture_$22",
											"typeString": "contract Picture"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "a035b1fe",
									"id": 36,
									"mutability": "mutable",
									"name": "price",
									"nameLocation": "308:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 158,
									"src": "293:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 35,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "293:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 38,
									"mutability": "mutable",
									"name": "onSale",
									"nameLocation": "325:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 158,
									"src": "320:11:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 37,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "320:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 65,
										"nodeType": "Block",
										"src": "456:78:1",
										"statements": [
											{
												"expression": {
													"id": 55,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 53,
														"name": "props",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "467:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Picture_$22",
															"typeString": "contract Picture"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 54,
														"name": "_props",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 43,
														"src": "475:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Picture_$22",
															"typeString": "contract Picture"
														}
													},
													"src": "467:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Picture_$22",
														"typeString": "contract Picture"
													}
												},
												"id": 56,
												"nodeType": "ExpressionStatement",
												"src": "467:14:1"
											},
											{
												"expression": {
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 57,
														"name": "price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "492:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "500:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "492:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 60,
												"nodeType": "ExpressionStatement",
												"src": "492:9:1"
											},
											{
												"expression": {
													"id": 63,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 61,
														"name": "onSale",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 38,
														"src": "512:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 62,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "521:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "512:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 64,
												"nodeType": "ExpressionStatement",
												"src": "512:14:1"
											}
										]
									},
									"id": 66,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "50696374757265546f6b656e",
													"id": 46,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "402:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_b16317b605d859d01e62110a39392369612adda77165f01ce0edaa2790789650",
														"typeString": "literal_string \"PictureToken\""
													},
													"value": "PictureToken"
												},
												{
													"hexValue": "5054",
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "418:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_47751c5767bbb0bdd931d7dded7762feff2f8f523644b7476475f9e271d38fe4",
														"typeString": "literal_string \"PT\""
													},
													"value": "PT"
												}
											],
											"id": 48,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 45,
												"name": "ERC721",
												"nameLocations": [
													"395:6:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1462,
												"src": "395:6:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "395:28:1"
										},
										{
											"arguments": [
												{
													"id": 50,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 40,
													"src": "437:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 51,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 49,
												"name": "Ownable",
												"nameLocations": [
													"429:7:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 316,
												"src": "429:7:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "429:21:1"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "360:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "352:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 39,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "352:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "_props",
												"nameLocation": "382:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "374:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_Picture_$22",
													"typeString": "contract Picture"
												},
												"typeName": {
													"id": 42,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 41,
														"name": "Picture",
														"nameLocations": [
															"374:7:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 22,
														"src": "374:7:1"
													},
													"referencedDeclaration": 22,
													"src": "374:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Picture_$22",
														"typeString": "contract Picture"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "351:38:1"
									},
									"returnParameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "456:0:1"
									},
									"scope": 158,
									"src": "340:194:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										658
									],
									"body": {
										"id": 74,
										"nodeType": "Block",
										"src": "609:52:1",
										"statements": [
											{
												"expression": {
													"hexValue": "697066733a2f2f7069656365546f6b656e42617365555249",
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "627:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c582b98acd129d18a774c828c2c965070de5771f1be0828f6a15b1d42e5444ce",
														"typeString": "literal_string \"ipfs://pieceTokenBaseURI\""
													},
													"value": "ipfs://pieceTokenBaseURI"
												},
												"functionReturnParameters": 71,
												"id": 73,
												"nodeType": "Return",
												"src": "620:33:1"
											}
										]
									},
									"id": 75,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "551:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 68,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "576:8:1"
									},
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "559:2:1"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "594:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 69,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "594:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "593:15:1"
									},
									"scope": 158,
									"src": "542:119:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "740:74:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 82,
																	"name": "Ownable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 316,
																	"src": "768:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_Ownable_$316_$",
																		"typeString": "type(contract Ownable)"
																	}
																},
																"id": 83,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "776:5:1",
																"memberName": "owner",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 236,
																"src": "768:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 84,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "768:15:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 85,
															"name": "props",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 34,
															"src": "785:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Picture_$22",
																"typeString": "contract Picture"
															}
														},
														{
															"id": 86,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 36,
															"src": "792:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 87,
															"name": "onSale",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 38,
															"src": "799:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_contract$_Picture_$22",
																"typeString": "contract Picture"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 81,
														"name": "tokenData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 168,
														"src": "758:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_tokenData_$168_storage_ptr_$",
															"typeString": "type(struct tokenData storage pointer)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "758:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_tokenData_$168_memory_ptr",
														"typeString": "struct tokenData memory"
													}
												},
												"functionReturnParameters": 80,
												"id": 89,
												"nodeType": "Return",
												"src": "751:55:1"
											}
										]
									},
									"functionSelector": "854cbb4a",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSinglePictureToken",
									"nameLocation": "678:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "699:2:1"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "722:16:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_tokenData_$168_memory_ptr",
													"typeString": "struct tokenData"
												},
												"typeName": {
													"id": 78,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 77,
														"name": "tokenData",
														"nameLocations": [
															"722:9:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 168,
														"src": "722:9:1"
													},
													"referencedDeclaration": 168,
													"src": "722:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_tokenData_$168_storage_ptr",
														"typeString": "struct tokenData"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "721:18:1"
									},
									"scope": 158,
									"src": "669:145:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 98,
										"nodeType": "Block",
										"src": "871:31:1",
										"statements": [
											{
												"expression": {
													"id": 96,
													"name": "price",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 36,
													"src": "889:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 95,
												"id": 97,
												"nodeType": "Return",
												"src": "882:12:1"
											}
										]
									},
									"functionSelector": "98d5fdca",
									"id": 99,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPrice",
									"nameLocation": "831:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "839:2:1"
									},
									"returnParameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "862:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 93,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "862:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "861:9:1"
									},
									"scope": 158,
									"src": "822:80:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "961:33:1",
										"statements": [
											{
												"expression": {
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 106,
														"name": "price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "972:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 107,
														"name": "_price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "980:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "972:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 109,
												"nodeType": "ExpressionStatement",
												"src": "972:14:1"
											}
										]
									},
									"functionSelector": "91b7f5ed",
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"951:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 227,
												"src": "951:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "951:9:1"
										}
									],
									"name": "setPrice",
									"nameLocation": "919:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "936:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "928:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "928:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "927:16:1"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "961:0:1"
									},
									"scope": 158,
									"src": "910:84:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 120,
										"nodeType": "Block",
										"src": "1040:32:1",
										"statements": [
											{
												"expression": {
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 116,
														"name": "onSale",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 38,
														"src": "1051:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 117,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1060:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1051:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 119,
												"nodeType": "ExpressionStatement",
												"src": "1051:13:1"
											}
										]
									},
									"functionSelector": "5987cc19",
									"id": 121,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 114,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 113,
												"name": "onlyOwner",
												"nameLocations": [
													"1030:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 227,
												"src": "1030:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1030:9:1"
										}
									],
									"name": "putOnSale",
									"nameLocation": "1011:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1020:2:1"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1040:0:1"
									},
									"scope": 158,
									"src": "1002:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "1121:33:1",
										"statements": [
											{
												"expression": {
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 126,
														"name": "onSale",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 38,
														"src": "1132:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 127,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1141:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1132:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 129,
												"nodeType": "ExpressionStatement",
												"src": "1132:14:1"
											}
										]
									},
									"functionSelector": "8c2a5bc8",
									"id": 131,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 124,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 123,
												"name": "onlyOwner",
												"nameLocations": [
													"1111:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 227,
												"src": "1111:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1111:9:1"
										}
									],
									"name": "notPutOnSale",
									"nameLocation": "1089:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1101:2:1"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1121:0:1"
									},
									"scope": 158,
									"src": "1080:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 156,
										"nodeType": "Block",
										"src": "1189:139:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 140,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 36,
															"src": "1229:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 136,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1208:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 137,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1212:6:1",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1208:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 135,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1200:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 134,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1200:8:1",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1200:19:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 139,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1220:8:1",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "1200:28:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1200:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 142,
												"nodeType": "ExpressionStatement",
												"src": "1200:35:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 144,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1264:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1268:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1264:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 143,
														"name": "transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "1246:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1246:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 147,
												"nodeType": "ExpressionStatement",
												"src": "1246:29:1"
											},
											{
												"expression": {
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 148,
														"name": "price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "1286:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 149,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1294:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1286:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 151,
												"nodeType": "ExpressionStatement",
												"src": "1286:9:1"
											},
											{
												"expression": {
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 152,
														"name": "onSale",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 38,
														"src": "1306:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 153,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1315:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1306:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 155,
												"nodeType": "ExpressionStatement",
												"src": "1306:14:1"
											}
										]
									},
									"functionSelector": "64edfbf0",
									"id": 157,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "purchase",
									"nameLocation": "1171:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1179:2:1"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1189:0:1"
									},
									"scope": 158,
									"src": "1162:166:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 169,
							"src": "223:1110:1",
							"usedErrors": [
								182,
								187,
								364,
								369,
								378,
								383,
								388,
								395,
								400,
								405
							],
							"usedEvents": [
								193,
								1478,
								1487,
								1496
							]
						},
						{
							"canonicalName": "tokenData",
							"id": 168,
							"members": [
								{
									"constant": false,
									"id": 160,
									"mutability": "mutable",
									"name": "ownerAddress",
									"nameLocation": "1369:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 168,
									"src": "1361:20:1",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 159,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1361:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 163,
									"mutability": "mutable",
									"name": "props",
									"nameLocation": "1396:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 168,
									"src": "1388:13:1",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_Picture_$22",
										"typeString": "contract Picture"
									},
									"typeName": {
										"id": 162,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 161,
											"name": "Picture",
											"nameLocations": [
												"1388:7:1"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 22,
											"src": "1388:7:1"
										},
										"referencedDeclaration": 22,
										"src": "1388:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Picture_$22",
											"typeString": "contract Picture"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "price",
									"nameLocation": "1416:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 168,
									"src": "1408:13:1",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 164,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1408:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "onSale",
									"nameLocation": "1433:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 168,
									"src": "1428:11:1",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 166,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1428:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "tokenData",
							"nameLocation": "1344:9:1",
							"nodeType": "StructDefinition",
							"scope": 169,
							"src": "1337:106:1",
							"visibility": "public"
						}
					],
					"src": "33:1410:1"
				},
				"id": 1
			},
			"openzeppelin-contracts/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "openzeppelin-contracts/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1647
						],
						"Ownable": [
							316
						]
					},
					"id": 317,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 170,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "openzeppelin-contracts/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 172,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 317,
							"sourceUnit": 1648,
							"src": "133:45:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 171,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1647,
										"src": "141:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 174,
										"name": "Context",
										"nameLocations": [
											"711:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1647,
										"src": "711:7:2"
									},
									"id": 175,
									"nodeType": "InheritanceSpecifier",
									"src": "711:7:2"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 173,
								"nodeType": "StructuredDocumentation",
								"src": "182:498:2",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 316,
							"linearizedBaseContracts": [
								316,
								1647
							],
							"name": "Ownable",
							"nameLocation": "700:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 177,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "742:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 316,
									"src": "726:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 176,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "726:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "757:87:2",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 182,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "856:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "891:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "883:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "883:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "882:17:2"
									},
									"src": "850:50:2"
								},
								{
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "908:84:2",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 187,
									"name": "OwnableInvalidOwner",
									"nameLocation": "1004:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1032:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "1024:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1024:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1023:15:2"
									},
									"src": "998:41:2"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 193,
									"name": "OwnershipTransferred",
									"nameLocation": "1053:20:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1090:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "1074:29:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1074:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 191,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1121:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "1105:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1105:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1073:57:2"
									},
									"src": "1047:84:2"
								},
								{
									"body": {
										"id": 218,
										"nodeType": "Block",
										"src": "1296:158:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 199,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 196,
														"src": "1311:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 202,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1335:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 201,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1327:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 200,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1327:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 203,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1327:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1311:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 213,
												"nodeType": "IfStatement",
												"src": "1307:97:2",
												"trueBody": {
													"id": 212,
													"nodeType": "Block",
													"src": "1339:65:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 208,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1389:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 207,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1381:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 206,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1381:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 209,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1381:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 205,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 187,
																	"src": "1361:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 210,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1361:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 211,
															"nodeType": "RevertStatement",
															"src": "1354:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 215,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "1433:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 214,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "1414:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 217,
												"nodeType": "ExpressionStatement",
												"src": "1414:32:2"
											}
										]
									},
									"documentation": {
										"id": 194,
										"nodeType": "StructuredDocumentation",
										"src": "1139:117:2",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 219,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1282:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "1274:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1273:22:2"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1296:0:2"
									},
									"scope": 316,
									"src": "1262:192:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 226,
										"nodeType": "Block",
										"src": "1568:44:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 222,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 253,
														"src": "1579:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1579:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 224,
												"nodeType": "ExpressionStatement",
												"src": "1579:13:2"
											},
											{
												"id": 225,
												"nodeType": "PlaceholderStatement",
												"src": "1603:1:2"
											}
										]
									},
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "1462:79:2",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 227,
									"name": "onlyOwner",
									"nameLocation": "1556:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1565:2:2"
									},
									"src": "1547:65:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 235,
										"nodeType": "Block",
										"src": "1748:32:2",
										"statements": [
											{
												"expression": {
													"id": 233,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 177,
													"src": "1766:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 232,
												"id": 234,
												"nodeType": "Return",
												"src": "1759:13:2"
											}
										]
									},
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "1620:67:2",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1702:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1707:2:2"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "1739:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1739:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1738:9:2"
									},
									"scope": 316,
									"src": "1693:87:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 252,
										"nodeType": "Block",
										"src": "1903:121:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 240,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "1918:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 241,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1918:7:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 242,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1637,
															"src": "1929:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1929:12:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1918:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 251,
												"nodeType": "IfStatement",
												"src": "1914:103:2",
												"trueBody": {
													"id": 250,
													"nodeType": "Block",
													"src": "1943:74:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 246,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1637,
																			"src": "1992:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 247,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1992:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 245,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 182,
																	"src": "1965:26:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1965:40:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 249,
															"nodeType": "RevertStatement",
															"src": "1958:47:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 237,
										"nodeType": "StructuredDocumentation",
										"src": "1788:64:2",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1867:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1878:2:2"
									},
									"returnParameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1903:0:2"
									},
									"scope": 316,
									"src": "1858:166:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 266,
										"nodeType": "Block",
										"src": "2422:49:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 262,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2460:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 261,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2452:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 260,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2452:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 263,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2452:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 259,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "2433:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2433:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 265,
												"nodeType": "ExpressionStatement",
												"src": "2433:30:2"
											}
										]
									},
									"documentation": {
										"id": 254,
										"nodeType": "StructuredDocumentation",
										"src": "2032:330:2",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 267,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 257,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 256,
												"name": "onlyOwner",
												"nameLocations": [
													"2412:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 227,
												"src": "2412:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2412:9:2"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2377:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2394:2:2"
									},
									"returnParameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2422:0:2"
									},
									"scope": 316,
									"src": "2368:103:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 294,
										"nodeType": "Block",
										"src": "2696:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 275,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 270,
														"src": "2711:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 278,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2731:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2723:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 276,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2723:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 279,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2723:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2711:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 289,
												"nodeType": "IfStatement",
												"src": "2707:93:2",
												"trueBody": {
													"id": 288,
													"nodeType": "Block",
													"src": "2735:65:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 284,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2785:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 283,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2777:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 282,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2777:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 285,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2777:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 281,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 187,
																	"src": "2757:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2757:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 287,
															"nodeType": "RevertStatement",
															"src": "2750:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 291,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 270,
															"src": "2829:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 290,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "2810:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2810:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 293,
												"nodeType": "ExpressionStatement",
												"src": "2810:28:2"
											}
										]
									},
									"documentation": {
										"id": 268,
										"nodeType": "StructuredDocumentation",
										"src": "2479:141:2",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 295,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 273,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 272,
												"name": "onlyOwner",
												"nameLocations": [
													"2686:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 227,
												"src": "2686:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2686:9:2"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2635:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2661:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "2653:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:18:2"
									},
									"returnParameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2696:0:2"
									},
									"scope": 316,
									"src": "2626:220:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 314,
										"nodeType": "Block",
										"src": "3069:128:2",
										"statements": [
											{
												"assignments": [
													302
												],
												"declarations": [
													{
														"constant": false,
														"id": 302,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3088:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 314,
														"src": "3080:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 301,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3080:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 304,
												"initialValue": {
													"id": 303,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 177,
													"src": "3099:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3080:25:2"
											},
											{
												"expression": {
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 305,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 177,
														"src": "3116:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 306,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 298,
														"src": "3125:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3116:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 308,
												"nodeType": "ExpressionStatement",
												"src": "3116:17:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 310,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "3170:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 311,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 298,
															"src": "3180:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 309,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3149:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3149:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 313,
												"nodeType": "EmitStatement",
												"src": "3144:45:2"
											}
										]
									},
									"documentation": {
										"id": 296,
										"nodeType": "StructuredDocumentation",
										"src": "2854:146:2",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3015:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3042:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "3034:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3034:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3033:18:2"
									},
									"returnParameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3069:0:2"
									},
									"scope": 316,
									"src": "3006:191:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 317,
							"src": "682:2518:2",
							"usedErrors": [
								182,
								187
							],
							"usedEvents": [
								193
							]
						}
					],
					"src": "105:3097:2"
				},
				"id": 2
			},
			"openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							453
						],
						"IERC20Errors": [
							358
						],
						"IERC721Errors": [
							406
						]
					},
					"id": 454,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 318,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 319,
								"nodeType": "StructuredDocumentation",
								"src": "142:142:3",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 358,
							"linearizedBaseContracts": [
								358
							],
							"name": "IERC20Errors",
							"nameLocation": "296:12:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "316:314:3",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 328,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "642:24:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "675:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "667:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "667:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "691:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "683:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "708:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "700:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "700:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "666:49:3"
									},
									"src": "636:80:3"
								},
								{
									"documentation": {
										"id": 329,
										"nodeType": "StructuredDocumentation",
										"src": "724:155:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 333,
									"name": "ERC20InvalidSender",
									"nameLocation": "891:18:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "918:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "910:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "910:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "909:16:3"
									},
									"src": "885:41:3"
								},
								{
									"documentation": {
										"id": 334,
										"nodeType": "StructuredDocumentation",
										"src": "934:162:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 338,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1108:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1137:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1129:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1129:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1128:18:3"
									},
									"src": "1102:45:3"
								},
								{
									"documentation": {
										"id": 339,
										"nodeType": "StructuredDocumentation",
										"src": "1155:350:3",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 347,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1517:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1552:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1544:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1544:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1569:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1561:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1561:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1588:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1580:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1580:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1543:52:3"
									},
									"src": "1511:85:3"
								},
								{
									"documentation": {
										"id": 348,
										"nodeType": "StructuredDocumentation",
										"src": "1604:177:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 352,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1793:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1822:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "1814:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1814:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1813:18:3"
									},
									"src": "1787:45:3"
								},
								{
									"documentation": {
										"id": 353,
										"nodeType": "StructuredDocumentation",
										"src": "1840:198:3",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 357,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2050:19:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2078:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "2070:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2070:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2069:17:3"
									},
									"src": "2044:43:3"
								}
							],
							"scope": 454,
							"src": "286:1804:3",
							"usedErrors": [
								328,
								333,
								338,
								347,
								352,
								357
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 359,
								"nodeType": "StructuredDocumentation",
								"src": "2094:144:3",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 406,
							"linearizedBaseContracts": [
								406
							],
							"name": "IERC721Errors",
							"nameLocation": "2250:13:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "2271:223:3",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 364,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2506:18:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2533:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "2525:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2525:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2524:15:3"
									},
									"src": "2500:40:3"
								},
								{
									"documentation": {
										"id": 365,
										"nodeType": "StructuredDocumentation",
										"src": "2548:135:3",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 369,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2695:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2726:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2718:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2718:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2717:17:3"
									},
									"src": "2689:46:3"
								},
								{
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "2743:294:3",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 378,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "3049:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3078:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "3070:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3094:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "3086:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3086:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3111:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "3103:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3103:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3069:48:3"
									},
									"src": "3043:75:3"
								},
								{
									"documentation": {
										"id": 379,
										"nodeType": "StructuredDocumentation",
										"src": "3126:155:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 383,
									"name": "ERC721InvalidSender",
									"nameLocation": "3293:19:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3321:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "3313:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 380,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3313:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3312:16:3"
									},
									"src": "3287:42:3"
								},
								{
									"documentation": {
										"id": 384,
										"nodeType": "StructuredDocumentation",
										"src": "3337:162:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 388,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3511:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3541:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "3533:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3533:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3532:18:3"
									},
									"src": "3505:46:3"
								},
								{
									"documentation": {
										"id": 389,
										"nodeType": "StructuredDocumentation",
										"src": "3559:251:3",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 395,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3822:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3857:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "3849:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 390,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3849:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3875:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "3867:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3867:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3848:35:3"
									},
									"src": "3816:68:3"
								},
								{
									"documentation": {
										"id": 396,
										"nodeType": "StructuredDocumentation",
										"src": "3892:177:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 400,
									"name": "ERC721InvalidApprover",
									"nameLocation": "4081:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4111:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "4103:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4103:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4102:18:3"
									},
									"src": "4075:46:3"
								},
								{
									"documentation": {
										"id": 401,
										"nodeType": "StructuredDocumentation",
										"src": "4129:200:3",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 405,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4341:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4371:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "4363:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4363:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4362:18:3"
									},
									"src": "4335:46:3"
								}
							],
							"scope": 454,
							"src": "2240:2144:3",
							"usedErrors": [
								364,
								369,
								378,
								383,
								388,
								395,
								400,
								405
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 407,
								"nodeType": "StructuredDocumentation",
								"src": "4388:146:3",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 453,
							"linearizedBaseContracts": [
								453
							],
							"name": "IERC1155Errors",
							"nameLocation": "4546:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 408,
										"nodeType": "StructuredDocumentation",
										"src": "4568:367:3",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 418,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4947:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4982:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "4974:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4974:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4998:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "4990:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4990:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "5015:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "5007:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 413,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5007:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5031:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "5023:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 415,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5023:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4973:66:3"
									},
									"src": "4941:99:3"
								},
								{
									"documentation": {
										"id": 419,
										"nodeType": "StructuredDocumentation",
										"src": "5048:155:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 423,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5215:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5244:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "5236:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5236:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5235:16:3"
									},
									"src": "5209:43:3"
								},
								{
									"documentation": {
										"id": 424,
										"nodeType": "StructuredDocumentation",
										"src": "5260:162:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 428,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5434:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5465:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "5457:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5457:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5456:18:3"
									},
									"src": "5428:47:3"
								},
								{
									"documentation": {
										"id": 429,
										"nodeType": "StructuredDocumentation",
										"src": "5483:260:3",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 435,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5755:28:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5792:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "5784:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5784:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5810:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "5802:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5802:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5783:33:3"
									},
									"src": "5749:68:3"
								},
								{
									"documentation": {
										"id": 436,
										"nodeType": "StructuredDocumentation",
										"src": "5825:177:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 440,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "6014:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "6045:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "6037:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6037:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6036:18:3"
									},
									"src": "6008:47:3"
								},
								{
									"documentation": {
										"id": 441,
										"nodeType": "StructuredDocumentation",
										"src": "6063:200:3",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 445,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6275:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6306:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "6298:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6298:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6297:18:3"
									},
									"src": "6269:47:3"
								},
								{
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "6324:285:3",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 452,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6621:25:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6655:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "6647:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6647:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6674:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "6666:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6646:41:3"
									},
									"src": "6615:73:3"
								}
							],
							"scope": 454,
							"src": "4536:2155:3",
							"usedErrors": [
								418,
								423,
								428,
								435,
								440,
								445,
								452
							],
							"usedEvents": []
						}
					],
					"src": "114:6579:3"
				},
				"id": 3
			},
			"openzeppelin-contracts/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Context": [
							1647
						],
						"ERC165": [
							1926
						],
						"ERC721": [
							1462
						],
						"IERC165": [
							1938
						],
						"IERC721": [
							1579
						],
						"IERC721Errors": [
							406
						],
						"IERC721Metadata": [
							1625
						],
						"IERC721Receiver": [
							1597
						],
						"Strings": [
							1902
						]
					},
					"id": 1463,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 455,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "110:24:4"
						},
						{
							"absolutePath": "openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 457,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1463,
							"sourceUnit": 1580,
							"src": "138:38:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 456,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1579,
										"src": "146:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 459,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1463,
							"sourceUnit": 1598,
							"src": "178:54:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 458,
										"name": "IERC721Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1597,
										"src": "186:15:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 461,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1463,
							"sourceUnit": 1626,
							"src": "234:65:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 460,
										"name": "IERC721Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1625,
										"src": "242:15:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "openzeppelin-contracts/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 463,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1463,
							"sourceUnit": 1648,
							"src": "301:48:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 462,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1647,
										"src": "309:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "openzeppelin-contracts/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 465,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1463,
							"sourceUnit": 1903,
							"src": "351:48:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 464,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1902,
										"src": "359:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 468,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1463,
							"sourceUnit": 1927,
							"src": "401:69:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 466,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1938,
										"src": "409:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 467,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1926,
										"src": "418:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 470,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1463,
							"sourceUnit": 454,
							"src": "472:66:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 469,
										"name": "IERC721Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 406,
										"src": "480:13:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 472,
										"name": "Context",
										"nameLocations": [
											"822:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1647,
										"src": "822:7:4"
									},
									"id": 473,
									"nodeType": "InheritanceSpecifier",
									"src": "822:7:4"
								},
								{
									"baseName": {
										"id": 474,
										"name": "ERC165",
										"nameLocations": [
											"831:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1926,
										"src": "831:6:4"
									},
									"id": 475,
									"nodeType": "InheritanceSpecifier",
									"src": "831:6:4"
								},
								{
									"baseName": {
										"id": 476,
										"name": "IERC721",
										"nameLocations": [
											"839:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1579,
										"src": "839:7:4"
									},
									"id": 477,
									"nodeType": "InheritanceSpecifier",
									"src": "839:7:4"
								},
								{
									"baseName": {
										"id": 478,
										"name": "IERC721Metadata",
										"nameLocations": [
											"848:15:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1625,
										"src": "848:15:4"
									},
									"id": 479,
									"nodeType": "InheritanceSpecifier",
									"src": "848:15:4"
								},
								{
									"baseName": {
										"id": 480,
										"name": "IERC721Errors",
										"nameLocations": [
											"865:13:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 406,
										"src": "865:13:4"
									},
									"id": 481,
									"nodeType": "InheritanceSpecifier",
									"src": "865:13:4"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 471,
								"nodeType": "StructuredDocumentation",
								"src": "542:250:4",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1462,
							"linearizedBaseContracts": [
								1462,
								406,
								1625,
								1579,
								1926,
								1938,
								1647
							],
							"name": "ERC721",
							"nameLocation": "812:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 484,
									"libraryName": {
										"id": 482,
										"name": "Strings",
										"nameLocations": [
											"892:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1902,
										"src": "892:7:4"
									},
									"nodeType": "UsingForDirective",
									"src": "886:26:4",
									"typeName": {
										"id": 483,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "904:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 486,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "954:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 1462,
									"src": "939:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 485,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "939:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 488,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1004:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 1462,
									"src": "989:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 487,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "989:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 492,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "1064:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 1462,
									"src": "1020:51:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 491,
										"keyName": "tokenId",
										"keyNameLocation": "1036:7:4",
										"keyType": {
											"id": 489,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1028:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1020:35:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 490,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1047:7:4",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 496,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1122:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1462,
									"src": "1080:51:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 495,
										"keyName": "owner",
										"keyNameLocation": "1096:5:4",
										"keyType": {
											"id": 493,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1088:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1080:33:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 494,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1105:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 500,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1184:15:4",
									"nodeType": "VariableDeclaration",
									"scope": 1462,
									"src": "1140:59:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 499,
										"keyName": "tokenId",
										"keyNameLocation": "1156:7:4",
										"keyType": {
											"id": 497,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1148:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1140:35:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 498,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1167:7:4",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 506,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1276:18:4",
									"nodeType": "VariableDeclaration",
									"scope": 1462,
									"src": "1208:86:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 505,
										"keyName": "owner",
										"keyNameLocation": "1224:5:4",
										"keyType": {
											"id": 501,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1216:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1208:59:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 504,
											"keyName": "operator",
											"keyNameLocation": "1249:8:4",
											"keyType": {
												"id": 502,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1241:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1233:33:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 503,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1261:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "1475:60:4",
										"statements": [
											{
												"expression": {
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 514,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 486,
														"src": "1486:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 515,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 509,
														"src": "1494:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1486:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 517,
												"nodeType": "ExpressionStatement",
												"src": "1486:13:4"
											},
											{
												"expression": {
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 518,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 488,
														"src": "1510:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 519,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 511,
														"src": "1520:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1510:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 521,
												"nodeType": "ExpressionStatement",
												"src": "1510:17:4"
											}
										]
									},
									"documentation": {
										"id": 507,
										"nodeType": "StructuredDocumentation",
										"src": "1303:110:4",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 523,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1445:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "1431:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 508,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1431:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1466:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "1452:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 510,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1452:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1430:44:4"
									},
									"returnParameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1475:0:4"
									},
									"scope": 1462,
									"src": "1419:116:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1925,
										1937
									],
									"body": {
										"id": 553,
										"nodeType": "Block",
										"src": "1715:197:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 546,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 534,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 526,
																"src": "1746:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 536,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1579,
																			"src": "1766:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1579_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1579_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 535,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1761:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 537,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1761:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1579",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 538,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1775:11:4",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1761:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1746:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 540,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 526,
																"src": "1803:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 542,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1625,
																			"src": "1823:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1625_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1625_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 541,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1818:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 543,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1818:21:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1625",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 544,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1840:11:4",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1818:33:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1803:48:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1746:105:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 549,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 526,
																"src": "1892:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 547,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1868:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1462_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 548,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1874:17:4",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1925,
															"src": "1868:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 550,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1868:36:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1746:158:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 533,
												"id": 552,
												"nodeType": "Return",
												"src": "1726:178:4"
											}
										]
									},
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "1543:58:4",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 554,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1616:17:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 530,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 528,
												"name": "ERC165",
												"nameLocations": [
													"1683:6:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1926,
												"src": "1683:6:4"
											},
											{
												"id": 529,
												"name": "IERC165",
												"nameLocations": [
													"1691:7:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1938,
												"src": "1691:7:4"
											}
										],
										"src": "1674:25:4"
									},
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1641:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "1634:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 525,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1633:20:4"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "1709:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 531,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1709:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1708:6:4"
									},
									"scope": 1462,
									"src": "1607:305:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1504
									],
									"body": {
										"id": 581,
										"nodeType": "Block",
										"src": "2048:141:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 562,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 557,
														"src": "2063:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2080:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 564,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2072:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 563,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2072:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 566,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2072:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2063:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 576,
												"nodeType": "IfStatement",
												"src": "2059:89:4",
												"trueBody": {
													"id": 575,
													"nodeType": "Block",
													"src": "2084:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 571,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2133:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 570,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2125:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 569,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2125:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 572,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2125:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 568,
																	"name": "ERC721InvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 364,
																	"src": "2106:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 573,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2106:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 574,
															"nodeType": "RevertStatement",
															"src": "2099:37:4"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 577,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 496,
														"src": "2165:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 579,
													"indexExpression": {
														"id": 578,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 557,
														"src": "2175:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2165:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 561,
												"id": 580,
												"nodeType": "Return",
												"src": "2158:23:4"
											}
										]
									},
									"documentation": {
										"id": 555,
										"nodeType": "StructuredDocumentation",
										"src": "1920:50:4",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 582,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1985:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2003:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "1995:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1995:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1994:15:4"
									},
									"returnParameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "2039:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 559,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2039:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2038:9:4"
									},
									"scope": 1462,
									"src": "1976:213:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1512
									],
									"body": {
										"id": 594,
										"nodeType": "Block",
										"src": "2323:48:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 591,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "2355:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 590,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1397,
														"src": "2341:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2341:22:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 589,
												"id": 593,
												"nodeType": "Return",
												"src": "2334:29:4"
											}
										]
									},
									"documentation": {
										"id": 583,
										"nodeType": "StructuredDocumentation",
										"src": "2197:48:4",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 595,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2260:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2276:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "2268:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 584,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2268:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2267:17:4"
									},
									"returnParameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "2314:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2314:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2313:9:4"
									},
									"scope": 1462,
									"src": "2251:120:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1610
									],
									"body": {
										"id": 603,
										"nodeType": "Block",
										"src": "2498:31:4",
										"statements": [
											{
												"expression": {
													"id": 601,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 486,
													"src": "2516:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 600,
												"id": 602,
												"nodeType": "Return",
												"src": "2509:12:4"
											}
										]
									},
									"documentation": {
										"id": 596,
										"nodeType": "StructuredDocumentation",
										"src": "2379:53:4",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 604,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2447:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2451:2:4"
									},
									"returnParameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "2483:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 598,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2483:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2482:15:4"
									},
									"scope": 1462,
									"src": "2438:91:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1616
									],
									"body": {
										"id": 612,
										"nodeType": "Block",
										"src": "2660:33:4",
										"statements": [
											{
												"expression": {
													"id": 610,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 488,
													"src": "2678:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 609,
												"id": 611,
												"nodeType": "Return",
												"src": "2671:14:4"
											}
										]
									},
									"documentation": {
										"id": 605,
										"nodeType": "StructuredDocumentation",
										"src": "2537:55:4",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 613,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2607:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:2:4"
									},
									"returnParameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "2645:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 607,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2645:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2644:15:4"
									},
									"scope": 1462,
									"src": "2598:95:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1624
									],
									"body": {
										"id": 648,
										"nodeType": "Block",
										"src": "2843:181:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 622,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "2868:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 621,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1397,
														"src": "2854:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2854:22:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 624,
												"nodeType": "ExpressionStatement",
												"src": "2854:22:4"
											},
											{
												"assignments": [
													626
												],
												"declarations": [
													{
														"constant": false,
														"id": 626,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2903:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 648,
														"src": "2889:21:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 625,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2889:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 629,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 627,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 658,
														"src": "2913:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2913:10:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2889:34:4"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 636,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 632,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 626,
																		"src": "2947:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 631,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2941:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 630,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2941:5:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 633,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2941:14:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 634,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2956:6:4",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2941:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 635,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2965:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2941:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 645,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3014:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2941:75:4",
													"trueExpression": {
														"arguments": [
															{
																"id": 640,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 626,
																"src": "2983:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 641,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 616,
																		"src": "2992:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 642,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3000:8:4",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1715,
																	"src": "2992:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 643,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2992:18:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 638,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2969:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 637,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "2969:6:4",
																	"typeDescriptions": {}
																}
															},
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2976:6:4",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "2969:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 644,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2969:42:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 620,
												"id": 647,
												"nodeType": "Return",
												"src": "2934:82:4"
											}
										]
									},
									"documentation": {
										"id": 614,
										"nodeType": "StructuredDocumentation",
										"src": "2701:57:4",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 649,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2773:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2790:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "2782:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2782:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2781:17:4"
									},
									"returnParameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "2828:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 618,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2828:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2827:15:4"
									},
									"scope": 1462,
									"src": "2764:260:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 657,
										"nodeType": "Block",
										"src": "3339:28:4",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 655,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3357:2:4",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 654,
												"id": 656,
												"nodeType": "Return",
												"src": "3350:9:4"
											}
										]
									},
									"documentation": {
										"id": 650,
										"nodeType": "StructuredDocumentation",
										"src": "3032:235:4",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 658,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3282:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3290:2:4"
									},
									"returnParameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "3324:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 652,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3324:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3323:15:4"
									},
									"scope": 1462,
									"src": "3273:94:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1552
									],
									"body": {
										"id": 673,
										"nodeType": "Block",
										"src": "3490:54:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 667,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 661,
															"src": "3510:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 663,
															"src": "3514:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 669,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1637,
																"src": "3523:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3523:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 666,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1265,
															1331
														],
														"referencedDeclaration": 1265,
														"src": "3501:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3501:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 672,
												"nodeType": "ExpressionStatement",
												"src": "3501:35:4"
											}
										]
									},
									"documentation": {
										"id": 659,
										"nodeType": "StructuredDocumentation",
										"src": "3375:48:4",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 674,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3438:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3454:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "3446:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 660,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3446:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3466:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "3458:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 662,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3458:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3445:29:4"
									},
									"returnParameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3490:0:4"
									},
									"scope": 1462,
									"src": "3429:115:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1568
									],
									"body": {
										"id": 690,
										"nodeType": "Block",
										"src": "3686:82:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "3711:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 682,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1397,
														"src": "3697:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3697:22:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 685,
												"nodeType": "ExpressionStatement",
												"src": "3697:22:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 687,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "3752:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 686,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 840,
														"src": "3739:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3739:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 681,
												"id": 689,
												"nodeType": "Return",
												"src": "3732:28:4"
											}
										]
									},
									"documentation": {
										"id": 675,
										"nodeType": "StructuredDocumentation",
										"src": "3552:52:4",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 691,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3619:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3639:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "3631:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 676,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:17:4"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "3677:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 679,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3677:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3676:9:4"
									},
									"scope": 1462,
									"src": "3610:158:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1560
									],
									"body": {
										"id": 706,
										"nodeType": "Block",
										"src": "3915:71:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 700,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1637,
																"src": "3945:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 701,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3945:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 702,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 694,
															"src": "3959:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 703,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 696,
															"src": "3969:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 699,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1368,
														"src": "3926:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3926:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 705,
												"nodeType": "ExpressionStatement",
												"src": "3926:52:4"
											}
										]
									},
									"documentation": {
										"id": 692,
										"nodeType": "StructuredDocumentation",
										"src": "3776:58:4",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 707,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3849:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3875:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "3867:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 693,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3867:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3890:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "3885:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 695,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3885:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3866:33:4"
									},
									"returnParameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3915:0:4"
									},
									"scope": 1462,
									"src": "3840:146:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1578
									],
									"body": {
										"id": 723,
										"nodeType": "Block",
										"src": "4151:61:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 717,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "4169:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 719,
														"indexExpression": {
															"id": 718,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 710,
															"src": "4188:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4169:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 721,
													"indexExpression": {
														"id": 720,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 712,
														"src": "4195:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4169:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 716,
												"id": 722,
												"nodeType": "Return",
												"src": "4162:42:4"
											}
										]
									},
									"documentation": {
										"id": 708,
										"nodeType": "StructuredDocumentation",
										"src": "3994:57:4",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 724,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4066:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4091:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "4083:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4083:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4106:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "4098:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4098:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4082:33:4"
									},
									"returnParameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "4145:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 714,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4145:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4144:6:4"
									},
									"scope": 1462,
									"src": "4057:155:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1544
									],
									"body": {
										"id": 769,
										"nodeType": "Block",
										"src": "4359:508:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 734,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 729,
														"src": "4374:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 737,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4388:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 736,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4380:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 735,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4380:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 738,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4380:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4374:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "4370:89:4",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "4392:67:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 743,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4444:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 742,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4436:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 741,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4436:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 744,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4436:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 740,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "4414:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4414:33:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "RevertStatement",
															"src": "4407:40:4"
														}
													]
												}
											},
											{
												"assignments": [
													750
												],
												"declarations": [
													{
														"constant": false,
														"id": 750,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "4688:13:4",
														"nodeType": "VariableDeclaration",
														"scope": 769,
														"src": "4680:21:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 749,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4680:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 757,
												"initialValue": {
													"arguments": [
														{
															"id": 752,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "4712:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 753,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 731,
															"src": "4716:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 754,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1637,
																"src": "4725:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 755,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4725:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 751,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1019,
														"src": "4704:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4704:34:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4680:58:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 758,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 750,
														"src": "4753:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 759,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 727,
														"src": "4770:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4753:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 768,
												"nodeType": "IfStatement",
												"src": "4749:111:4",
												"trueBody": {
													"id": 767,
													"nodeType": "Block",
													"src": "4776:84:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 762,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 727,
																		"src": "4819:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 763,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 731,
																		"src": "4825:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 764,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 750,
																		"src": "4834:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 761,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 378,
																	"src": "4798:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (address,uint256,address) pure"
																	}
																},
																"id": 765,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4798:50:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 766,
															"nodeType": "RevertStatement",
															"src": "4791:57:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 725,
										"nodeType": "StructuredDocumentation",
										"src": "4220:53:4",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 770,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4288:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4309:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "4301:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4301:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4323:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "4315:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 728,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4315:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4335:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "4327:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 730,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4300:43:4"
									},
									"returnParameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4359:0:4"
									},
									"scope": 1462,
									"src": "4279:588:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1534
									],
									"body": {
										"id": 787,
										"nodeType": "Block",
										"src": "5014:58:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 781,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 773,
															"src": "5042:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 782,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "5048:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 783,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 777,
															"src": "5052:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 784,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5061:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 780,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															788,
															814
														],
														"referencedDeclaration": 814,
														"src": "5025:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5025:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 786,
												"nodeType": "ExpressionStatement",
												"src": "5025:39:4"
											}
										]
									},
									"documentation": {
										"id": 771,
										"nodeType": "StructuredDocumentation",
										"src": "4875:57:4",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 788,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4947:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4972:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "4964:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 772,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4964:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 775,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4986:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "4978:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 774,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4978:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 777,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4998:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "4990:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 776,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4990:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4963:43:4"
									},
									"returnParameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5014:0:4"
									},
									"scope": 1462,
									"src": "4938:134:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1524
									],
									"body": {
										"id": 813,
										"nodeType": "Block",
										"src": "5246:108:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 801,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "5270:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 802,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "5276:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 803,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "5280:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 800,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "5257:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5257:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 805,
												"nodeType": "ExpressionStatement",
												"src": "5257:31:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 807,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "5322:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 808,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "5328:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 809,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "5332:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 810,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "5341:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 806,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1461,
														"src": "5299:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5299:47:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 812,
												"nodeType": "ExpressionStatement",
												"src": "5299:47:4"
											}
										]
									},
									"documentation": {
										"id": 789,
										"nodeType": "StructuredDocumentation",
										"src": "5080:57:4",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 814,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5152:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5177:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "5169:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 790,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5169:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5191:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "5183:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 792,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5183:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5203:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "5195:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 794,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5195:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5225:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "5212:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 796,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5212:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5168:62:4"
									},
									"returnParameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5246:0:4"
									},
									"scope": 1462,
									"src": "5143:211:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 826,
										"nodeType": "Block",
										"src": "5953:42:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 822,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 492,
														"src": "5971:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 824,
													"indexExpression": {
														"id": 823,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 817,
														"src": "5979:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5971:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 821,
												"id": 825,
												"nodeType": "Return",
												"src": "5964:23:4"
											}
										]
									},
									"documentation": {
										"id": 815,
										"nodeType": "StructuredDocumentation",
										"src": "5362:510:4",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 827,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "5887:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5904:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "5896:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5896:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5895:17:4"
									},
									"returnParameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "5944:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 819,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5944:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5943:9:4"
									},
									"scope": 1462,
									"src": "5878:117:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 839,
										"nodeType": "Block",
										"src": "6195:50:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 835,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 500,
														"src": "6213:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 837,
													"indexExpression": {
														"id": 836,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 830,
														"src": "6229:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6213:24:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 834,
												"id": 838,
												"nodeType": "Return",
												"src": "6206:31:4"
											}
										]
									},
									"documentation": {
										"id": 828,
										"nodeType": "StructuredDocumentation",
										"src": "6003:107:4",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 840,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "6125:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6146:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "6138:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 829,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6138:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6137:17:4"
									},
									"returnParameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "6186:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 832,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6186:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6185:9:4"
									},
									"scope": 1462,
									"src": "6116:129:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 875,
										"nodeType": "Block",
										"src": "6674:167:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 857,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 852,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 845,
															"src": "6705:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 855,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6724:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 854,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6716:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 853,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6716:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 856,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6716:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6705:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 871,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 865,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 860,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 858,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 843,
																			"src": "6744:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 859,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 845,
																			"src": "6753:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6744:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 862,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 843,
																				"src": "6781:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 863,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 845,
																				"src": "6788:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 861,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 724,
																			"src": "6764:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 864,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6764:32:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6744:52:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 870,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 867,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 847,
																				"src": "6813:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 866,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 840,
																			"src": "6800:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 868,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6800:21:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 869,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 845,
																		"src": "6825:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "6800:32:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6744:88:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 872,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6743:90:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6705:128:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 851,
												"id": 874,
												"nodeType": "Return",
												"src": "6685:148:4"
											}
										]
									},
									"documentation": {
										"id": 841,
										"nodeType": "StructuredDocumentation",
										"src": "6253:306:4",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 876,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "6574:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6596:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "6588:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 842,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6588:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 845,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6611:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "6603:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 844,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6603:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6628:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "6620:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 846,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6620:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6587:49:4"
									},
									"returnParameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "6668:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 849,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6668:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6667:6:4"
									},
									"scope": 1462,
									"src": "6565:276:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 912,
										"nodeType": "Block",
										"src": "7382:279:4",
										"statements": [
											{
												"condition": {
													"id": 891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7397:39:4",
													"subExpression": {
														"arguments": [
															{
																"id": 887,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 879,
																"src": "7412:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 888,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 881,
																"src": "7419:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 889,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 883,
																"src": "7428:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 886,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 876,
															"src": "7398:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 890,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7398:38:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 911,
												"nodeType": "IfStatement",
												"src": "7393:261:4",
												"trueBody": {
													"id": 910,
													"nodeType": "Block",
													"src": "7438:216:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 897,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 892,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 879,
																	"src": "7457:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 895,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7474:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 894,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7466:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 893,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7466:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 896,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7466:10:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7457:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 908,
																"nodeType": "Block",
																"src": "7557:86:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 904,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 881,
																					"src": "7610:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 905,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 883,
																					"src": "7619:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 903,
																				"name": "ERC721InsufficientApproval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 395,
																				"src": "7583:26:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256) pure"
																				}
																			},
																			"id": 906,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7583:44:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 907,
																		"nodeType": "RevertStatement",
																		"src": "7576:51:4"
																	}
																]
															},
															"id": 909,
															"nodeType": "IfStatement",
															"src": "7453:190:4",
															"trueBody": {
																"id": 902,
																"nodeType": "Block",
																"src": "7478:73:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 899,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 883,
																					"src": "7527:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 898,
																				"name": "ERC721NonexistentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 369,
																				"src": "7504:22:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																					"typeString": "function (uint256) pure"
																				}
																			},
																			"id": 900,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7504:31:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 901,
																		"nodeType": "RevertStatement",
																		"src": "7497:38:4"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 877,
										"nodeType": "StructuredDocumentation",
										"src": "6849:430:4",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 913,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "7294:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7319:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "7311:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 878,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7311:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7334:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "7326:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7326:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7351:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "7343:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7343:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7310:49:4"
									},
									"returnParameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7382:0:4"
									},
									"scope": 1462,
									"src": "7285:376:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 928,
										"nodeType": "Block",
										"src": "8390:82:4",
										"statements": [
											{
												"id": 927,
												"nodeType": "UncheckedBlock",
												"src": "8401:64:4",
												"statements": [
													{
														"expression": {
															"id": 925,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 921,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 496,
																	"src": "8426:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 923,
																"indexExpression": {
																	"id": 922,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 916,
																	"src": "8436:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8426:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 924,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 918,
																"src": "8448:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "8426:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 926,
														"nodeType": "ExpressionStatement",
														"src": "8426:27:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 914,
										"nodeType": "StructuredDocumentation",
										"src": "7669:640:4",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 929,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "8324:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8349:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "8341:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 915,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8341:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8366:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "8358:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 917,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "8358:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8340:32:4"
									},
									"returnParameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8390:0:4"
									},
									"scope": 1462,
									"src": "8315:157:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1018,
										"nodeType": "Block",
										"src": "9173:729:4",
										"statements": [
											{
												"assignments": [
													942
												],
												"declarations": [
													{
														"constant": false,
														"id": 942,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "9192:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 1018,
														"src": "9184:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 941,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9184:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 946,
												"initialValue": {
													"arguments": [
														{
															"id": 944,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 934,
															"src": "9208:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 943,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 827,
														"src": "9199:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9199:17:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9184:32:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 947,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 936,
														"src": "9279:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 950,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9295:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 949,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9287:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 948,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9287:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 951,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9287:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9279:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 960,
												"nodeType": "IfStatement",
												"src": "9275:88:4",
												"trueBody": {
													"id": 959,
													"nodeType": "Block",
													"src": "9299:64:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 954,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 942,
																		"src": "9331:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 955,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 936,
																		"src": "9337:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 956,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 934,
																		"src": "9343:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 953,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 913,
																	"src": "9314:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 957,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9314:37:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 958,
															"nodeType": "ExpressionStatement",
															"src": "9314:37:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 961,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 942,
														"src": "9410:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 964,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9426:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 963,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9418:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 962,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9418:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 965,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9418:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9410:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 988,
												"nodeType": "IfStatement",
												"src": "9406:263:4",
												"trueBody": {
													"id": 987,
													"nodeType": "Block",
													"src": "9430:239:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 970,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9545:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 969,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9537:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 968,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9537:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 971,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9537:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 972,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 934,
																		"src": "9549:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 975,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9566:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 974,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9558:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 973,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9558:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 976,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9558:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 977,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9570:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 967,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1265,
																		1331
																	],
																	"referencedDeclaration": 1331,
																	"src": "9528:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 978,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9528:48:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 979,
															"nodeType": "ExpressionStatement",
															"src": "9528:48:4"
														},
														{
															"id": 986,
															"nodeType": "UncheckedBlock",
															"src": "9593:65:4",
															"statements": [
																{
																	"expression": {
																		"id": 984,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 980,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 496,
																				"src": "9622:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 982,
																			"indexExpression": {
																				"id": 981,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 942,
																				"src": "9632:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9622:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 983,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9641:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9622:20:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 985,
																	"nodeType": "ExpressionStatement",
																	"src": "9622:20:4"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 989,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 932,
														"src": "9685:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 992,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9699:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 991,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9691:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 990,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9691:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 993,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9691:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9685:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1003,
												"nodeType": "IfStatement",
												"src": "9681:111:4",
												"trueBody": {
													"id": 1002,
													"nodeType": "Block",
													"src": "9703:89:4",
													"statements": [
														{
															"id": 1001,
															"nodeType": "UncheckedBlock",
															"src": "9718:63:4",
															"statements": [
																{
																	"expression": {
																		"id": 999,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 995,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 496,
																				"src": "9747:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 997,
																			"indexExpression": {
																				"id": 996,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 932,
																				"src": "9757:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9747:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 998,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9764:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9747:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1000,
																	"nodeType": "ExpressionStatement",
																	"src": "9747:18:4"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 1008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1004,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 492,
															"src": "9804:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1006,
														"indexExpression": {
															"id": 1005,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 934,
															"src": "9812:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9804:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1007,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 932,
														"src": "9823:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9804:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1009,
												"nodeType": "ExpressionStatement",
												"src": "9804:21:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1011,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 942,
															"src": "9852:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1012,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 932,
															"src": "9858:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1013,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 934,
															"src": "9862:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1010,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1478,
														"src": "9843:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9843:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1015,
												"nodeType": "EmitStatement",
												"src": "9838:32:4"
											},
											{
												"expression": {
													"id": 1016,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 942,
													"src": "9890:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 940,
												"id": 1017,
												"nodeType": "Return",
												"src": "9883:11:4"
											}
										]
									},
									"documentation": {
										"id": 930,
										"nodeType": "StructuredDocumentation",
										"src": "8480:592:4",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 1019,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "9087:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9103:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "9095:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 931,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9095:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9115:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "9107:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 933,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9107:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "9132:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "9124:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 935,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9124:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9094:43:4"
									},
									"returnParameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "9164:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 938,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9164:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9163:9:4"
									},
									"scope": 1462,
									"src": "9078:824:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1068,
										"nodeType": "Block",
										"src": "10291:282:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1027,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1022,
														"src": "10306:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1030,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10320:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1029,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10312:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1028,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10312:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1031,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10312:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10306:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1041,
												"nodeType": "IfStatement",
												"src": "10302:89:4",
												"trueBody": {
													"id": 1040,
													"nodeType": "Block",
													"src": "10324:67:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1036,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10376:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1035,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10368:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1034,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10368:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1037,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10368:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1033,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "10346:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1038,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10346:33:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1039,
															"nodeType": "RevertStatement",
															"src": "10339:40:4"
														}
													]
												}
											},
											{
												"assignments": [
													1043
												],
												"declarations": [
													{
														"constant": false,
														"id": 1043,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "10409:13:4",
														"nodeType": "VariableDeclaration",
														"scope": 1068,
														"src": "10401:21:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1042,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10401:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1052,
												"initialValue": {
													"arguments": [
														{
															"id": 1045,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1022,
															"src": "10433:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1046,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1024,
															"src": "10437:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1049,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10454:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1048,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10446:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1047,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10446:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1050,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10446:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1044,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1019,
														"src": "10425:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10425:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10401:56:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1053,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1043,
														"src": "10472:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1056,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10497:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1055,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10489:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1054,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10489:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1057,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10489:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10472:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1067,
												"nodeType": "IfStatement",
												"src": "10468:98:4",
												"trueBody": {
													"id": 1066,
													"nodeType": "Block",
													"src": "10501:65:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1062,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10551:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1061,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10543:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1060,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10543:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1063,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10543:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1059,
																	"name": "ERC721InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 383,
																	"src": "10523:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1064,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10523:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1065,
															"nodeType": "RevertStatement",
															"src": "10516:38:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1020,
										"nodeType": "StructuredDocumentation",
										"src": "9910:322:4",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 1069,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "10247:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10261:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "10253:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10253:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10273:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "10265:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1023,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10265:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10252:29:4"
									},
									"returnParameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10291:0:4"
									},
									"scope": 1462,
									"src": "10238:335:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1083,
										"nodeType": "Block",
										"src": "10993:45:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1078,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1072,
															"src": "11014:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1079,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1074,
															"src": "11018:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1080,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11027:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1077,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1084,
															1110
														],
														"referencedDeclaration": 1110,
														"src": "11004:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 1081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11004:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1082,
												"nodeType": "ExpressionStatement",
												"src": "11004:26:4"
											}
										]
									},
									"documentation": {
										"id": 1070,
										"nodeType": "StructuredDocumentation",
										"src": "10581:349:4",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 1084,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10945:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10963:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "10955:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1071,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10955:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10975:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "10967:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1073,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10967:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10954:29:4"
									},
									"returnParameters": {
										"id": 1076,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10993:0:4"
									},
									"scope": 1462,
									"src": "10936:102:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1109,
										"nodeType": "Block",
										"src": "11349:101:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1095,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "11366:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1096,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "11370:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1094,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1069,
														"src": "11360:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11360:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1098,
												"nodeType": "ExpressionStatement",
												"src": "11360:18:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1102,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11420:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1101,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11412:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1100,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11412:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1103,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11412:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1104,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "11424:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1105,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "11428:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1106,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "11437:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1099,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1461,
														"src": "11389:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11389:53:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1108,
												"nodeType": "ExpressionStatement",
												"src": "11389:53:4"
											}
										]
									},
									"documentation": {
										"id": 1085,
										"nodeType": "StructuredDocumentation",
										"src": "11046:213:4",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 1110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "11274:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11292:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "11284:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11284:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11304:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "11296:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1088,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11296:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11326:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "11313:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1090,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11313:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11283:48:4"
									},
									"returnParameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11349:0:4"
									},
									"scope": 1462,
									"src": "11265:185:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1142,
										"nodeType": "Block",
										"src": "11830:191:4",
										"statements": [
											{
												"assignments": [
													1117
												],
												"declarations": [
													{
														"constant": false,
														"id": 1117,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "11849:13:4",
														"nodeType": "VariableDeclaration",
														"scope": 1142,
														"src": "11841:21:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1116,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11841:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1129,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1121,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11881:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1120,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11873:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1119,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11873:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1122,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11873:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1123,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "11885:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11902:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1125,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11894:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1124,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11894:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1127,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11894:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1118,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1019,
														"src": "11865:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11865:40:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11841:64:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1130,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1117,
														"src": "11920:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1133,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11945:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11937:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1131,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11937:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1134,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11937:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11920:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1141,
												"nodeType": "IfStatement",
												"src": "11916:98:4",
												"trueBody": {
													"id": 1140,
													"nodeType": "Block",
													"src": "11949:65:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1137,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1113,
																		"src": "11994:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1136,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 369,
																	"src": "11971:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1138,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11971:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1139,
															"nodeType": "RevertStatement",
															"src": "11964:38:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1111,
										"nodeType": "StructuredDocumentation",
										"src": "11458:325:4",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 1143,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "11798:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11812:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "11804:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11804:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11803:17:4"
									},
									"returnParameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11830:0:4"
									},
									"scope": 1462,
									"src": "11789:232:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1202,
										"nodeType": "Block",
										"src": "12429:399:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1153,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1148,
														"src": "12444:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1156,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12458:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1155,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12450:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1154,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12450:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1157,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12450:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12444:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1167,
												"nodeType": "IfStatement",
												"src": "12440:89:4",
												"trueBody": {
													"id": 1166,
													"nodeType": "Block",
													"src": "12462:67:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1162,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12514:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1161,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12506:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1160,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12506:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1163,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12506:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1159,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "12484:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1164,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12484:33:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1165,
															"nodeType": "RevertStatement",
															"src": "12477:40:4"
														}
													]
												}
											},
											{
												"assignments": [
													1169
												],
												"declarations": [
													{
														"constant": false,
														"id": 1169,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "12547:13:4",
														"nodeType": "VariableDeclaration",
														"scope": 1202,
														"src": "12539:21:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1168,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12539:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1178,
												"initialValue": {
													"arguments": [
														{
															"id": 1171,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1148,
															"src": "12571:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1172,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1150,
															"src": "12575:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1175,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12592:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1174,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12584:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1173,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12584:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1176,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12584:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1170,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1019,
														"src": "12563:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12563:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12539:56:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1179,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1169,
														"src": "12610:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1182,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12635:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1181,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12627:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1180,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12627:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1183,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12627:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12610:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1192,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1190,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1169,
															"src": "12714:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1191,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1146,
															"src": "12731:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "12714:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1200,
													"nodeType": "IfStatement",
													"src": "12710:111:4",
													"trueBody": {
														"id": 1199,
														"nodeType": "Block",
														"src": "12737:84:4",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 1194,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1146,
																			"src": "12780:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1195,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1150,
																			"src": "12786:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1196,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1169,
																			"src": "12795:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1193,
																		"name": "ERC721IncorrectOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "12759:20:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																			"typeString": "function (address,uint256,address) pure"
																		}
																	},
																	"id": 1197,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12759:50:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1198,
																"nodeType": "RevertStatement",
																"src": "12752:57:4"
															}
														]
													}
												},
												"id": 1201,
												"nodeType": "IfStatement",
												"src": "12606:215:4",
												"trueBody": {
													"id": 1189,
													"nodeType": "Block",
													"src": "12639:65:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1186,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1150,
																		"src": "12684:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1185,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 369,
																	"src": "12661:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1187,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12661:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1188,
															"nodeType": "RevertStatement",
															"src": "12654:38:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1144,
										"nodeType": "StructuredDocumentation",
										"src": "12029:323:4",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 1203,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "12367:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12385:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1203,
												"src": "12377:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12377:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12399:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1203,
												"src": "12391:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12391:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12411:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1203,
												"src": "12403:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12403:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12376:43:4"
									},
									"returnParameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12429:0:4"
									},
									"scope": 1462,
									"src": "12358:470:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1220,
										"nodeType": "Block",
										"src": "13857:55:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1214,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1206,
															"src": "13882:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1215,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1208,
															"src": "13888:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1216,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1210,
															"src": "13892:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1217,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13901:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1213,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1221,
															1247
														],
														"referencedDeclaration": 1247,
														"src": "13868:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13868:36:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1219,
												"nodeType": "ExpressionStatement",
												"src": "13868:36:4"
											}
										]
									},
									"documentation": {
										"id": 1204,
										"nodeType": "StructuredDocumentation",
										"src": "12836:940:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 1221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13791:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1206,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13813:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "13805:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13805:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13827:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "13819:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13819:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1210,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13839:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "13831:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13831:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13804:43:4"
									},
									"returnParameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13857:0:4"
									},
									"scope": 1462,
									"src": "13782:130:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1246,
										"nodeType": "Block",
										"src": "14257:105:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1234,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1224,
															"src": "14278:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1235,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1226,
															"src": "14284:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1236,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1228,
															"src": "14288:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1233,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1203,
														"src": "14268:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14268:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1238,
												"nodeType": "ExpressionStatement",
												"src": "14268:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1240,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1224,
															"src": "14330:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1241,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1226,
															"src": "14336:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1242,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1228,
															"src": "14340:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1243,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1230,
															"src": "14349:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1239,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1461,
														"src": "14307:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14307:47:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1245,
												"nodeType": "ExpressionStatement",
												"src": "14307:47:4"
											}
										]
									},
									"documentation": {
										"id": 1222,
										"nodeType": "StructuredDocumentation",
										"src": "13920:229:4",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 1247,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "14164:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14186:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "14178:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14178:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1226,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14200:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "14192:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14192:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14212:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "14204:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14204:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14234:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "14221:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1229,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14221:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14177:62:4"
									},
									"returnParameters": {
										"id": 1232,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14257:0:4"
									},
									"scope": 1462,
									"src": "14155:207:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1264,
										"nodeType": "Block",
										"src": "14887:52:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1258,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1250,
															"src": "14907:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1259,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1252,
															"src": "14911:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1260,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1254,
															"src": "14920:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1261,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14926:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1257,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1265,
															1331
														],
														"referencedDeclaration": 1331,
														"src": "14898:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 1262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14898:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1263,
												"nodeType": "ExpressionStatement",
												"src": "14898:33:4"
											}
										]
									},
									"documentation": {
										"id": 1248,
										"nodeType": "StructuredDocumentation",
										"src": "14370:441:4",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14826:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14843:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "14835:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14835:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14855:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "14847:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14847:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14872:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "14864:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14864:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14834:43:4"
									},
									"returnParameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14887:0:4"
									},
									"scope": 1462,
									"src": "14817:122:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1330,
										"nodeType": "Block",
										"src": "15221:584:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1277,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1274,
														"src": "15289:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1283,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1278,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1272,
															"src": "15302:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1281,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15318:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1280,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15310:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1279,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "15310:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1282,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15310:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "15302:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15289:31:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1323,
												"nodeType": "IfStatement",
												"src": "15285:471:4",
												"trueBody": {
													"id": 1322,
													"nodeType": "Block",
													"src": "15322:434:4",
													"statements": [
														{
															"assignments": [
																1286
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1286,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "15345:5:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 1322,
																	"src": "15337:13:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1285,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "15337:7:4",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1290,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1288,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1270,
																		"src": "15367:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1287,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1397,
																	"src": "15353:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 1289,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15353:22:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "15337:38:4"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1306,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1291,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1272,
																			"src": "15506:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1294,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15522:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1293,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "15514:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1292,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "15514:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1295,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15514:10:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15506:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1297,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1286,
																			"src": "15528:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1298,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1272,
																			"src": "15537:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15528:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "15506:35:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 1305,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "15545:30:4",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1302,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1286,
																				"src": "15563:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1303,
																				"name": "auth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1272,
																				"src": "15570:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1301,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 724,
																			"src": "15546:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1304,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15546:29:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "15506:69:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1312,
															"nodeType": "IfStatement",
															"src": "15502:144:4",
															"trueBody": {
																"id": 1311,
																"nodeType": "Block",
																"src": "15577:69:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1308,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1272,
																					"src": "15625:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1307,
																				"name": "ERC721InvalidApprover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 400,
																				"src": "15603:21:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 1309,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15603:27:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1310,
																		"nodeType": "RevertStatement",
																		"src": "15596:34:4"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 1313,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1274,
																"src": "15666:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1321,
															"nodeType": "IfStatement",
															"src": "15662:83:4",
															"trueBody": {
																"id": 1320,
																"nodeType": "Block",
																"src": "15677:68:4",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1315,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1286,
																					"src": "15710:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1316,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1268,
																					"src": "15717:2:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1317,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1270,
																					"src": "15721:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1314,
																				"name": "Approval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1487,
																				"src": "15701:8:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1318,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15701:28:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1319,
																		"nodeType": "EmitStatement",
																		"src": "15696:33:4"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1324,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 500,
															"src": "15768:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1326,
														"indexExpression": {
															"id": 1325,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1270,
															"src": "15784:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15768:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1327,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1268,
														"src": "15795:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15768:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1329,
												"nodeType": "ExpressionStatement",
												"src": "15768:29:4"
											}
										]
									},
									"documentation": {
										"id": 1266,
										"nodeType": "StructuredDocumentation",
										"src": "14947:174:4",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 1331,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "15136:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1268,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15153:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "15145:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15145:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1270,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "15165:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "15157:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15157:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "15182:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "15174:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15174:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "15193:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "15188:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1273,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15188:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15144:59:4"
									},
									"returnParameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15221:0:4"
									},
									"scope": 1462,
									"src": "15127:678:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1367,
										"nodeType": "Block",
										"src": "16117:225:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1341,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1336,
														"src": "16132:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1344,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16152:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1343,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16144:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1342,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16144:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1345,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16144:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16132:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1352,
												"nodeType": "IfStatement",
												"src": "16128:93:4",
												"trueBody": {
													"id": 1351,
													"nodeType": "Block",
													"src": "16156:65:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1348,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1336,
																		"src": "16200:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1347,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 405,
																	"src": "16178:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1349,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16178:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1350,
															"nodeType": "RevertStatement",
															"src": "16171:38:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1353,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 506,
																"src": "16231:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1356,
															"indexExpression": {
																"id": 1354,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1334,
																"src": "16250:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "16231:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1357,
														"indexExpression": {
															"id": 1355,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1336,
															"src": "16257:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16231:35:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1358,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1338,
														"src": "16269:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "16231:46:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1360,
												"nodeType": "ExpressionStatement",
												"src": "16231:46:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1362,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1334,
															"src": "16308:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1363,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1336,
															"src": "16315:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1364,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1338,
															"src": "16325:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1361,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1496,
														"src": "16293:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16293:41:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1366,
												"nodeType": "EmitStatement",
												"src": "16288:46:4"
											}
										]
									},
									"documentation": {
										"id": 1332,
										"nodeType": "StructuredDocumentation",
										"src": "15813:205:4",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 1368,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "16033:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "16060:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1368,
												"src": "16052:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16052:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1336,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "16075:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1368,
												"src": "16067:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16067:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "16090:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1368,
												"src": "16085:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1337,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16085:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16051:48:4"
									},
									"returnParameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16117:0:4"
									},
									"scope": 1462,
									"src": "16024:318:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1396,
										"nodeType": "Block",
										"src": "16657:175:4",
										"statements": [
											{
												"assignments": [
													1377
												],
												"declarations": [
													{
														"constant": false,
														"id": 1377,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "16676:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 1396,
														"src": "16668:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1376,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16668:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1381,
												"initialValue": {
													"arguments": [
														{
															"id": 1379,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1371,
															"src": "16693:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1378,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 827,
														"src": "16684:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16684:17:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16668:33:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1382,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1377,
														"src": "16716:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1385,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16733:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1384,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16725:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1383,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16725:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1386,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16725:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16716:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1393,
												"nodeType": "IfStatement",
												"src": "16712:90:4",
												"trueBody": {
													"id": 1392,
													"nodeType": "Block",
													"src": "16737:65:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1389,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1371,
																		"src": "16782:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1388,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 369,
																	"src": "16759:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1390,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16759:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1391,
															"nodeType": "RevertStatement",
															"src": "16752:38:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1394,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1377,
													"src": "16819:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1375,
												"id": 1395,
												"nodeType": "Return",
												"src": "16812:12:4"
											}
										]
									},
									"documentation": {
										"id": 1369,
										"nodeType": "StructuredDocumentation",
										"src": "16350:229:4",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 1397,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "16594:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16616:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "16608:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16608:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16607:17:4"
									},
									"returnParameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "16648:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16648:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16647:9:4"
									},
									"scope": 1462,
									"src": "16585:247:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1460,
										"nodeType": "Block",
										"src": "17484:697:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1409,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1402,
																"src": "17499:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1410,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17502:4:4",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "17499:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1411,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17507:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17499:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1412,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17516:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17499:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1459,
												"nodeType": "IfStatement",
												"src": "17495:679:4",
												"trueBody": {
													"id": 1458,
													"nodeType": "Block",
													"src": "17519:655:4",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1438,
																		"nodeType": "Block",
																		"src": "17634:166:4",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1431,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1427,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1425,
																						"src": "17657:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1428,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1597,
																								"src": "17667:15:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1597_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1429,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "17683:16:4",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1596,
																							"src": "17667:32:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1430,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "17700:8:4",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "17667:41:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "17657:51:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1437,
																				"nodeType": "IfStatement",
																				"src": "17653:132:4",
																				"trueBody": {
																					"id": 1436,
																					"nodeType": "Block",
																					"src": "17710:75:4",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1433,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1402,
																										"src": "17762:2:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1432,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 388,
																									"src": "17740:21:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1434,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17740:25:4",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1435,
																							"nodeType": "RevertStatement",
																							"src": "17733:32:4"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1439,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1426,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1425,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "17626:6:4",
																				"nodeType": "VariableDeclaration",
																				"scope": 1439,
																				"src": "17619:13:4",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1424,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "17619:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17618:15:4"
																	},
																	"src": "17610:190:4"
																},
																{
																	"block": {
																		"id": 1455,
																		"nodeType": "Block",
																		"src": "17829:334:4",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1446,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1443,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1441,
																							"src": "17852:6:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1444,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "17859:6:4",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "17852:13:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1445,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "17869:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "17852:18:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1453,
																					"nodeType": "Block",
																					"src": "17953:195:4",
																					"statements": [
																						{
																							"AST": {
																								"nodeType": "YulBlock",
																								"src": "18041:88:4",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nodeType": "YulLiteral",
																															"src": "18079:2:4",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "18083:6:4"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nodeType": "YulIdentifier",
																														"src": "18075:3:4"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "18075:15:4"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "18098:6:4"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nodeType": "YulIdentifier",
																														"src": "18092:5:4"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "18092:13:4"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nodeType": "YulIdentifier",
																												"src": "18068:6:4"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "18068:38:4"
																										},
																										"nodeType": "YulExpressionStatement",
																										"src": "18068:38:4"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "shanghai",
																							"externalReferences": [
																								{
																									"declaration": 1441,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "18083:6:4",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1441,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "18098:6:4",
																									"valueSize": 1
																								}
																							],
																							"id": 1452,
																							"nodeType": "InlineAssembly",
																							"src": "18032:97:4"
																						}
																					]
																				},
																				"id": 1454,
																				"nodeType": "IfStatement",
																				"src": "17848:300:4",
																				"trueBody": {
																					"id": 1451,
																					"nodeType": "Block",
																					"src": "17872:75:4",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1448,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1402,
																										"src": "17924:2:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1447,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 388,
																									"src": "17902:21:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1449,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17902:25:4",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1450,
																							"nodeType": "RevertStatement",
																							"src": "17895:32:4"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1456,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1442,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1441,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "17821:6:4",
																				"nodeType": "VariableDeclaration",
																				"scope": 1456,
																				"src": "17808:19:4",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1440,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "17808:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17807:21:4"
																	},
																	"src": "17801:362:4"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1418,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1637,
																			"src": "17575:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1419,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17575:12:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1420,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1400,
																		"src": "17589:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1421,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1404,
																		"src": "17595:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1422,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1406,
																		"src": "17604:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1415,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1402,
																				"src": "17554:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1414,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1597,
																			"src": "17538:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1597_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1416,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17538:19:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1597",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17558:16:4",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1596,
																	"src": "17538:36:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1423,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17538:71:4",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1457,
															"nodeType": "TryStatement",
															"src": "17534:629:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1398,
										"nodeType": "StructuredDocumentation",
										"src": "16840:536:4",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"
									},
									"id": 1461,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "17391:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "17422:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "17414:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17414:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "17436:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "17428:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17428:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "17448:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "17440:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17440:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "17470:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "17457:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1405,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17457:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17413:62:4"
									},
									"returnParameters": {
										"id": 1408,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17484:0:4"
									},
									"scope": 1462,
									"src": "17382:799:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1463,
							"src": "794:17390:4",
							"usedErrors": [
								364,
								369,
								378,
								383,
								388,
								395,
								400,
								405
							],
							"usedEvents": [
								1478,
								1487,
								1496
							]
						}
					],
					"src": "110:18076:4"
				},
				"id": 4
			},
			"openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							1938
						],
						"IERC721": [
							1579
						]
					},
					"id": 1580,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1464,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "111:24:5"
						},
						{
							"absolutePath": "openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1466,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1580,
							"sourceUnit": 1939,
							"src": "139:62:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1465,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1938,
										"src": "147:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1468,
										"name": "IERC165",
										"nameLocations": [
											"297:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1938,
										"src": "297:7:5"
									},
									"id": 1469,
									"nodeType": "InheritanceSpecifier",
									"src": "297:7:5"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1467,
								"nodeType": "StructuredDocumentation",
								"src": "205:69:5",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1579,
							"linearizedBaseContracts": [
								1579,
								1938
							],
							"name": "IERC721",
							"nameLocation": "286:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1470,
										"nodeType": "StructuredDocumentation",
										"src": "312:90:5",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1478,
									"name": "Transfer",
									"nameLocation": "414:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1472,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "439:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "423:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "423:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1474,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "461:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "445:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1476,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "481:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "465:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "465:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "422:67:5"
									},
									"src": "408:82:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1479,
										"nodeType": "StructuredDocumentation",
										"src": "498:96:5",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1487,
									"name": "Approval",
									"nameLocation": "606:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1481,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "631:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "615:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "615:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1483,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "654:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "638:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "638:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1485,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "680:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "664:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "664:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "614:74:5"
									},
									"src": "600:89:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1488,
										"nodeType": "StructuredDocumentation",
										"src": "697:119:5",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1496,
									"name": "ApprovalForAll",
									"nameLocation": "828:14:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1490,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "859:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1496,
												"src": "843:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1489,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "843:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1492,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "882:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1496,
												"src": "866:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "866:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1494,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "897:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1496,
												"src": "892:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1493,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "892:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "842:64:5"
									},
									"src": "822:85:5"
								},
								{
									"documentation": {
										"id": 1497,
										"nodeType": "StructuredDocumentation",
										"src": "915:78:5",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1504,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1008:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1499,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1026:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1504,
												"src": "1018:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1498,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:15:5"
									},
									"returnParameters": {
										"id": 1503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1502,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1064:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1504,
												"src": "1056:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1056:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1055:17:5"
									},
									"scope": 1579,
									"src": "999:74:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1505,
										"nodeType": "StructuredDocumentation",
										"src": "1081:137:5",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1512,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1233:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1507,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1249:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1512,
												"src": "1241:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1241:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:17:5"
									},
									"returnParameters": {
										"id": 1511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1510,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1289:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1512,
												"src": "1281:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1281:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1280:15:5"
									},
									"scope": 1579,
									"src": "1224:72:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1513,
										"nodeType": "StructuredDocumentation",
										"src": "1304:578:5",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1524,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1897:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1515,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1922:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "1914:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1514,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1914:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1517,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1936:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "1928:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1928:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1519,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1948:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "1940:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1940:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1521,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1972:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "1957:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1520,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1957:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1913:64:5"
									},
									"returnParameters": {
										"id": 1523,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1986:0:5"
									},
									"scope": 1579,
									"src": "1888:99:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1525,
										"nodeType": "StructuredDocumentation",
										"src": "1995:720:5",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1534,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2730:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1527,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2755:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "2747:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2747:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1529,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2769:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "2761:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2761:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1531,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2781:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "2773:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2773:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:43:5"
									},
									"returnParameters": {
										"id": 1533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2798:0:5"
									},
									"scope": 1579,
									"src": "2721:78:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1535,
										"nodeType": "StructuredDocumentation",
										"src": "2807:747:5",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1544,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3569:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1537,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3590:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1544,
												"src": "3582:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1536,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3582:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1539,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3604:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1544,
												"src": "3596:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1538,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3596:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1541,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3616:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1544,
												"src": "3608:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1540,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3608:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3581:43:5"
									},
									"returnParameters": {
										"id": 1543,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3633:0:5"
									},
									"scope": 1579,
									"src": "3560:74:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1545,
										"nodeType": "StructuredDocumentation",
										"src": "3642:464:5",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1552,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4121:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1547,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4137:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "4129:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4129:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1549,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4149:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "4141:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4141:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4128:29:5"
									},
									"returnParameters": {
										"id": 1551,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4166:0:5"
									},
									"scope": 1579,
									"src": "4112:55:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1553,
										"nodeType": "StructuredDocumentation",
										"src": "4175:324:5",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1560,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4514:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1555,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4540:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1560,
												"src": "4532:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1554,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4532:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4555:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1560,
												"src": "4550:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1556,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4550:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4531:33:5"
									},
									"returnParameters": {
										"id": 1559,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4573:0:5"
									},
									"scope": 1579,
									"src": "4505:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1561,
										"nodeType": "StructuredDocumentation",
										"src": "4582:145:5",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1568,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4742:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1563,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4762:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "4754:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4754:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4753:17:5"
									},
									"returnParameters": {
										"id": 1567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4802:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "4794:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1565,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4794:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4793:18:5"
									},
									"scope": 1579,
									"src": "4733:79:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1569,
										"nodeType": "StructuredDocumentation",
										"src": "4820:142:5",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1578,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4977:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1571,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5002:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1578,
												"src": "4994:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1570,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4994:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1573,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5017:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1578,
												"src": "5009:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5009:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4993:33:5"
									},
									"returnParameters": {
										"id": 1577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1576,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1578,
												"src": "5050:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1575,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5050:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5049:6:5"
									},
									"scope": 1579,
									"src": "4968:88:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1580,
							"src": "276:4783:5",
							"usedErrors": [],
							"usedEvents": [
								1478,
								1487,
								1496
							]
						}
					],
					"src": "111:4950:5"
				},
				"id": 5
			},
			"openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1597
						]
					},
					"id": 1598,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1581,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "119:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1582,
								"nodeType": "StructuredDocumentation",
								"src": "147:156:6",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1597,
							"linearizedBaseContracts": [
								1597
							],
							"name": "IERC721Receiver",
							"nameLocation": "315:15:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1583,
										"nodeType": "StructuredDocumentation",
										"src": "338:509:6",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1596,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "862:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1585,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "897:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1596,
												"src": "889:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1584,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1587,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "924:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1596,
												"src": "916:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "916:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1589,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "947:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1596,
												"src": "939:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "939:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1591,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "980:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1596,
												"src": "965:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1590,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "965:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "878:113:6"
									},
									"returnParameters": {
										"id": 1595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1594,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1596,
												"src": "1010:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1593,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1010:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1009:8:6"
									},
									"scope": 1597,
									"src": "853:165:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1598,
							"src": "305:716:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "119:904:6"
				},
				"id": 6
			},
			"openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC721": [
							1579
						],
						"IERC721Metadata": [
							1625
						]
					},
					"id": 1626,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1599,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "130:24:7"
						},
						{
							"absolutePath": "openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1601,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1626,
							"sourceUnit": 1580,
							"src": "158:39:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1600,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1579,
										"src": "166:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1603,
										"name": "IERC721",
										"nameLocations": [
											"368:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1579,
										"src": "368:7:7"
									},
									"id": 1604,
									"nodeType": "InheritanceSpecifier",
									"src": "368:7:7"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1602,
								"nodeType": "StructuredDocumentation",
								"src": "201:136:7",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1625,
							"linearizedBaseContracts": [
								1625,
								1579,
								1938
							],
							"name": "IERC721Metadata",
							"nameLocation": "349:15:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1605,
										"nodeType": "StructuredDocumentation",
										"src": "383:60:7",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1610,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "458:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1606,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "462:2:7"
									},
									"returnParameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1608,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "488:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1607,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "488:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "487:15:7"
									},
									"scope": 1625,
									"src": "449:54:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1611,
										"nodeType": "StructuredDocumentation",
										"src": "511:62:7",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1616,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "588:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1612,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "594:2:7"
									},
									"returnParameters": {
										"id": 1615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1614,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1616,
												"src": "620:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1613,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "620:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "619:15:7"
									},
									"scope": 1625,
									"src": "579:56:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1617,
										"nodeType": "StructuredDocumentation",
										"src": "643:92:7",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1624,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "750:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1619,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "767:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1624,
												"src": "759:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1618,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "759:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "758:17:7"
									},
									"returnParameters": {
										"id": 1623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1622,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1624,
												"src": "799:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1621,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "799:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "798:15:7"
									},
									"scope": 1625,
									"src": "741:73:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1626,
							"src": "339:478:7",
							"usedErrors": [],
							"usedEvents": [
								1478,
								1487,
								1496
							]
						}
					],
					"src": "130:689:7"
				},
				"id": 7
			},
			"openzeppelin-contracts/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "openzeppelin-contracts/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1647
						]
					},
					"id": 1648,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1627,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "104:24:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1628,
								"nodeType": "StructuredDocumentation",
								"src": "132:505:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1647,
							"linearizedBaseContracts": [
								1647
							],
							"name": "Context",
							"nameLocation": "657:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1636,
										"nodeType": "Block",
										"src": "734:36:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1633,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "752:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "756:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "752:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1632,
												"id": 1635,
												"nodeType": "Return",
												"src": "745:17:8"
											}
										]
									},
									"id": 1637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "681:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1629,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "691:2:8"
									},
									"returnParameters": {
										"id": 1632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1631,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1637,
												"src": "725:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1630,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "725:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "724:9:8"
									},
									"scope": 1647,
									"src": "672:98:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1645,
										"nodeType": "Block",
										"src": "845:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1642,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "863:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "867:4:8",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "863:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1641,
												"id": 1644,
												"nodeType": "Return",
												"src": "856:15:8"
											}
										]
									},
									"id": 1646,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "787:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1638,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:8"
									},
									"returnParameters": {
										"id": 1641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1640,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "829:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1639,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "829:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "828:16:8"
									},
									"scope": 1647,
									"src": "778:101:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1648,
							"src": "639:243:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "104:780:8"
				},
				"id": 8
			},
			"openzeppelin-contracts/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "openzeppelin-contracts/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							2992
						],
						"SignedMath": [
							3097
						],
						"Strings": [
							1902
						]
					},
					"id": 1903,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1649,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "104:24:9"
						},
						{
							"absolutePath": "openzeppelin-contracts/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1651,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1903,
							"sourceUnit": 2993,
							"src": "132:37:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1650,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2992,
										"src": "140:4:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1653,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1903,
							"sourceUnit": 3098,
							"src": "171:49:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1652,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3097,
										"src": "179:10:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1654,
								"nodeType": "StructuredDocumentation",
								"src": "224:36:9",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1902,
							"linearizedBaseContracts": [
								1902
							],
							"name": "Strings",
							"nameLocation": "270:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1657,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "310:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 1902,
									"src": "285:56:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1655,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "285:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1656,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "323:18:9",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1660,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "371:14:9",
									"nodeType": "VariableDeclaration",
									"scope": 1902,
									"src": "348:42:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1658,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "348:5:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1659,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "388:2:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1661,
										"nodeType": "StructuredDocumentation",
										"src": "399:83:9",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1667,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "494:28:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1663,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "531:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1667,
												"src": "523:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1662,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "523:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1665,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "546:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1667,
												"src": "538:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1664,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "538:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "522:31:9"
									},
									"src": "488:66:9"
								},
								{
									"body": {
										"id": 1714,
										"nodeType": "Block",
										"src": "731:647:9",
										"statements": [
											{
												"id": 1713,
												"nodeType": "UncheckedBlock",
												"src": "742:629:9",
												"statements": [
													{
														"assignments": [
															1676
														],
														"declarations": [
															{
																"constant": false,
																"id": 1676,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "775:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 1713,
																"src": "767:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1675,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "767:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1683,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1682,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1679,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1670,
																		"src": "795:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1677,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2992,
																		"src": "784:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2992_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1678,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "789:5:9",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2812,
																	"src": "784:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1680,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "784:17:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1681,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "804:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "784:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "767:38:9"
													},
													{
														"assignments": [
															1685
														],
														"declarations": [
															{
																"constant": false,
																"id": 1685,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "834:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 1713,
																"src": "820:20:9",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1684,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "820:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1690,
														"initialValue": {
															"arguments": [
																{
																	"id": 1688,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1676,
																	"src": "854:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1687,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "843:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1686,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "847:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1689,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "843:18:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "820:41:9"
													},
													{
														"assignments": [
															1692
														],
														"declarations": [
															{
																"constant": false,
																"id": 1692,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "884:3:9",
																"nodeType": "VariableDeclaration",
																"scope": 1713,
																"src": "876:11:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1691,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "876:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1693,
														"nodeType": "VariableDeclarationStatement",
														"src": "876:11:9"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "959:69:9",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "978:35:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nodeType": "YulIdentifier",
																				"src": "989:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1001:2:9",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "1005:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "997:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "997:15:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "985:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "985:28:9"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nodeType": "YulIdentifier",
																			"src": "978:3:9"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1685,
																"isOffset": false,
																"isSlot": false,
																"src": "989:6:9",
																"valueSize": 1
															},
															{
																"declaration": 1676,
																"isOffset": false,
																"isSlot": false,
																"src": "1005:6:9",
																"valueSize": 1
															},
															{
																"declaration": 1692,
																"isOffset": false,
																"isSlot": false,
																"src": "978:3:9",
																"valueSize": 1
															}
														],
														"id": 1694,
														"nodeType": "InlineAssembly",
														"src": "950:78:9"
													},
													{
														"body": {
															"id": 1709,
															"nodeType": "Block",
															"src": "1055:277:9",
															"statements": [
																{
																	"expression": {
																		"id": 1697,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1074:5:9",
																		"subExpression": {
																			"id": 1696,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1692,
																			"src": "1074:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1698,
																	"nodeType": "ExpressionStatement",
																	"src": "1074:5:9"
																},
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "1159:88:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "1190:3:9"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "1204:5:9"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "1211:2:9",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nodeType": "YulIdentifier",
																										"src": "1200:3:9"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1200:14:9"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nodeType": "YulIdentifier",
																									"src": "1216:10:9"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nodeType": "YulIdentifier",
																								"src": "1195:4:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1195:32:9"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nodeType": "YulIdentifier",
																						"src": "1182:7:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1182:46:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1182:46:9"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "shanghai",
																	"externalReferences": [
																		{
																			"declaration": 1657,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1216:10:9",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1692,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1190:3:9",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1670,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1204:5:9",
																			"valueSize": 1
																		}
																	],
																	"id": 1699,
																	"nodeType": "InlineAssembly",
																	"src": "1150:97:9"
																},
																{
																	"expression": {
																		"id": 1702,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1700,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1670,
																			"src": "1265:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1701,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1274:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1265:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1703,
																	"nodeType": "ExpressionStatement",
																	"src": "1265:11:9"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1706,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1704,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1670,
																			"src": "1299:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1705,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1308:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1299:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1708,
																	"nodeType": "IfStatement",
																	"src": "1295:21:9",
																	"trueBody": {
																		"id": 1707,
																		"nodeType": "Break",
																		"src": "1311:5:9"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1695,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1049:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1710,
														"nodeType": "WhileStatement",
														"src": "1042:290:9"
													},
													{
														"expression": {
															"id": 1711,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1685,
															"src": "1353:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1674,
														"id": 1712,
														"nodeType": "Return",
														"src": "1346:13:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1668,
										"nodeType": "StructuredDocumentation",
										"src": "562:92:9",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1715,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "669:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1670,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "686:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1715,
												"src": "678:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "678:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "677:15:9"
									},
									"returnParameters": {
										"id": 1674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1673,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1715,
												"src": "716:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1672,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "716:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "715:15:9"
									},
									"scope": 1902,
									"src": "660:718:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1740,
										"nodeType": "Block",
										"src": "1559:94:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1726,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1718,
																	"src": "1591:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1727,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1599:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1591:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1730,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1609:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1731,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1591:20:9",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1729,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1603:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1735,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1718,
																			"src": "1637:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1733,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3097,
																			"src": "1622:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$3097_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1734,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1633:3:9",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3096,
																		"src": "1622:14:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1736,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1622:21:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1732,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1715,
																"src": "1613:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1737,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1613:31:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1724,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1577:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1723,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1577:6:9",
																"typeDescriptions": {}
															}
														},
														"id": 1725,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1584:6:9",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1577:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1577:68:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1722,
												"id": 1739,
												"nodeType": "Return",
												"src": "1570:75:9"
											}
										]
									},
									"documentation": {
										"id": 1716,
										"nodeType": "StructuredDocumentation",
										"src": "1386:91:9",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1741,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1492:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1718,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1514:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1741,
												"src": "1507:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1717,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1507:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1506:14:9"
									},
									"returnParameters": {
										"id": 1722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1721,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1741,
												"src": "1544:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1720,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1544:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1543:15:9"
									},
									"scope": 1902,
									"src": "1483:170:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1760,
										"nodeType": "Block",
										"src": "1837:104:9",
										"statements": [
											{
												"id": 1759,
												"nodeType": "UncheckedBlock",
												"src": "1848:86:9",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1750,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1744,
																	"src": "1892:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1756,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1753,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1744,
																				"src": "1911:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1751,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2992,
																				"src": "1899:4:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$2992_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1752,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1904:6:9",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2934,
																			"src": "1899:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1754,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1899:18:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1755,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1920:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1899:22:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1749,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1761,
																	1844,
																	1864
																],
																"referencedDeclaration": 1844,
																"src": "1880:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1757,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1880:42:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1748,
														"id": 1758,
														"nodeType": "Return",
														"src": "1873:49:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1742,
										"nodeType": "StructuredDocumentation",
										"src": "1661:96:9",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1761,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1772:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1744,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1792:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "1784:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1784:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1783:15:9"
									},
									"returnParameters": {
										"id": 1748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1747,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "1822:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1746,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1822:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1821:15:9"
									},
									"scope": 1902,
									"src": "1763:178:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1843,
										"nodeType": "Block",
										"src": "2159:448:9",
										"statements": [
											{
												"assignments": [
													1772
												],
												"declarations": [
													{
														"constant": false,
														"id": 1772,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2178:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1843,
														"src": "2170:18:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1771,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2170:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1774,
												"initialValue": {
													"id": 1773,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1764,
													"src": "2191:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2170:26:9"
											},
											{
												"assignments": [
													1776
												],
												"declarations": [
													{
														"constant": false,
														"id": 1776,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2220:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1843,
														"src": "2207:19:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1775,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2207:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1785,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1783,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1781,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1779,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2239:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1780,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1766,
																	"src": "2243:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2239:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1782,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2252:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2239:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1778,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2229:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1777,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2233:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2229:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2207:47:9"
											},
											{
												"expression": {
													"id": 1790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1786,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1776,
															"src": "2265:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1788,
														"indexExpression": {
															"hexValue": "30",
															"id": 1787,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2272:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2265:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1789,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2277:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2265:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1791,
												"nodeType": "ExpressionStatement",
												"src": "2265:15:9"
											},
											{
												"expression": {
													"id": 1796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1792,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1776,
															"src": "2291:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1794,
														"indexExpression": {
															"hexValue": "31",
															"id": 1793,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2298:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2291:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1795,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2303:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2291:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1797,
												"nodeType": "ExpressionStatement",
												"src": "2291:15:9"
											},
											{
												"body": {
													"id": 1826,
													"nodeType": "Block",
													"src": "2362:98:9",
													"statements": [
														{
															"expression": {
																"id": 1820,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1812,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1776,
																		"src": "2377:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1814,
																	"indexExpression": {
																		"id": 1813,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1799,
																		"src": "2384:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2377:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1815,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1657,
																		"src": "2389:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1819,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1818,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1816,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1772,
																			"src": "2400:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1817,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2413:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2400:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2389:28:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2377:40:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1821,
															"nodeType": "ExpressionStatement",
															"src": "2377:40:9"
														},
														{
															"expression": {
																"id": 1824,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1822,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1772,
																	"src": "2432:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1823,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2447:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2432:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1825,
															"nodeType": "ExpressionStatement",
															"src": "2432:16:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1806,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1799,
														"src": "2350:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1807,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2354:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2350:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1827,
												"initializationExpression": {
													"assignments": [
														1799
													],
													"declarations": [
														{
															"constant": false,
															"id": 1799,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2330:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 1827,
															"src": "2322:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1798,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2322:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1805,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1804,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1800,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2334:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1801,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1766,
																"src": "2338:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2334:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1803,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2347:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2334:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2322:26:9"
												},
												"loopExpression": {
													"expression": {
														"id": 1810,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2357:3:9",
														"subExpression": {
															"id": 1809,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1799,
															"src": "2359:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1811,
													"nodeType": "ExpressionStatement",
													"src": "2357:3:9"
												},
												"nodeType": "ForStatement",
												"src": "2317:143:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1828,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1772,
														"src": "2474:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1829,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2488:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2474:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1837,
												"nodeType": "IfStatement",
												"src": "2470:98:9",
												"trueBody": {
													"id": 1836,
													"nodeType": "Block",
													"src": "2491:77:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1832,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1764,
																		"src": "2542:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1833,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1766,
																		"src": "2549:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1831,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1667,
																	"src": "2513:28:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 1834,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2513:43:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1835,
															"nodeType": "RevertStatement",
															"src": "2506:50:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1840,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1776,
															"src": "2592:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1839,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2585:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1838,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2585:6:9",
															"typeDescriptions": {}
														}
													},
													"id": 1841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2585:14:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1770,
												"id": 1842,
												"nodeType": "Return",
												"src": "2578:21:9"
											}
										]
									},
									"documentation": {
										"id": 1762,
										"nodeType": "StructuredDocumentation",
										"src": "1949:114:9",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1844,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2078:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1764,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2098:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "2090:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1763,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2090:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1766,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2113:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "2105:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1765,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2105:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2089:31:9"
									},
									"returnParameters": {
										"id": 1770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1769,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "2144:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1768,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2144:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2143:15:9"
									},
									"scope": 1902,
									"src": "2069:538:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1863,
										"nodeType": "Block",
										"src": "2845:77:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1857,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1847,
																			"src": "2891:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1856,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2883:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1855,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2883:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1858,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2883:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1854,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2875:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1853,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2875:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1859,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2875:22:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1860,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1660,
															"src": "2899:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1852,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1761,
															1844,
															1864
														],
														"referencedDeclaration": 1844,
														"src": "2863:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2863:51:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1851,
												"id": 1862,
												"nodeType": "Return",
												"src": "2856:58:9"
											}
										]
									},
									"documentation": {
										"id": 1845,
										"nodeType": "StructuredDocumentation",
										"src": "2615:151:9",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 1864,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2781:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1847,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2801:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1864,
												"src": "2793:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2793:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2792:14:9"
									},
									"returnParameters": {
										"id": 1851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1850,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1864,
												"src": "2830:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1849,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2830:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2829:15:9"
									},
									"scope": 1902,
									"src": "2772:150:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1900,
										"nodeType": "Block",
										"src": "3082:106:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1884,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1876,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1867,
																		"src": "3106:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1875,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3100:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1874,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3100:5:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1877,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3100:8:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1878,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3109:6:9",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3100:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1881,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1869,
																		"src": "3125:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1880,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3119:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1879,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3119:5:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1882,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3119:8:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1883,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3128:6:9",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3119:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3100:34:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1897,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1888,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1867,
																			"src": "3154:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1887,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3148:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1886,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3148:5:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1889,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3148:8:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1885,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3138:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1890,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3138:19:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1894,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1869,
																			"src": "3177:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1893,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3171:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1892,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3171:5:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1895,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3171:8:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1891,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3161:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1896,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3161:19:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3138:42:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3100:80:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1873,
												"id": 1899,
												"nodeType": "Return",
												"src": "3093:87:9"
											}
										]
									},
									"documentation": {
										"id": 1865,
										"nodeType": "StructuredDocumentation",
										"src": "2930:68:9",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1901,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "3013:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1867,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3033:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1901,
												"src": "3019:15:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1866,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3019:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1869,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3050:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1901,
												"src": "3036:15:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1868,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3036:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3018:34:9"
									},
									"returnParameters": {
										"id": 1873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1872,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1901,
												"src": "3076:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1871,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3076:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3075:6:9"
									},
									"scope": 1902,
									"src": "3004:184:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1903,
							"src": "262:2929:9",
							"usedErrors": [
								1667
							],
							"usedEvents": []
						}
					],
					"src": "104:3089:9"
				},
				"id": 9
			},
			"openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1926
						],
						"IERC165": [
							1938
						]
					},
					"id": 1927,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1904,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "117:24:10"
						},
						{
							"absolutePath": "openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1906,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1927,
							"sourceUnit": 1939,
							"src": "145:38:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1905,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1938,
										"src": "153:7:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1908,
										"name": "IERC165",
										"nameLocations": [
											"706:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1938,
										"src": "706:7:10"
									},
									"id": 1909,
									"nodeType": "InheritanceSpecifier",
									"src": "706:7:10"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1907,
								"nodeType": "StructuredDocumentation",
								"src": "187:489:10",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1926,
							"linearizedBaseContracts": [
								1926,
								1938
							],
							"name": "ERC165",
							"nameLocation": "696:6:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1937
									],
									"body": {
										"id": 1924,
										"nodeType": "Block",
										"src": "867:66:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1917,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1912,
														"src": "885:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1919,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1938,
																	"src": "905:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1938_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1938_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1918,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "900:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1920,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "900:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1938",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1921,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "914:11:10",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "900:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "885:40:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1916,
												"id": 1923,
												"nodeType": "Return",
												"src": "878:47:10"
											}
										]
									},
									"documentation": {
										"id": 1910,
										"nodeType": "StructuredDocumentation",
										"src": "721:58:10",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1925,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "794:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1912,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "819:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1925,
												"src": "812:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1911,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "812:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "811:20:10"
									},
									"returnParameters": {
										"id": 1916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1915,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1925,
												"src": "861:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1914,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:10"
									},
									"scope": 1926,
									"src": "785:148:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1927,
							"src": "678:258:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "117:821:10"
				},
				"id": 10
			},
			"openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1938
						]
					},
					"id": 1939,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1928,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "118:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1929,
								"nodeType": "StructuredDocumentation",
								"src": "146:287:11",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1938,
							"linearizedBaseContracts": [
								1938
							],
							"name": "IERC165",
							"nameLocation": "445:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1930,
										"nodeType": "StructuredDocumentation",
										"src": "460:347:11",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1937,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "822:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1932,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "847:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1937,
												"src": "840:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1931,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "840:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "839:20:11"
									},
									"returnParameters": {
										"id": 1936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1935,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1937,
												"src": "883:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1934,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "883:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "882:6:11"
									},
									"scope": 1938,
									"src": "813:76:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1939,
							"src": "435:457:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "118:776:11"
				},
				"id": 11
			},
			"openzeppelin-contracts/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "openzeppelin-contracts/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2992
						]
					},
					"id": 2993,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1940,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1941,
								"nodeType": "StructuredDocumentation",
								"src": "134:75:12",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2992,
							"linearizedBaseContracts": [
								2992
							],
							"name": "Math",
							"nameLocation": "219:4:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1942,
										"nodeType": "StructuredDocumentation",
										"src": "231:52:12",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 1944,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "295:20:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1943,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "315:2:12"
									},
									"src": "289:29:12"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 1949,
									"members": [
										{
											"id": 1945,
											"name": "Floor",
											"nameLocation": "351:5:12",
											"nodeType": "EnumValue",
											"src": "351:5:12"
										},
										{
											"id": 1946,
											"name": "Ceil",
											"nameLocation": "395:4:12",
											"nodeType": "EnumValue",
											"src": "395:4:12"
										},
										{
											"id": 1947,
											"name": "Trunc",
											"nameLocation": "438:5:12",
											"nodeType": "EnumValue",
											"src": "438:5:12"
										},
										{
											"id": 1948,
											"name": "Expand",
											"nameLocation": "469:6:12",
											"nodeType": "EnumValue",
											"src": "469:6:12"
										}
									],
									"name": "Rounding",
									"nameLocation": "331:8:12",
									"nodeType": "EnumDefinition",
									"src": "326:174:12"
								},
								{
									"body": {
										"id": 1980,
										"nodeType": "Block",
										"src": "685:146:12",
										"statements": [
											{
												"id": 1979,
												"nodeType": "UncheckedBlock",
												"src": "696:128:12",
												"statements": [
													{
														"assignments": [
															1962
														],
														"declarations": [
															{
																"constant": false,
																"id": 1962,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "729:1:12",
																"nodeType": "VariableDeclaration",
																"scope": 1979,
																"src": "721:9:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1961,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "721:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1966,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1965,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1963,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1952,
																"src": "733:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1964,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1954,
																"src": "737:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "733:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "721:17:12"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1969,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1967,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1962,
																"src": "757:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1968,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1952,
																"src": "761:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "757:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1974,
														"nodeType": "IfStatement",
														"src": "753:28:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1970,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "772:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1971,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "779:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1972,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "771:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1960,
															"id": 1973,
															"nodeType": "Return",
															"src": "764:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1975,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "804:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1976,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1962,
																	"src": "810:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1977,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "803:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1960,
														"id": 1978,
														"nodeType": "Return",
														"src": "796:16:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1950,
										"nodeType": "StructuredDocumentation",
										"src": "508:95:12",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 1981,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "618:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1952,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "633:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1981,
												"src": "625:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1951,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "625:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1954,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "644:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1981,
												"src": "636:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "624:22:12"
									},
									"returnParameters": {
										"id": 1960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1957,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1981,
												"src": "670:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1956,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "670:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1959,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1981,
												"src": "676:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1958,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "676:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "669:15:12"
									},
									"scope": 2992,
									"src": "609:222:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2008,
										"nodeType": "Block",
										"src": "1019:118:12",
										"statements": [
											{
												"id": 2007,
												"nodeType": "UncheckedBlock",
												"src": "1030:100:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1995,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1993,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1986,
																"src": "1059:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1994,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1984,
																"src": "1063:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1059:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2000,
														"nodeType": "IfStatement",
														"src": "1055:28:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1996,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1074:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1997,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1081:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1998,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1073:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1992,
															"id": 1999,
															"nodeType": "Return",
															"src": "1066:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2001,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1106:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2004,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2002,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1984,
																		"src": "1112:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2003,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1986,
																		"src": "1116:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1112:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2005,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1105:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1992,
														"id": 2006,
														"nodeType": "Return",
														"src": "1098:20:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1982,
										"nodeType": "StructuredDocumentation",
										"src": "839:98:12",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 2009,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "952:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1984,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "967:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2009,
												"src": "959:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1986,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "978:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2009,
												"src": "970:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1985,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:22:12"
									},
									"returnParameters": {
										"id": 1992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1989,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2009,
												"src": "1004:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1988,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1004:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1991,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2009,
												"src": "1010:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1990,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1010:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1003:15:12"
									},
									"scope": 2992,
									"src": "943:194:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2050,
										"nodeType": "Block",
										"src": "1328:427:12",
										"statements": [
											{
												"id": 2049,
												"nodeType": "UncheckedBlock",
												"src": "1339:409:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2023,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2021,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2012,
																"src": "1601:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2022,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1606:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1601:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2028,
														"nodeType": "IfStatement",
														"src": "1597:28:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 2024,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1617:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 2025,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1623:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2026,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1616:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2020,
															"id": 2027,
															"nodeType": "Return",
															"src": "1609:16:12"
														}
													},
													{
														"assignments": [
															2030
														],
														"declarations": [
															{
																"constant": false,
																"id": 2030,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1648:1:12",
																"nodeType": "VariableDeclaration",
																"scope": 2049,
																"src": "1640:9:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2029,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1640:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2034,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2033,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2031,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2012,
																"src": "1652:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2032,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2014,
																"src": "1656:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1652:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1640:17:12"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2039,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2037,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2035,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2030,
																	"src": "1676:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2036,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2012,
																	"src": "1680:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1676:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2038,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2014,
																"src": "1685:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1676:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2044,
														"nodeType": "IfStatement",
														"src": "1672:33:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2040,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1696:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2041,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1703:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2042,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1695:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2020,
															"id": 2043,
															"nodeType": "Return",
															"src": "1688:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2045,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1728:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2046,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2030,
																	"src": "1734:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2047,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1727:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2020,
														"id": 2048,
														"nodeType": "Return",
														"src": "1720:16:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2010,
										"nodeType": "StructuredDocumentation",
										"src": "1145:101:12",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 2051,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1261:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2012,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1276:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2051,
												"src": "1268:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1268:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2014,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1287:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2051,
												"src": "1279:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2013,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1279:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:22:12"
									},
									"returnParameters": {
										"id": 2020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2017,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2051,
												"src": "1313:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2016,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1313:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2019,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2051,
												"src": "1319:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2018,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1319:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1312:15:12"
									},
									"scope": 2992,
									"src": "1252:503:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2078,
										"nodeType": "Block",
										"src": "1947:119:12",
										"statements": [
											{
												"id": 2077,
												"nodeType": "UncheckedBlock",
												"src": "1958:101:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2065,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2063,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2056,
																"src": "1987:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2064,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1992:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1987:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2070,
														"nodeType": "IfStatement",
														"src": "1983:29:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2066,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2003:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2067,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2010:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2068,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2002:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2062,
															"id": 2069,
															"nodeType": "Return",
															"src": "1995:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2071,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2035:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2074,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2072,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2054,
																		"src": "2041:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2073,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2056,
																		"src": "2045:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2041:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2075,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2034:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2062,
														"id": 2076,
														"nodeType": "Return",
														"src": "2027:20:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2052,
										"nodeType": "StructuredDocumentation",
										"src": "1763:102:12",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 2079,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1880:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2054,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1895:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2079,
												"src": "1887:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1887:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2056,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1906:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2079,
												"src": "1898:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2055,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1898:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1886:22:12"
									},
									"returnParameters": {
										"id": 2062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2059,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2079,
												"src": "1932:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2058,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1932:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2061,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2079,
												"src": "1938:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2060,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1938:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1931:15:12"
									},
									"scope": 2992,
									"src": "1871:195:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2106,
										"nodeType": "Block",
										"src": "2268:119:12",
										"statements": [
											{
												"id": 2105,
												"nodeType": "UncheckedBlock",
												"src": "2279:101:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2093,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2091,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2084,
																"src": "2308:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2092,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2313:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2308:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2098,
														"nodeType": "IfStatement",
														"src": "2304:29:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2094,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2324:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2095,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2331:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2096,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2323:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2090,
															"id": 2097,
															"nodeType": "Return",
															"src": "2316:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2099,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2356:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2102,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2100,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2082,
																		"src": "2362:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2101,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2084,
																		"src": "2366:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2362:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2103,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2355:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2090,
														"id": 2104,
														"nodeType": "Return",
														"src": "2348:20:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2080,
										"nodeType": "StructuredDocumentation",
										"src": "2074:112:12",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 2107,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2201:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2085,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2082,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2216:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2107,
												"src": "2208:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2081,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2208:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2084,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2227:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2107,
												"src": "2219:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2083,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2219:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2207:22:12"
									},
									"returnParameters": {
										"id": 2090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2087,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2107,
												"src": "2253:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2086,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2253:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2089,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2107,
												"src": "2259:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2088,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2259:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2252:15:12"
									},
									"scope": 2992,
									"src": "2192:195:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2124,
										"nodeType": "Block",
										"src": "2529:39:12",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2119,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2117,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2110,
															"src": "2547:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2118,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2112,
															"src": "2551:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2547:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2121,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2112,
														"src": "2559:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2547:13:12",
													"trueExpression": {
														"id": 2120,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2110,
														"src": "2555:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2116,
												"id": 2123,
												"nodeType": "Return",
												"src": "2540:20:12"
											}
										]
									},
									"documentation": {
										"id": 2108,
										"nodeType": "StructuredDocumentation",
										"src": "2395:61:12",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2471:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2110,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2483:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2125,
												"src": "2475:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2475:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2112,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2494:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2125,
												"src": "2486:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2486:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2474:22:12"
									},
									"returnParameters": {
										"id": 2116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2115,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2125,
												"src": "2520:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2520:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2519:9:12"
									},
									"scope": 2992,
									"src": "2462:106:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2142,
										"nodeType": "Block",
										"src": "2711:39:12",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2137,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2135,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2128,
															"src": "2729:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2136,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2130,
															"src": "2733:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2729:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2139,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2130,
														"src": "2741:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2729:13:12",
													"trueExpression": {
														"id": 2138,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2128,
														"src": "2737:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2134,
												"id": 2141,
												"nodeType": "Return",
												"src": "2722:20:12"
											}
										]
									},
									"documentation": {
										"id": 2126,
										"nodeType": "StructuredDocumentation",
										"src": "2576:62:12",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2143,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2653:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2128,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2665:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2143,
												"src": "2657:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2657:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2130,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2676:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2143,
												"src": "2668:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2656:22:12"
									},
									"returnParameters": {
										"id": 2134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2133,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2143,
												"src": "2702:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2702:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2701:9:12"
									},
									"scope": 2992,
									"src": "2644:106:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2165,
										"nodeType": "Block",
										"src": "2940:85:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2153,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2146,
																	"src": "2997:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2154,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2148,
																	"src": "3001:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2997:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2156,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2996:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2162,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2159,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2157,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2146,
																		"src": "3007:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2158,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2148,
																		"src": "3011:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3007:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2160,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3006:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2161,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3016:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "3006:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2996:21:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2152,
												"id": 2164,
												"nodeType": "Return",
												"src": "2989:28:12"
											}
										]
									},
									"documentation": {
										"id": 2144,
										"nodeType": "StructuredDocumentation",
										"src": "2758:105:12",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2166,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2878:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2146,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2894:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2166,
												"src": "2886:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2886:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2148,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2905:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2166,
												"src": "2897:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2897:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2885:22:12"
									},
									"returnParameters": {
										"id": 2152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2151,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2166,
												"src": "2931:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2931:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2930:9:12"
									},
									"scope": 2992,
									"src": "2869:156:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2199,
										"nodeType": "Block",
										"src": "3325:268:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2176,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2171,
														"src": "3340:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2177,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3345:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3340:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2184,
												"nodeType": "IfStatement",
												"src": "3336:130:12",
												"trueBody": {
													"id": 2183,
													"nodeType": "Block",
													"src": "3348:118:12",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2181,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2179,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2169,
																	"src": "3449:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2180,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2171,
																	"src": "3453:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3449:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2175,
															"id": 2182,
															"nodeType": "Return",
															"src": "3442:12:12"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2187,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2185,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2169,
															"src": "3557:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2186,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3562:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3557:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2196,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2191,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2189,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2169,
																			"src": "3571:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2190,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3575:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3571:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2192,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3570:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2193,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2171,
																"src": "3580:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3570:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2195,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3584:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3570:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3557:28:12",
													"trueExpression": {
														"hexValue": "30",
														"id": 2188,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3566:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2175,
												"id": 2198,
												"nodeType": "Return",
												"src": "3550:35:12"
											}
										]
									},
									"documentation": {
										"id": 2167,
										"nodeType": "StructuredDocumentation",
										"src": "3033:215:12",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3263:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2169,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3279:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2200,
												"src": "3271:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3271:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2171,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3290:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2200,
												"src": "3282:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3282:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3270:22:12"
									},
									"returnParameters": {
										"id": 2175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2174,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2200,
												"src": "3316:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3316:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3315:9:12"
									},
									"scope": 2992,
									"src": "3254:339:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2325,
										"nodeType": "Block",
										"src": "4023:4097:12",
										"statements": [
											{
												"id": 2324,
												"nodeType": "UncheckedBlock",
												"src": "4034:4079:12",
												"statements": [
													{
														"assignments": [
															2213
														],
														"declarations": [
															{
																"constant": false,
																"id": 2213,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4367:5:12",
																"nodeType": "VariableDeclaration",
																"scope": 2324,
																"src": "4359:13:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2212,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4359:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2217,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2214,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2203,
																"src": "4375:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2215,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2205,
																"src": "4379:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4375:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4359:21:12"
													},
													{
														"assignments": [
															2219
														],
														"declarations": [
															{
																"constant": false,
																"id": 2219,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4448:5:12",
																"nodeType": "VariableDeclaration",
																"scope": 2324,
																"src": "4440:13:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2218,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4440:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2220,
														"nodeType": "VariableDeclarationStatement",
														"src": "4440:13:12"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "4521:125:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4540:30:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "4557:1:12"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "4560:1:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4567:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "4563:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4563:6:12"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "4550:6:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4550:20:12"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "4544:2:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4588:43:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "4605:2:12"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "4609:5:12"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4601:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4601:14:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "4620:2:12"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "4624:5:12"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "4617:2:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4617:13:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4597:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4597:34:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "4588:5:12"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2213,
																"isOffset": false,
																"isSlot": false,
																"src": "4609:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2213,
																"isOffset": false,
																"isSlot": false,
																"src": "4624:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2219,
																"isOffset": false,
																"isSlot": false,
																"src": "4588:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2203,
																"isOffset": false,
																"isSlot": false,
																"src": "4557:1:12",
																"valueSize": 1
															},
															{
																"declaration": 2205,
																"isOffset": false,
																"isSlot": false,
																"src": "4560:1:12",
																"valueSize": 1
															}
														],
														"id": 2221,
														"nodeType": "InlineAssembly",
														"src": "4512:134:12"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2222,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2219,
																"src": "4730:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2223,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4739:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4730:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2230,
														"nodeType": "IfStatement",
														"src": "4726:373:12",
														"trueBody": {
															"id": 2229,
															"nodeType": "Block",
															"src": "4742:357:12",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2227,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2225,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2213,
																			"src": "5064:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2226,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2207,
																			"src": "5072:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5064:19:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2211,
																	"id": 2228,
																	"nodeType": "Return",
																	"src": "5057:26:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2233,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2231,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2207,
																"src": "5208:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2232,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2219,
																"src": "5223:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5208:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2238,
														"nodeType": "IfStatement",
														"src": "5204:90:12",
														"trueBody": {
															"id": 2237,
															"nodeType": "Block",
															"src": "5230:64:12",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2234,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1944,
																			"src": "5256:20:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2235,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5256:22:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2236,
																	"nodeType": "RevertStatement",
																	"src": "5249:29:12"
																}
															]
														}
													},
													{
														"assignments": [
															2240
														],
														"declarations": [
															{
																"constant": false,
																"id": 2240,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5564:9:12",
																"nodeType": "VariableDeclaration",
																"scope": 2324,
																"src": "5556:17:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2239,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5556:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2241,
														"nodeType": "VariableDeclarationStatement",
														"src": "5556:17:12"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "5597:298:12",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "5668:38:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "5688:1:12"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5691:1:12"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "5694:11:12"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "5681:6:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5681:25:12"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "5668:9:12"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5791:41:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "5804:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "5814:9:12"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "5825:5:12"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "5811:2:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5811:20:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5800:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5800:32:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "5791:5:12"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5850:30:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "5863:5:12"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "5870:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5859:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5859:21:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "5850:5:12"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2207,
																"isOffset": false,
																"isSlot": false,
																"src": "5694:11:12",
																"valueSize": 1
															},
															{
																"declaration": 2213,
																"isOffset": false,
																"isSlot": false,
																"src": "5825:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2213,
																"isOffset": false,
																"isSlot": false,
																"src": "5850:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2213,
																"isOffset": false,
																"isSlot": false,
																"src": "5863:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2219,
																"isOffset": false,
																"isSlot": false,
																"src": "5791:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2219,
																"isOffset": false,
																"isSlot": false,
																"src": "5804:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2240,
																"isOffset": false,
																"isSlot": false,
																"src": "5668:9:12",
																"valueSize": 1
															},
															{
																"declaration": 2240,
																"isOffset": false,
																"isSlot": false,
																"src": "5814:9:12",
																"valueSize": 1
															},
															{
																"declaration": 2240,
																"isOffset": false,
																"isSlot": false,
																"src": "5870:9:12",
																"valueSize": 1
															},
															{
																"declaration": 2203,
																"isOffset": false,
																"isSlot": false,
																"src": "5688:1:12",
																"valueSize": 1
															},
															{
																"declaration": 2205,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:1:12",
																"valueSize": 1
															}
														],
														"id": 2242,
														"nodeType": "InlineAssembly",
														"src": "5588:307:12"
													},
													{
														"assignments": [
															2244
														],
														"declarations": [
															{
																"constant": false,
																"id": 2244,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "6112:4:12",
																"nodeType": "VariableDeclaration",
																"scope": 2324,
																"src": "6104:12:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2243,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6104:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2251,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2250,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2245,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2207,
																"src": "6119:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2248,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2246,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6134:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2247,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2207,
																			"src": "6138:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6134:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2249,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6133:17:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6119:31:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6104:46:12"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "6174:371:12",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "6241:37:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "6260:11:12"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "6273:4:12"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "6256:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6256:22:12"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "6241:11:12"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6348:25:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "6361:5:12"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "6368:4:12"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "6357:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6357:16:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "6348:5:12"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6491:39:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6511:1:12",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "6514:4:12"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "6507:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6507:12:12"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "6521:4:12"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "6503:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6503:23:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6528:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6499:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6499:31:12"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "6491:4:12"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2207,
																"isOffset": false,
																"isSlot": false,
																"src": "6241:11:12",
																"valueSize": 1
															},
															{
																"declaration": 2207,
																"isOffset": false,
																"isSlot": false,
																"src": "6260:11:12",
																"valueSize": 1
															},
															{
																"declaration": 2213,
																"isOffset": false,
																"isSlot": false,
																"src": "6348:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2213,
																"isOffset": false,
																"isSlot": false,
																"src": "6361:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2244,
																"isOffset": false,
																"isSlot": false,
																"src": "6273:4:12",
																"valueSize": 1
															},
															{
																"declaration": 2244,
																"isOffset": false,
																"isSlot": false,
																"src": "6368:4:12",
																"valueSize": 1
															},
															{
																"declaration": 2244,
																"isOffset": false,
																"isSlot": false,
																"src": "6491:4:12",
																"valueSize": 1
															},
															{
																"declaration": 2244,
																"isOffset": false,
																"isSlot": false,
																"src": "6514:4:12",
																"valueSize": 1
															},
															{
																"declaration": 2244,
																"isOffset": false,
																"isSlot": false,
																"src": "6521:4:12",
																"valueSize": 1
															}
														],
														"id": 2252,
														"nodeType": "InlineAssembly",
														"src": "6165:380:12"
													},
													{
														"expression": {
															"id": 2257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2253,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2213,
																"src": "6614:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2254,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2219,
																	"src": "6623:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2255,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2244,
																	"src": "6631:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6623:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6614:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2258,
														"nodeType": "ExpressionStatement",
														"src": "6614:21:12"
													},
													{
														"assignments": [
															2260
														],
														"declarations": [
															{
																"constant": false,
																"id": 2260,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6966:7:12",
																"nodeType": "VariableDeclaration",
																"scope": 2324,
																"src": "6958:15:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2259,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6958:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2267,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2263,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2261,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6977:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2262,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2207,
																			"src": "6981:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6977:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2264,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6976:17:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2265,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6996:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6976:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6958:39:12"
													},
													{
														"expression": {
															"id": 2274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2268,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2260,
																"src": "7218:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2273,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2269,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7229:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2272,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2270,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2207,
																		"src": "7233:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2271,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2260,
																		"src": "7247:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7233:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7229:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7218:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2275,
														"nodeType": "ExpressionStatement",
														"src": "7218:36:12"
													},
													{
														"expression": {
															"id": 2282,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2276,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2260,
																"src": "7288:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2281,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7299:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2278,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2207,
																		"src": "7303:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2279,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2260,
																		"src": "7317:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7303:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7299:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7288:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2283,
														"nodeType": "ExpressionStatement",
														"src": "7288:36:12"
													},
													{
														"expression": {
															"id": 2290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2284,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2260,
																"src": "7359:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2289,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7370:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2288,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2286,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2207,
																		"src": "7374:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2287,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2260,
																		"src": "7388:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7374:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7370:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7359:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2291,
														"nodeType": "ExpressionStatement",
														"src": "7359:36:12"
													},
													{
														"expression": {
															"id": 2298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2292,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2260,
																"src": "7430:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2293,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7441:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2296,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2294,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2207,
																		"src": "7445:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2295,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2260,
																		"src": "7459:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7445:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7441:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7430:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2299,
														"nodeType": "ExpressionStatement",
														"src": "7430:36:12"
													},
													{
														"expression": {
															"id": 2306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2300,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2260,
																"src": "7501:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2305,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2301,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7512:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2304,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2302,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2207,
																		"src": "7516:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2303,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2260,
																		"src": "7530:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7516:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7512:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7501:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2307,
														"nodeType": "ExpressionStatement",
														"src": "7501:36:12"
													},
													{
														"expression": {
															"id": 2314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2308,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2260,
																"src": "7573:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2313,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7584:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2310,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2207,
																		"src": "7588:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2311,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2260,
																		"src": "7602:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7588:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7584:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7573:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2315,
														"nodeType": "ExpressionStatement",
														"src": "7573:36:12"
													},
													{
														"expression": {
															"id": 2320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2316,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2210,
																"src": "8049:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2319,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2317,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2213,
																	"src": "8058:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2318,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2260,
																	"src": "8066:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8058:15:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8049:24:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2321,
														"nodeType": "ExpressionStatement",
														"src": "8049:24:12"
													},
													{
														"expression": {
															"id": 2322,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2210,
															"src": "8095:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2211,
														"id": 2323,
														"nodeType": "Return",
														"src": "8088:13:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2201,
										"nodeType": "StructuredDocumentation",
										"src": "3601:318:12",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3934:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2203,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3949:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2326,
												"src": "3941:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3941:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2205,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3960:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2326,
												"src": "3952:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3952:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2207,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3971:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2326,
												"src": "3963:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3963:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3940:43:12"
									},
									"returnParameters": {
										"id": 2211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2210,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "4015:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2326,
												"src": "4007:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4007:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4006:16:12"
									},
									"scope": 2992,
									"src": "3925:4195:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2368,
										"nodeType": "Block",
										"src": "8367:198:12",
										"statements": [
											{
												"assignments": [
													2342
												],
												"declarations": [
													{
														"constant": false,
														"id": 2342,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8386:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2368,
														"src": "8378:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2341,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8378:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2348,
												"initialValue": {
													"arguments": [
														{
															"id": 2344,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2329,
															"src": "8402:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2345,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2331,
															"src": "8405:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2346,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2333,
															"src": "8408:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2343,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2326,
															2369
														],
														"referencedDeclaration": 2326,
														"src": "8395:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8395:25:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8378:42:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2350,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2336,
																"src": "8452:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$1949",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$1949",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2349,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2991,
															"src": "8435:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1949_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2351,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8435:26:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2358,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2353,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2329,
																	"src": "8472:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2354,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2331,
																	"src": "8475:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2355,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2333,
																	"src": "8478:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2352,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8465:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8465:25:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2357,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8493:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8465:29:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8435:59:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2365,
												"nodeType": "IfStatement",
												"src": "8431:103:12",
												"trueBody": {
													"id": 2364,
													"nodeType": "Block",
													"src": "8496:38:12",
													"statements": [
														{
															"expression": {
																"id": 2362,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2360,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2342,
																	"src": "8511:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8521:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8511:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2363,
															"nodeType": "ExpressionStatement",
															"src": "8511:11:12"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2366,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2342,
													"src": "8551:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2340,
												"id": 2367,
												"nodeType": "Return",
												"src": "8544:13:12"
											}
										]
									},
									"documentation": {
										"id": 2327,
										"nodeType": "StructuredDocumentation",
										"src": "8128:123:12",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2369,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8266:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2329,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8281:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2369,
												"src": "8273:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8273:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2331,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8292:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2369,
												"src": "8284:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8284:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2333,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8303:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2369,
												"src": "8295:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8295:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2336,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8325:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2369,
												"src": "8316:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1949",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2335,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2334,
														"name": "Rounding",
														"nameLocations": [
															"8316:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1949,
														"src": "8316:8:12"
													},
													"referencedDeclaration": 1949,
													"src": "8316:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1949",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8272:62:12"
									},
									"returnParameters": {
										"id": 2340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2369,
												"src": "8358:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8358:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8357:9:12"
									},
									"scope": 2992,
									"src": "8257:308:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2480,
										"nodeType": "Block",
										"src": "8864:1616:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2377,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2372,
														"src": "8879:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2378,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8884:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8879:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2383,
												"nodeType": "IfStatement",
												"src": "8875:47:12",
												"trueBody": {
													"id": 2382,
													"nodeType": "Block",
													"src": "8887:35:12",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2380,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8909:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2376,
															"id": 2381,
															"nodeType": "Return",
															"src": "8902:8:12"
														}
													]
												}
											},
											{
												"assignments": [
													2385
												],
												"declarations": [
													{
														"constant": false,
														"id": 2385,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9621:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2480,
														"src": "9613:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2384,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9613:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2394,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2386,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9630:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2391,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2388,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2372,
																			"src": "9641:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2387,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2648,
																			2683
																		],
																		"referencedDeclaration": 2648,
																		"src": "9636:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2389,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9636:7:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2390,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9647:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9636:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2392,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9635:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9630:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9613:36:12"
											},
											{
												"id": 2479,
												"nodeType": "UncheckedBlock",
												"src": "10056:417:12",
												"statements": [
													{
														"expression": {
															"id": 2404,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2395,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2385,
																"src": "10081:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2400,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2396,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2385,
																				"src": "10091:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2399,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2397,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2372,
																					"src": "10100:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2398,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2385,
																					"src": "10104:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10100:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10091:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2401,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10090:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10115:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10090:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10081:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2405,
														"nodeType": "ExpressionStatement",
														"src": "10081:35:12"
													},
													{
														"expression": {
															"id": 2415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2406,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2385,
																"src": "10131:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2414,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2411,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2407,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2385,
																				"src": "10141:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2410,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2408,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2372,
																					"src": "10150:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2409,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2385,
																					"src": "10154:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10150:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10141:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2412,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10140:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2413,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10165:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10140:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10131:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2416,
														"nodeType": "ExpressionStatement",
														"src": "10131:35:12"
													},
													{
														"expression": {
															"id": 2426,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2417,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2385,
																"src": "10181:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2425,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2422,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2418,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2385,
																				"src": "10191:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2421,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2419,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2372,
																					"src": "10200:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2420,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2385,
																					"src": "10204:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10200:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10191:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2423,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10190:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2424,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10215:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10190:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10181:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2427,
														"nodeType": "ExpressionStatement",
														"src": "10181:35:12"
													},
													{
														"expression": {
															"id": 2437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2428,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2385,
																"src": "10231:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2433,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2429,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2385,
																				"src": "10241:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2432,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2430,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2372,
																					"src": "10250:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2431,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2385,
																					"src": "10254:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10250:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10241:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2434,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10240:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2435,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10265:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10240:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10231:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2438,
														"nodeType": "ExpressionStatement",
														"src": "10231:35:12"
													},
													{
														"expression": {
															"id": 2448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2439,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2385,
																"src": "10281:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2447,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2444,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2440,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2385,
																				"src": "10291:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2443,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2441,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2372,
																					"src": "10300:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2442,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2385,
																					"src": "10304:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10300:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10291:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2445,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10290:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2446,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10315:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10290:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10281:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2449,
														"nodeType": "ExpressionStatement",
														"src": "10281:35:12"
													},
													{
														"expression": {
															"id": 2459,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2450,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2385,
																"src": "10331:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2458,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2455,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2451,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2385,
																				"src": "10341:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2454,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2452,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2372,
																					"src": "10350:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2453,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2385,
																					"src": "10354:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10350:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10341:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2456,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10340:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2457,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10365:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10340:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10331:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2460,
														"nodeType": "ExpressionStatement",
														"src": "10331:35:12"
													},
													{
														"expression": {
															"id": 2470,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2461,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2385,
																"src": "10381:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2469,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2466,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2462,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2385,
																				"src": "10391:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2465,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2463,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2372,
																					"src": "10400:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2464,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2385,
																					"src": "10404:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10400:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10391:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2467,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10390:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2468,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10415:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10390:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10381:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2471,
														"nodeType": "ExpressionStatement",
														"src": "10381:35:12"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2473,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2385,
																	"src": "10442:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2476,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2474,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2372,
																		"src": "10450:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2475,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2385,
																		"src": "10454:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10450:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2472,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2143,
																"src": "10438:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2477,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10438:23:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2376,
														"id": 2478,
														"nodeType": "Return",
														"src": "10431:30:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2370,
										"nodeType": "StructuredDocumentation",
										"src": "8573:228:12",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2481,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8816:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2372,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8829:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2481,
												"src": "8821:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8821:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8820:11:12"
									},
									"returnParameters": {
										"id": 2376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2375,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2481,
												"src": "8855:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8855:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8854:9:12"
									},
									"scope": 2992,
									"src": "8807:1673:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2515,
										"nodeType": "Block",
										"src": "10661:169:12",
										"statements": [
											{
												"id": 2514,
												"nodeType": "UncheckedBlock",
												"src": "10672:151:12",
												"statements": [
													{
														"assignments": [
															2493
														],
														"declarations": [
															{
																"constant": false,
																"id": 2493,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10705:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 2514,
																"src": "10697:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2492,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10697:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2497,
														"initialValue": {
															"arguments": [
																{
																	"id": 2495,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2484,
																	"src": "10719:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2494,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2481,
																	2516
																],
																"referencedDeclaration": 2481,
																"src": "10714:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10714:7:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10697:24:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2512,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2498,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2493,
																"src": "10743:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2500,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2487,
																						"src": "10770:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1949",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1949",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2499,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2991,
																					"src": "10753:16:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1949_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10753:26:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2506,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2504,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2502,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2493,
																						"src": "10783:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2503,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2493,
																						"src": "10792:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10783:15:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2505,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2484,
																					"src": "10801:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10783:19:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10753:49:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2509,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10809:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2510,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10753:57:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2508,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10805:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2511,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10752:59:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10743:68:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2491,
														"id": 2513,
														"nodeType": "Return",
														"src": "10736:75:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2482,
										"nodeType": "StructuredDocumentation",
										"src": "10488:91:12",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2516,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10594:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2484,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10607:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2516,
												"src": "10599:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10599:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2487,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10619:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2516,
												"src": "10610:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1949",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2486,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2485,
														"name": "Rounding",
														"nameLocations": [
															"10610:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1949,
														"src": "10610:8:12"
													},
													"referencedDeclaration": 1949,
													"src": "10610:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1949",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10598:30:12"
									},
									"returnParameters": {
										"id": 2491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2490,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2516,
												"src": "10652:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10652:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10651:9:12"
									},
									"scope": 2992,
									"src": "10585:245:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2647,
										"nodeType": "Block",
										"src": "11027:958:12",
										"statements": [
											{
												"assignments": [
													2525
												],
												"declarations": [
													{
														"constant": false,
														"id": 2525,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11046:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2647,
														"src": "11038:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2524,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11038:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2527,
												"initialValue": {
													"hexValue": "30",
													"id": 2526,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11055:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11038:18:12"
											},
											{
												"id": 2644,
												"nodeType": "UncheckedBlock",
												"src": "11067:887:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2530,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2528,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2519,
																	"src": "11096:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2529,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11105:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11096:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2531,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11111:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11096:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2542,
														"nodeType": "IfStatement",
														"src": "11092:102:12",
														"trueBody": {
															"id": 2541,
															"nodeType": "Block",
															"src": "11114:80:12",
															"statements": [
																{
																	"expression": {
																		"id": 2535,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2533,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2519,
																			"src": "11133:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2534,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11143:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11133:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2536,
																	"nodeType": "ExpressionStatement",
																	"src": "11133:13:12"
																},
																{
																	"expression": {
																		"id": 2539,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2537,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2525,
																			"src": "11165:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2538,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11175:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11165:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2540,
																	"nodeType": "ExpressionStatement",
																	"src": "11165:13:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2545,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2543,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2519,
																	"src": "11212:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2544,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11221:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11212:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2546,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11226:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11212:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2557,
														"nodeType": "IfStatement",
														"src": "11208:99:12",
														"trueBody": {
															"id": 2556,
															"nodeType": "Block",
															"src": "11229:78:12",
															"statements": [
																{
																	"expression": {
																		"id": 2550,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2548,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2519,
																			"src": "11248:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2549,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11258:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11248:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2551,
																	"nodeType": "ExpressionStatement",
																	"src": "11248:12:12"
																},
																{
																	"expression": {
																		"id": 2554,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2552,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2525,
																			"src": "11279:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2553,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11289:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11279:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2555,
																	"nodeType": "ExpressionStatement",
																	"src": "11279:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2560,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2558,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2519,
																	"src": "11325:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11334:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11325:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2561,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11339:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11325:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2572,
														"nodeType": "IfStatement",
														"src": "11321:99:12",
														"trueBody": {
															"id": 2571,
															"nodeType": "Block",
															"src": "11342:78:12",
															"statements": [
																{
																	"expression": {
																		"id": 2565,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2563,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2519,
																			"src": "11361:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2564,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11371:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11361:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2566,
																	"nodeType": "ExpressionStatement",
																	"src": "11361:12:12"
																},
																{
																	"expression": {
																		"id": 2569,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2567,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2525,
																			"src": "11392:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2568,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11402:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11392:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2570,
																	"nodeType": "ExpressionStatement",
																	"src": "11392:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2575,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2573,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2519,
																	"src": "11438:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2574,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11447:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11438:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2576,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11452:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11438:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2587,
														"nodeType": "IfStatement",
														"src": "11434:99:12",
														"trueBody": {
															"id": 2586,
															"nodeType": "Block",
															"src": "11455:78:12",
															"statements": [
																{
																	"expression": {
																		"id": 2580,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2578,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2519,
																			"src": "11474:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2579,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11484:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11474:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2581,
																	"nodeType": "ExpressionStatement",
																	"src": "11474:12:12"
																},
																{
																	"expression": {
																		"id": 2584,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2582,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2525,
																			"src": "11505:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2583,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11515:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11505:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2585,
																	"nodeType": "ExpressionStatement",
																	"src": "11505:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2592,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2590,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2588,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2519,
																	"src": "11551:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2589,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11560:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11551:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2591,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11564:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11551:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2602,
														"nodeType": "IfStatement",
														"src": "11547:96:12",
														"trueBody": {
															"id": 2601,
															"nodeType": "Block",
															"src": "11567:76:12",
															"statements": [
																{
																	"expression": {
																		"id": 2595,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2519,
																			"src": "11586:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2594,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11596:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11586:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2596,
																	"nodeType": "ExpressionStatement",
																	"src": "11586:11:12"
																},
																{
																	"expression": {
																		"id": 2599,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2597,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2525,
																			"src": "11616:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2598,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11626:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11616:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2600,
																	"nodeType": "ExpressionStatement",
																	"src": "11616:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2607,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2605,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2603,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2519,
																	"src": "11661:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11670:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11661:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2606,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11674:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11661:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2617,
														"nodeType": "IfStatement",
														"src": "11657:96:12",
														"trueBody": {
															"id": 2616,
															"nodeType": "Block",
															"src": "11677:76:12",
															"statements": [
																{
																	"expression": {
																		"id": 2610,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2608,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2519,
																			"src": "11696:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2609,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11706:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11696:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2611,
																	"nodeType": "ExpressionStatement",
																	"src": "11696:11:12"
																},
																{
																	"expression": {
																		"id": 2614,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2612,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2525,
																			"src": "11726:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2613,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11736:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11726:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2615,
																	"nodeType": "ExpressionStatement",
																	"src": "11726:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2622,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2620,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2618,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2519,
																	"src": "11771:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2619,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11780:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11771:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2621,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11784:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11771:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2632,
														"nodeType": "IfStatement",
														"src": "11767:96:12",
														"trueBody": {
															"id": 2631,
															"nodeType": "Block",
															"src": "11787:76:12",
															"statements": [
																{
																	"expression": {
																		"id": 2625,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2623,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2519,
																			"src": "11806:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2624,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11816:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11806:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2626,
																	"nodeType": "ExpressionStatement",
																	"src": "11806:11:12"
																},
																{
																	"expression": {
																		"id": 2629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2627,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2525,
																			"src": "11836:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2628,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11846:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11836:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2630,
																	"nodeType": "ExpressionStatement",
																	"src": "11836:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2635,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2633,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2519,
																	"src": "11881:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2634,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11890:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11881:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2636,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11894:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11881:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2643,
														"nodeType": "IfStatement",
														"src": "11877:66:12",
														"trueBody": {
															"id": 2642,
															"nodeType": "Block",
															"src": "11897:46:12",
															"statements": [
																{
																	"expression": {
																		"id": 2640,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2638,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2525,
																			"src": "11916:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2639,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11926:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11916:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2641,
																	"nodeType": "ExpressionStatement",
																	"src": "11916:11:12"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2645,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2525,
													"src": "11971:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2523,
												"id": 2646,
												"nodeType": "Return",
												"src": "11964:13:12"
											}
										]
									},
									"documentation": {
										"id": 2517,
										"nodeType": "StructuredDocumentation",
										"src": "10838:122:12",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2648,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10975:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2519,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10988:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2648,
												"src": "10980:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10980:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10979:15:12"
									},
									"returnParameters": {
										"id": 2523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2522,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2648,
												"src": "11018:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11018:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11017:9:12"
									},
									"scope": 2992,
									"src": "10966:1019:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2682,
										"nodeType": "Block",
										"src": "12224:173:12",
										"statements": [
											{
												"id": 2681,
												"nodeType": "UncheckedBlock",
												"src": "12235:155:12",
												"statements": [
													{
														"assignments": [
															2660
														],
														"declarations": [
															{
																"constant": false,
																"id": 2660,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12268:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 2681,
																"src": "12260:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2659,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12260:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2664,
														"initialValue": {
															"arguments": [
																{
																	"id": 2662,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2651,
																	"src": "12282:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2661,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2648,
																	2683
																],
																"referencedDeclaration": 2648,
																"src": "12277:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2663,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12277:11:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12260:28:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2679,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2665,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2660,
																"src": "12310:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2674,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2667,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2654,
																						"src": "12337:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1949",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1949",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2666,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2991,
																					"src": "12320:16:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1949_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2668,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12320:26:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2673,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2671,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2669,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12350:1:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2670,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2660,
																						"src": "12355:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12350:11:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2672,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2651,
																					"src": "12364:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12350:19:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12320:49:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2676,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12376:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2677,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12320:57:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2675,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12372:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2678,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12319:59:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12310:68:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2658,
														"id": 2680,
														"nodeType": "Return",
														"src": "12303:75:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2649,
										"nodeType": "StructuredDocumentation",
										"src": "11993:145:12",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2683,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "12153:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2651,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12166:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2683,
												"src": "12158:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12158:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2654,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12182:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2683,
												"src": "12173:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1949",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2653,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2652,
														"name": "Rounding",
														"nameLocations": [
															"12173:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1949,
														"src": "12173:8:12"
													},
													"referencedDeclaration": 1949,
													"src": "12173:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1949",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12157:34:12"
									},
									"returnParameters": {
										"id": 2658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2657,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2683,
												"src": "12215:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12215:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12214:9:12"
									},
									"scope": 2992,
									"src": "12144:253:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2811,
										"nodeType": "Block",
										"src": "12596:886:12",
										"statements": [
											{
												"assignments": [
													2692
												],
												"declarations": [
													{
														"constant": false,
														"id": 2692,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12615:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2811,
														"src": "12607:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2691,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12607:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2694,
												"initialValue": {
													"hexValue": "30",
													"id": 2693,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12624:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12607:18:12"
											},
											{
												"id": 2808,
												"nodeType": "UncheckedBlock",
												"src": "12636:815:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2699,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2695,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2686,
																"src": "12665:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2698,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2696,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12674:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12680:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12674:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12665:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2711,
														"nodeType": "IfStatement",
														"src": "12661:106:12",
														"trueBody": {
															"id": 2710,
															"nodeType": "Block",
															"src": "12684:83:12",
															"statements": [
																{
																	"expression": {
																		"id": 2704,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2700,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2686,
																			"src": "12703:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2703,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2701,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12712:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2702,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12718:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12712:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12703:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2705,
																	"nodeType": "ExpressionStatement",
																	"src": "12703:17:12"
																},
																{
																	"expression": {
																		"id": 2708,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2706,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2692,
																			"src": "12739:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2707,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12749:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12739:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2709,
																	"nodeType": "ExpressionStatement",
																	"src": "12739:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2716,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2712,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2686,
																"src": "12785:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2715,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2713,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12794:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2714,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12800:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12794:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12785:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2728,
														"nodeType": "IfStatement",
														"src": "12781:106:12",
														"trueBody": {
															"id": 2727,
															"nodeType": "Block",
															"src": "12804:83:12",
															"statements": [
																{
																	"expression": {
																		"id": 2721,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2717,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2686,
																			"src": "12823:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2720,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2718,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12832:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2719,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12838:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12832:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12823:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2722,
																	"nodeType": "ExpressionStatement",
																	"src": "12823:17:12"
																},
																{
																	"expression": {
																		"id": 2725,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2723,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2692,
																			"src": "12859:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2724,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12869:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12859:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2726,
																	"nodeType": "ExpressionStatement",
																	"src": "12859:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2733,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2729,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2686,
																"src": "12905:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2732,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2730,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12914:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2731,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12920:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12914:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12905:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2745,
														"nodeType": "IfStatement",
														"src": "12901:106:12",
														"trueBody": {
															"id": 2744,
															"nodeType": "Block",
															"src": "12924:83:12",
															"statements": [
																{
																	"expression": {
																		"id": 2738,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2734,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2686,
																			"src": "12943:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2737,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2735,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12952:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2736,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12958:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12952:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12943:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2739,
																	"nodeType": "ExpressionStatement",
																	"src": "12943:17:12"
																},
																{
																	"expression": {
																		"id": 2742,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2740,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2692,
																			"src": "12979:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2741,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12989:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12979:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2743,
																	"nodeType": "ExpressionStatement",
																	"src": "12979:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2750,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2746,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2686,
																"src": "13025:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2749,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2747,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13034:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2748,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13040:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "13034:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "13025:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2762,
														"nodeType": "IfStatement",
														"src": "13021:103:12",
														"trueBody": {
															"id": 2761,
															"nodeType": "Block",
															"src": "13043:81:12",
															"statements": [
																{
																	"expression": {
																		"id": 2755,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2751,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2686,
																			"src": "13062:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2754,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2752,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13071:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2753,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13077:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "13071:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "13062:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2756,
																	"nodeType": "ExpressionStatement",
																	"src": "13062:16:12"
																},
																{
																	"expression": {
																		"id": 2759,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2757,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2692,
																			"src": "13097:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2758,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13107:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "13097:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2760,
																	"nodeType": "ExpressionStatement",
																	"src": "13097:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2767,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2763,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2686,
																"src": "13142:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2766,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2764,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13151:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2765,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13157:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "13151:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "13142:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2779,
														"nodeType": "IfStatement",
														"src": "13138:103:12",
														"trueBody": {
															"id": 2778,
															"nodeType": "Block",
															"src": "13160:81:12",
															"statements": [
																{
																	"expression": {
																		"id": 2772,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2768,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2686,
																			"src": "13179:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2771,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2769,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13188:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2770,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13194:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "13188:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "13179:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2773,
																	"nodeType": "ExpressionStatement",
																	"src": "13179:16:12"
																},
																{
																	"expression": {
																		"id": 2776,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2774,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2692,
																			"src": "13214:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2775,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13224:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "13214:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2777,
																	"nodeType": "ExpressionStatement",
																	"src": "13214:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2784,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2780,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2686,
																"src": "13259:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2783,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2781,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13268:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2782,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13274:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "13268:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "13259:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2796,
														"nodeType": "IfStatement",
														"src": "13255:103:12",
														"trueBody": {
															"id": 2795,
															"nodeType": "Block",
															"src": "13277:81:12",
															"statements": [
																{
																	"expression": {
																		"id": 2789,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2785,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2686,
																			"src": "13296:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2788,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2786,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13305:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2787,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13311:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "13305:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "13296:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2790,
																	"nodeType": "ExpressionStatement",
																	"src": "13296:16:12"
																},
																{
																	"expression": {
																		"id": 2793,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2791,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2692,
																			"src": "13331:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2792,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13341:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "13331:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2794,
																	"nodeType": "ExpressionStatement",
																	"src": "13331:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2801,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2797,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2686,
																"src": "13376:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2800,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2798,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13385:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2799,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13391:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13385:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13376:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2807,
														"nodeType": "IfStatement",
														"src": "13372:68:12",
														"trueBody": {
															"id": 2806,
															"nodeType": "Block",
															"src": "13394:46:12",
															"statements": [
																{
																	"expression": {
																		"id": 2804,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2802,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2692,
																			"src": "13413:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2803,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13423:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13413:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2805,
																	"nodeType": "ExpressionStatement",
																	"src": "13413:11:12"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2809,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2692,
													"src": "13468:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2690,
												"id": 2810,
												"nodeType": "Return",
												"src": "13461:13:12"
											}
										]
									},
									"documentation": {
										"id": 2684,
										"nodeType": "StructuredDocumentation",
										"src": "12405:123:12",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2812,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12543:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2686,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12557:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2812,
												"src": "12549:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2685,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12549:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12548:15:12"
									},
									"returnParameters": {
										"id": 2690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2689,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2812,
												"src": "12587:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2688,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12587:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12586:9:12"
									},
									"scope": 2992,
									"src": "12534:948:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2846,
										"nodeType": "Block",
										"src": "13723:175:12",
										"statements": [
											{
												"id": 2845,
												"nodeType": "UncheckedBlock",
												"src": "13734:157:12",
												"statements": [
													{
														"assignments": [
															2824
														],
														"declarations": [
															{
																"constant": false,
																"id": 2824,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13767:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 2845,
																"src": "13759:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2823,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13759:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2828,
														"initialValue": {
															"arguments": [
																{
																	"id": 2826,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2815,
																	"src": "13782:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2825,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2812,
																	2847
																],
																"referencedDeclaration": 2812,
																"src": "13776:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2827,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13776:12:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13759:29:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2843,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2829,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2824,
																"src": "13810:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2838,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2831,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2818,
																						"src": "13837:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1949",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1949",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2830,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2991,
																					"src": "13820:16:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1949_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2832,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13820:26:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2837,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2835,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2833,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13850:2:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2834,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2824,
																						"src": "13856:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13850:12:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2836,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2815,
																					"src": "13865:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13850:20:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13820:50:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2840,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13877:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2841,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13820:58:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2839,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13873:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2842,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13819:60:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13810:69:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2822,
														"id": 2844,
														"nodeType": "Return",
														"src": "13803:76:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2813,
										"nodeType": "StructuredDocumentation",
										"src": "13490:146:12",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2847,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13651:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2815,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13665:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2847,
												"src": "13657:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2814,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13657:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2818,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13681:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2847,
												"src": "13672:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1949",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2817,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2816,
														"name": "Rounding",
														"nameLocations": [
															"13672:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1949,
														"src": "13672:8:12"
													},
													"referencedDeclaration": 1949,
													"src": "13672:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1949",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13656:34:12"
									},
									"returnParameters": {
										"id": 2822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2821,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2847,
												"src": "13714:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13714:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13713:9:12"
									},
									"scope": 2992,
									"src": "13642:256:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2933,
										"nodeType": "Block",
										"src": "14226:624:12",
										"statements": [
											{
												"assignments": [
													2856
												],
												"declarations": [
													{
														"constant": false,
														"id": 2856,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "14245:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2933,
														"src": "14237:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2855,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14237:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2858,
												"initialValue": {
													"hexValue": "30",
													"id": 2857,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14254:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14237:18:12"
											},
											{
												"id": 2930,
												"nodeType": "UncheckedBlock",
												"src": "14266:553:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2863,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2861,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2859,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2850,
																	"src": "14295:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2860,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14304:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "14295:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2862,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14310:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14295:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2873,
														"nodeType": "IfStatement",
														"src": "14291:101:12",
														"trueBody": {
															"id": 2872,
															"nodeType": "Block",
															"src": "14313:79:12",
															"statements": [
																{
																	"expression": {
																		"id": 2866,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2864,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2850,
																			"src": "14332:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2865,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14342:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "14332:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2867,
																	"nodeType": "ExpressionStatement",
																	"src": "14332:13:12"
																},
																{
																	"expression": {
																		"id": 2870,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2868,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2856,
																			"src": "14364:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2869,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14374:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14364:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2871,
																	"nodeType": "ExpressionStatement",
																	"src": "14364:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2878,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2876,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2874,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2850,
																	"src": "14410:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2875,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14419:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14410:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2877,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14424:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14410:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2888,
														"nodeType": "IfStatement",
														"src": "14406:98:12",
														"trueBody": {
															"id": 2887,
															"nodeType": "Block",
															"src": "14427:77:12",
															"statements": [
																{
																	"expression": {
																		"id": 2881,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2879,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2850,
																			"src": "14446:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2880,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14456:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14446:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2882,
																	"nodeType": "ExpressionStatement",
																	"src": "14446:12:12"
																},
																{
																	"expression": {
																		"id": 2885,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2883,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2856,
																			"src": "14477:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2884,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14487:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14477:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2886,
																	"nodeType": "ExpressionStatement",
																	"src": "14477:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2893,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2891,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2889,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2850,
																	"src": "14522:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2890,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14531:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14522:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2892,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14536:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14522:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2903,
														"nodeType": "IfStatement",
														"src": "14518:98:12",
														"trueBody": {
															"id": 2902,
															"nodeType": "Block",
															"src": "14539:77:12",
															"statements": [
																{
																	"expression": {
																		"id": 2896,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2894,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2850,
																			"src": "14558:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2895,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14568:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14558:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2897,
																	"nodeType": "ExpressionStatement",
																	"src": "14558:12:12"
																},
																{
																	"expression": {
																		"id": 2900,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2898,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2856,
																			"src": "14589:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2899,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14599:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14589:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2901,
																	"nodeType": "ExpressionStatement",
																	"src": "14589:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2906,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2904,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2850,
																	"src": "14634:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2905,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14643:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14634:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2907,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14648:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14634:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2918,
														"nodeType": "IfStatement",
														"src": "14630:98:12",
														"trueBody": {
															"id": 2917,
															"nodeType": "Block",
															"src": "14651:77:12",
															"statements": [
																{
																	"expression": {
																		"id": 2911,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2909,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2850,
																			"src": "14670:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2910,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14680:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14670:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2912,
																	"nodeType": "ExpressionStatement",
																	"src": "14670:12:12"
																},
																{
																	"expression": {
																		"id": 2915,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2913,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2856,
																			"src": "14701:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2914,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14711:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14701:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2916,
																	"nodeType": "ExpressionStatement",
																	"src": "14701:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2923,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2921,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2919,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2850,
																	"src": "14746:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2920,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14755:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14746:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2922,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14759:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14746:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2929,
														"nodeType": "IfStatement",
														"src": "14742:66:12",
														"trueBody": {
															"id": 2928,
															"nodeType": "Block",
															"src": "14762:46:12",
															"statements": [
																{
																	"expression": {
																		"id": 2926,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2924,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2856,
																			"src": "14781:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2925,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14791:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14781:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2927,
																	"nodeType": "ExpressionStatement",
																	"src": "14781:11:12"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2931,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2856,
													"src": "14836:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2854,
												"id": 2932,
												"nodeType": "Return",
												"src": "14829:13:12"
											}
										]
									},
									"documentation": {
										"id": 2848,
										"nodeType": "StructuredDocumentation",
										"src": "13906:251:12",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2934,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14172:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2850,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14187:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2934,
												"src": "14179:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2849,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14179:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14178:15:12"
									},
									"returnParameters": {
										"id": 2854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2853,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2934,
												"src": "14217:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14217:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14216:9:12"
									},
									"scope": 2992,
									"src": "14163:687:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2971,
										"nodeType": "Block",
										"src": "15093:182:12",
										"statements": [
											{
												"id": 2970,
												"nodeType": "UncheckedBlock",
												"src": "15104:164:12",
												"statements": [
													{
														"assignments": [
															2946
														],
														"declarations": [
															{
																"constant": false,
																"id": 2946,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "15137:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 2970,
																"src": "15129:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2945,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "15129:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2950,
														"initialValue": {
															"arguments": [
																{
																	"id": 2948,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2937,
																	"src": "15153:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2947,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2934,
																	2972
																],
																"referencedDeclaration": 2934,
																"src": "15146:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2949,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15146:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "15129:30:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2968,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2951,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2946,
																"src": "15181:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2963,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2953,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2940,
																						"src": "15208:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1949",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1949",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2952,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2991,
																					"src": "15191:16:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1949_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2954,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "15191:26:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2962,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2960,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2955,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "15221:1:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2958,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2956,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2946,
																									"src": "15227:6:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2957,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "15237:1:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "15227:11:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2959,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "15226:13:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "15221:18:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2961,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2937,
																					"src": "15242:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "15221:26:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "15191:56:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2965,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15254:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2966,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "15191:64:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2964,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15250:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2967,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "15190:66:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "15181:75:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2944,
														"id": 2969,
														"nodeType": "Return",
														"src": "15174:82:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2935,
										"nodeType": "StructuredDocumentation",
										"src": "14858:147:12",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2972,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "15020:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2937,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15035:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2972,
												"src": "15027:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2936,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15027:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2940,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15051:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2972,
												"src": "15042:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1949",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2939,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2938,
														"name": "Rounding",
														"nameLocations": [
															"15042:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1949,
														"src": "15042:8:12"
													},
													"referencedDeclaration": 1949,
													"src": "15042:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1949",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15026:34:12"
									},
									"returnParameters": {
										"id": 2944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2943,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2972,
												"src": "15084:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2942,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15084:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15083:9:12"
									},
									"scope": 2992,
									"src": "15011:264:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2990,
										"nodeType": "Block",
										"src": "15478:50:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 2986,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2983,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2976,
																	"src": "15502:8:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$1949",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$1949",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 2982,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15496:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 2981,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15496:5:12",
																	"typeDescriptions": {}
																}
															},
															"id": 2984,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15496:15:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 2985,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15514:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15496:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 2987,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15519:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15496:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2980,
												"id": 2989,
												"nodeType": "Return",
												"src": "15489:31:12"
											}
										]
									},
									"documentation": {
										"id": 2973,
										"nodeType": "StructuredDocumentation",
										"src": "15283:115:12",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 2991,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15413:16:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2976,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15439:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2991,
												"src": "15430:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1949",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2975,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2974,
														"name": "Rounding",
														"nameLocations": [
															"15430:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1949,
														"src": "15430:8:12"
													},
													"referencedDeclaration": 1949,
													"src": "15430:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1949",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15429:19:12"
									},
									"returnParameters": {
										"id": 2980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2979,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2991,
												"src": "15472:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2978,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15472:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15471:6:12"
									},
									"scope": 2992,
									"src": "15404:124:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2993,
							"src": "211:15320:12",
							"usedErrors": [
								1944
							],
							"usedEvents": []
						}
					],
					"src": "106:15427:12"
				},
				"id": 12
			},
			"openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							3097
						]
					},
					"id": 3098,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2994,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2995,
								"nodeType": "StructuredDocumentation",
								"src": "140:82:13",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3097,
							"linearizedBaseContracts": [
								3097
							],
							"name": "SignedMath",
							"nameLocation": "232:10:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3012,
										"nodeType": "Block",
										"src": "388:39:13",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3007,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3005,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2998,
															"src": "406:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 3006,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3000,
															"src": "410:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "406:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3009,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3000,
														"src": "418:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "406:13:13",
													"trueExpression": {
														"id": 3008,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2998,
														"src": "414:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3004,
												"id": 3011,
												"nodeType": "Return",
												"src": "399:20:13"
											}
										]
									},
									"documentation": {
										"id": 2996,
										"nodeType": "StructuredDocumentation",
										"src": "250:68:13",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 3013,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "333:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2998,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "344:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 3013,
												"src": "337:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2997,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "337:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3000,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "354:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 3013,
												"src": "347:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2999,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "347:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "336:20:13"
									},
									"returnParameters": {
										"id": 3004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3003,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3013,
												"src": "380:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3002,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "380:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "379:8:13"
									},
									"scope": 3097,
									"src": "324:103:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3030,
										"nodeType": "Block",
										"src": "574:39:13",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3025,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3023,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3016,
															"src": "592:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 3024,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3018,
															"src": "596:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "592:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3027,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3018,
														"src": "604:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "592:13:13",
													"trueExpression": {
														"id": 3026,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3016,
														"src": "600:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3022,
												"id": 3029,
												"nodeType": "Return",
												"src": "585:20:13"
											}
										]
									},
									"documentation": {
										"id": 3014,
										"nodeType": "StructuredDocumentation",
										"src": "435:69:13",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 3031,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "519:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3016,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "530:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 3031,
												"src": "523:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3015,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "523:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3018,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "540:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 3031,
												"src": "533:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3017,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "533:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "522:20:13"
									},
									"returnParameters": {
										"id": 3022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3021,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3031,
												"src": "566:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3020,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "566:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "565:8:13"
									},
									"scope": 3097,
									"src": "510:103:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3074,
										"nodeType": "Block",
										"src": "824:166:13",
										"statements": [
											{
												"assignments": [
													3042
												],
												"declarations": [
													{
														"constant": false,
														"id": 3042,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "895:1:13",
														"nodeType": "VariableDeclaration",
														"scope": 3074,
														"src": "888:8:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3041,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "888:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3055,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3045,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3043,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3034,
																	"src": "900:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 3044,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3036,
																	"src": "904:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "900:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3046,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "899:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3052,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3049,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3047,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3034,
																				"src": "911:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3048,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3036,
																				"src": "915:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "911:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3050,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "910:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3051,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "921:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "910:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3053,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "909:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "899:24:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "888:35:13"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3056,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3042,
														"src": "941:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3070,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3064,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3061,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3042,
																						"src": "961:1:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 3060,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "953:7:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 3059,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "953:7:13",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 3062,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "953:10:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 3063,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "967:3:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "953:17:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3058,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "946:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 3057,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "946:6:13",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3065,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "946:25:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3068,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3066,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3034,
																				"src": "975:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3067,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3036,
																				"src": "979:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "975:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3069,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "974:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "946:35:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3071,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "945:37:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "941:41:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3040,
												"id": 3073,
												"nodeType": "Return",
												"src": "934:48:13"
											}
										]
									},
									"documentation": {
										"id": 3032,
										"nodeType": "StructuredDocumentation",
										"src": "621:129:13",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 3075,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "765:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3034,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "780:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 3075,
												"src": "773:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3033,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "773:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3036,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "790:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 3075,
												"src": "783:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3035,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "783:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "772:20:13"
									},
									"returnParameters": {
										"id": 3040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3039,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3075,
												"src": "816:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3038,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "816:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "815:8:13"
									},
									"scope": 3097,
									"src": "756:234:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3095,
										"nodeType": "Block",
										"src": "1139:163:13",
										"statements": [
											{
												"id": 3094,
												"nodeType": "UncheckedBlock",
												"src": "1150:145:13",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 3087,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3085,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3078,
																			"src": "1267:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 3086,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1272:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1267:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 3090,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1280:2:13",
																		"subExpression": {
																			"id": 3089,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3078,
																			"src": "1281:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 3091,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1267:15:13",
																	"trueExpression": {
																		"id": 3088,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3078,
																		"src": "1276:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 3084,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1259:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 3083,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1259:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 3092,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1259:24:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3082,
														"id": 3093,
														"nodeType": "Return",
														"src": "1252:31:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3076,
										"nodeType": "StructuredDocumentation",
										"src": "998:80:13",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 3096,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1093:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3078,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1104:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 3096,
												"src": "1097:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3077,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1097:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1096:10:13"
									},
									"returnParameters": {
										"id": 3082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3081,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3096,
												"src": "1130:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3080,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1130:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1129:9:13"
									},
									"scope": 3097,
									"src": "1084:218:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3098,
							"src": "224:1081:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:1195:13"
				},
				"id": 13
			}
		}
	}
}